/*! p5sound.js v0.0.1 June 22, 2023 */
(function (f) {
  if (typeof exports === 'object' && typeof module !== 'undefined') {
    module.exports = f()
  } else if (typeof define === 'function' && define.amd) {
    define([], f)
  } else {
    var g;
    if (typeof window !== 'undefined') {
      g = window
    } else if (typeof global !== 'undefined') {
      g = global
    } else if (typeof self !== 'undefined') {
      g = self
    } else {
      g = this
    }
    g.p5sound = f()
  }
}) (function () {
  var define,
  module,
  exports;
  return (function () {
    function r(e, n, t) {
      function o(i, f) {
        if (!n[i]) {
          if (!e[i]) {
            var c = 'function' == typeof require && require;
            if (!f && c) return c(i, !0);
            if (u) return u(i, !0);
            var a = new Error('Cannot find module \'' + i + '\'');
            throw a.code = 'MODULE_NOT_FOUND',
            a
          }
          var p = n[i] = {
            exports: {
            }
          };
          e[i][0].call(p.exports, function (r) {
            var n = e[i][1][r];
            return o(n || r)
          }, p, p.exports, r, e, n, t)
        }
        return n[i].exports
      }
      for (var u = 'function' == typeof require && require, i = 0; i < t.length; i++) o(t[i]);
      return o
    }
    return r
  }) () ({
    1: [
      function (_dereq_, module, exports) {
        module.exports = function (it) {
          if (typeof it != 'function') {
            throw TypeError(String(it) + ' is not a function');
          }
          return it;
        };
      },
      {
      }
    ],
    2: [
      function (_dereq_, module, exports) {
        var isObject = _dereq_('../internals/is-object');
        module.exports = function (it) {
          if (!isObject(it) && it !== null) {
            throw TypeError('Can\'t set ' + String(it) + ' as a prototype');
          }
          return it;
        };
      },
      {
        '../internals/is-object': 56
      }
    ],
    3: [
      function (_dereq_, module, exports) {
        var wellKnownSymbol = _dereq_('../internals/well-known-symbol');
        var create = _dereq_('../internals/object-create');
        var definePropertyModule = _dereq_('../internals/object-define-property');
        var UNSCOPABLES = wellKnownSymbol('unscopables');
        var ArrayPrototype = Array.prototype; // Array.prototype[@@unscopables]
        // https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
        if (ArrayPrototype[UNSCOPABLES] == undefined) {
          definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {
            configurable: true,
            value: create(null)
          });
        } // add a key to Array.prototype[@@unscopables]

        module.exports = function (key) {
          ArrayPrototype[UNSCOPABLES][key] = true;
        };
      },
      {
        '../internals/object-create': 69,
        '../internals/object-define-property': 71,
        '../internals/well-known-symbol': 113
      }
    ],
    4: [
      function (_dereq_, module, exports) {
        module.exports = function (it, Constructor, name) {
          if (!(it instanceof Constructor)) {
            throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');
          }
          return it;
        };
      },
      {
      }
    ],
    5: [
      function (_dereq_, module, exports) {
        var isObject = _dereq_('../internals/is-object');
        module.exports = function (it) {
          if (!isObject(it)) {
            throw TypeError(String(it) + ' is not an object');
          }
          return it;
        };
      },
      {
        '../internals/is-object': 56
      }
    ],
    6: [
      function (_dereq_, module, exports) {
        'use strict';
        var toObject = _dereq_('../internals/to-object');
        var toAbsoluteIndex = _dereq_('../internals/to-absolute-index');
        var toLength = _dereq_('../internals/to-length'); // `Array.prototype.fill` method implementation
        // https://tc39.github.io/ecma262/#sec-array.prototype.fill
        module.exports = function fill(value        /* , start = 0, end = @length */
        ) {
          var O = toObject(this);
          var length = toLength(O.length);
          var argumentsLength = arguments.length;
          var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : undefined, length);
          var end = argumentsLength > 2 ? arguments[2] : undefined;
          var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
          while (endPos > index) O[index++] = value;
          return O;
        };
      },
      {
        '../internals/to-absolute-index': 103,
        '../internals/to-length': 106,
        '../internals/to-object': 107
      }
    ],
    7: [
      function (_dereq_, module, exports) {
        'use strict';
        var $forEach = _dereq_('../internals/array-iteration').forEach;
        var arrayMethodIsStrict = _dereq_('../internals/array-method-is-strict');
        var arrayMethodUsesToLength = _dereq_('../internals/array-method-uses-to-length');
        var STRICT_METHOD = arrayMethodIsStrict('forEach');
        var USES_TO_LENGTH = arrayMethodUsesToLength('forEach'); // `Array.prototype.forEach` method implementation
        // https://tc39.github.io/ecma262/#sec-array.prototype.foreach
        module.exports = !STRICT_METHOD || !USES_TO_LENGTH ? function forEach(callbackfn        /* , thisArg */
        ) {
          return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
        }
         : [
        ].forEach;
      },
      {
        '../internals/array-iteration': 9,
        '../internals/array-method-is-strict': 11,
        '../internals/array-method-uses-to-length': 12
      }
    ],
    8: [
      function (_dereq_, module, exports) {
        var toIndexedObject = _dereq_('../internals/to-indexed-object');
        var toLength = _dereq_('../internals/to-length');
        var toAbsoluteIndex = _dereq_('../internals/to-absolute-index'); // `Array.prototype.{ indexOf, includes }` methods implementation
        var createMethod = function (IS_INCLUDES) {
          return function ($this, el, fromIndex) {
            var O = toIndexedObject($this);
            var length = toLength(O.length);
            var index = toAbsoluteIndex(fromIndex, length);
            var value; // Array#includes uses SameValueZero equality algorithm
            // eslint-disable-next-line no-self-compare
            if (IS_INCLUDES && el != el) while (length > index) {
              value = O[index++]; // eslint-disable-next-line no-self-compare
              if (value != value) return true; // Array#indexOf ignores holes, Array#includes - not
            } else for (; length > index; index++) {
              if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
            }
            return !IS_INCLUDES && - 1;
          };
        };
        module.exports = {
          // `Array.prototype.includes` method
          // https://tc39.github.io/ecma262/#sec-array.prototype.includes
          includes: createMethod(true),
          // `Array.prototype.indexOf` method
          // https://tc39.github.io/ecma262/#sec-array.prototype.indexof
          indexOf: createMethod(false)
        };
      },
      {
        '../internals/to-absolute-index': 103,
        '../internals/to-indexed-object': 104,
        '../internals/to-length': 106
      }
    ],
    9: [
      function (_dereq_, module, exports) {
        var bind = _dereq_('../internals/function-bind-context');
        var IndexedObject = _dereq_('../internals/indexed-object');
        var toObject = _dereq_('../internals/to-object');
        var toLength = _dereq_('../internals/to-length');
        var arraySpeciesCreate = _dereq_('../internals/array-species-create');
        var push = [
        ].push; // `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation
        var createMethod = function (TYPE) {
          var IS_MAP = TYPE == 1;
          var IS_FILTER = TYPE == 2;
          var IS_SOME = TYPE == 3;
          var IS_EVERY = TYPE == 4;
          var IS_FIND_INDEX = TYPE == 6;
          var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
          return function ($this, callbackfn, that, specificCreate) {
            var O = toObject($this);
            var self = IndexedObject(O);
            var boundFunction = bind(callbackfn, that, 3);
            var length = toLength(self.length);
            var index = 0;
            var create = specificCreate || arraySpeciesCreate;
            var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
            var value,
            result;
            for (; length > index; index++) if (NO_HOLES || index in self) {
              value = self[index];
              result = boundFunction(value, index, O);
              if (TYPE) {
                if (IS_MAP) target[index] = result; // map
                 else if (result) switch (TYPE) {
                  case 3:
                    return true;
                    // some
                  case 5:
                    return value;
                    // find
                  case 6:
                    return index;
                    // findIndex
                  case 2:
                    push.call(target, value);
                    // filter
                } else if (IS_EVERY) return false; // every
              }
            }
            return IS_FIND_INDEX ? - 1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
          };
        };
        module.exports = {
          // `Array.prototype.forEach` method
          // https://tc39.github.io/ecma262/#sec-array.prototype.foreach
          forEach: createMethod(0),
          // `Array.prototype.map` method
          // https://tc39.github.io/ecma262/#sec-array.prototype.map
          map: createMethod(1),
          // `Array.prototype.filter` method
          // https://tc39.github.io/ecma262/#sec-array.prototype.filter
          filter: createMethod(2),
          // `Array.prototype.some` method
          // https://tc39.github.io/ecma262/#sec-array.prototype.some
          some: createMethod(3),
          // `Array.prototype.every` method
          // https://tc39.github.io/ecma262/#sec-array.prototype.every
          every: createMethod(4),
          // `Array.prototype.find` method
          // https://tc39.github.io/ecma262/#sec-array.prototype.find
          find: createMethod(5),
          // `Array.prototype.findIndex` method
          // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex
          findIndex: createMethod(6)
        };
      },
      {
        '../internals/array-species-create': 13,
        '../internals/function-bind-context': 39,
        '../internals/indexed-object': 48,
        '../internals/to-length': 106,
        '../internals/to-object': 107
      }
    ],
    10: [
      function (_dereq_, module, exports) {
        var fails = _dereq_('../internals/fails');
        var wellKnownSymbol = _dereq_('../internals/well-known-symbol');
        var V8_VERSION = _dereq_('../internals/engine-v8-version');
        var SPECIES = wellKnownSymbol('species');
        module.exports = function (METHOD_NAME) {
          // We can't use this feature detection in V8 since it causes
          // deoptimization and serious performance degradation
          // https://github.com/zloirock/core-js/issues/677
          return V8_VERSION >= 51 || !fails(function () {
            var array = [
            ];
            var constructor = array.constructor = {
            };
            constructor[SPECIES] = function () {
              return {
                foo: 1
              };
            };
            return array[METHOD_NAME](Boolean).foo !== 1;
          });
        };
      },
      {
        '../internals/engine-v8-version': 34,
        '../internals/fails': 37,
        '../internals/well-known-symbol': 113
      }
    ],
    11: [
      function (_dereq_, module, exports) {
        'use strict';
        var fails = _dereq_('../internals/fails');
        module.exports = function (METHOD_NAME, argument) {
          var method = [
          ][METHOD_NAME];
          return !!method && fails(function () {
            // eslint-disable-next-line no-useless-call,no-throw-literal
            method.call(null, argument || function () {
              throw 1;
            }, 1);
          });
        };
      },
      {
        '../internals/fails': 37
      }
    ],
    12: [
      function (_dereq_, module, exports) {
        var DESCRIPTORS = _dereq_('../internals/descriptors');
        var fails = _dereq_('../internals/fails');
        var has = _dereq_('../internals/has');
        var defineProperty = Object.defineProperty;
        var cache = {
        };
        var thrower = function (it) {
          throw it;
        };
        module.exports = function (METHOD_NAME, options) {
          if (has(cache, METHOD_NAME)) return cache[METHOD_NAME];
          if (!options) options = {
          };
          var method = [
          ][METHOD_NAME];
          var ACCESSORS = has(options, 'ACCESSORS') ? options.ACCESSORS : false;
          var argument0 = has(options, 0) ? options[0] : thrower;
          var argument1 = has(options, 1) ? options[1] : undefined;
          return cache[METHOD_NAME] = !!method && !fails(function () {
            if (ACCESSORS && !DESCRIPTORS) return true;
            var O = {
              length: - 1
            };
            if (ACCESSORS) defineProperty(O, 1, {
              enumerable: true,
              get: thrower
            });
             else O[1] = 1;
            method.call(O, argument0, argument1);
          });
        };
      },
      {
        '../internals/descriptors': 29,
        '../internals/fails': 37,
        '../internals/has': 43
      }
    ],
    13: [
      function (_dereq_, module, exports) {
        var isObject = _dereq_('../internals/is-object');
        var isArray = _dereq_('../internals/is-array');
        var wellKnownSymbol = _dereq_('../internals/well-known-symbol');
        var SPECIES = wellKnownSymbol('species'); // `ArraySpeciesCreate` abstract operation
        // https://tc39.github.io/ecma262/#sec-arrayspeciescreate
        module.exports = function (originalArray, length) {
          var C;
          if (isArray(originalArray)) {
            C = originalArray.constructor; // cross-realm fallback
            if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
             else if (isObject(C)) {
              C = C[SPECIES];
              if (C === null) C = undefined;
            }
          }
          return new (C === undefined ? Array : C) (length === 0 ? 0 : length);
        };
      },
      {
        '../internals/is-array': 54,
        '../internals/is-object': 56,
        '../internals/well-known-symbol': 113
      }
    ],
    14: [
      function (_dereq_, module, exports) {
        var anObject = _dereq_('../internals/an-object'); // call something on iterator step with safe closing on error
        module.exports = function (iterator, fn, value, ENTRIES) {
          try {
            return ENTRIES ? fn(anObject(value) [0], value[1]) : fn(value); // 7.4.6 IteratorClose(iterator, completion)
          } catch (error) {
            var returnMethod = iterator['return'];
            if (returnMethod !== undefined) anObject(returnMethod.call(iterator));
            throw error;
          }
        };
      },
      {
        '../internals/an-object': 5
      }
    ],
    15: [
      function (_dereq_, module, exports) {
        var wellKnownSymbol = _dereq_('../internals/well-known-symbol');
        var ITERATOR = wellKnownSymbol('iterator');
        var SAFE_CLOSING = false;
        try {
          var called = 0;
          var iteratorWithReturn = {
            next: function () {
              return {
                done: !!called++
              };
            },
            'return': function () {
              SAFE_CLOSING = true;
            }
          };
          iteratorWithReturn[ITERATOR] = function () {
            return this;
          }; // eslint-disable-next-line no-throw-literal
          Array.from(iteratorWithReturn, function () {
            throw 2;
          });
        } catch (error) {
          /* empty */
        }
        module.exports = function (exec, SKIP_CLOSING) {
          if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
          var ITERATION_SUPPORT = false;
          try {
            var object = {
            };
            object[ITERATOR] = function () {
              return {
                next: function () {
                  return {
                    done: ITERATION_SUPPORT = true
                  };
                }
              };
            };
            exec(object);
          } catch (error) {
            /* empty */
          }
          return ITERATION_SUPPORT;
        };
      },
      {
        '../internals/well-known-symbol': 113
      }
    ],
    16: [
      function (_dereq_, module, exports) {
        var toString = {
        }.toString;
        module.exports = function (it) {
          return toString.call(it).slice(8, - 1);
        };
      },
      {
      }
    ],
    17: [
      function (_dereq_, module, exports) {
        var TO_STRING_TAG_SUPPORT = _dereq_('../internals/to-string-tag-support');
        var classofRaw = _dereq_('../internals/classof-raw');
        var wellKnownSymbol = _dereq_('../internals/well-known-symbol');
        var TO_STRING_TAG = wellKnownSymbol('toStringTag'); // ES3 wrong here
        var CORRECT_ARGUMENTS = classofRaw(function () {
          return arguments;
        }()) == 'Arguments'; // fallback for IE11 Script Access Denied error
        var tryGet = function (it, key) {
          try {
            return it[key];
          } catch (error) {
            /* empty */
          }
        }; // getting tag from ES6+ `Object.prototype.toString`
        module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
          var O,
          tag,
          result;
          return it === undefined ? 'Undefined' : it === null ? 'Null' // @@toStringTag case
           : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag // builtinTag case
           : CORRECT_ARGUMENTS ? classofRaw(O) // ES3 arguments fallback
           : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;
        };
      },
      {
        '../internals/classof-raw': 16,
        '../internals/to-string-tag-support': 109,
        '../internals/well-known-symbol': 113
      }
    ],
    18: [
      function (_dereq_, module, exports) {
        'use strict';
        var redefineAll = _dereq_('../internals/redefine-all');
        var getWeakData = _dereq_('../internals/internal-metadata').getWeakData;
        var anObject = _dereq_('../internals/an-object');
        var isObject = _dereq_('../internals/is-object');
        var anInstance = _dereq_('../internals/an-instance');
        var iterate = _dereq_('../internals/iterate');
        var ArrayIterationModule = _dereq_('../internals/array-iteration');
        var $has = _dereq_('../internals/has');
        var InternalStateModule = _dereq_('../internals/internal-state');
        var setInternalState = InternalStateModule.set;
        var internalStateGetterFor = InternalStateModule.getterFor;
        var find = ArrayIterationModule.find;
        var findIndex = ArrayIterationModule.findIndex;
        var id = 0; // fallback for uncaught frozen keys
        var uncaughtFrozenStore = function (store) {
          return store.frozen || (store.frozen = new UncaughtFrozenStore());
        };
        var UncaughtFrozenStore = function () {
          this.entries = [
          ];
        };
        var findUncaughtFrozen = function (store, key) {
          return find(store.entries, function (it) {
            return it[0] === key;
          });
        };
        UncaughtFrozenStore.prototype = {
          get: function (key) {
            var entry = findUncaughtFrozen(this, key);
            if (entry) return entry[1];
          },
          has: function (key) {
            return !!findUncaughtFrozen(this, key);
          },
          set: function (key, value) {
            var entry = findUncaughtFrozen(this, key);
            if (entry) entry[1] = value;
             else this.entries.push([key,
            value]);
          },
          'delete': function (key) {
            var index = findIndex(this.entries, function (it) {
              return it[0] === key;
            });
            if (~index) this.entries.splice(index, 1);
            return !!~index;
          }
        };
        module.exports = {
          getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
            var C = wrapper(function (that, iterable) {
              anInstance(that, C, CONSTRUCTOR_NAME);
              setInternalState(that, {
                type: CONSTRUCTOR_NAME,
                id: id++,
                frozen: undefined
              });
              if (iterable != undefined) iterate(iterable, that[ADDER], that, IS_MAP);
            });
            var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);
            var define = function (that, key, value) {
              var state = getInternalState(that);
              var data = getWeakData(anObject(key), true);
              if (data === true) uncaughtFrozenStore(state).set(key, value);
               else data[state.id] = value;
              return that;
            };
            redefineAll(C.prototype, {
              // 23.3.3.2 WeakMap.prototype.delete(key)
              // 23.4.3.3 WeakSet.prototype.delete(value)
              'delete': function (key) {
                var state = getInternalState(this);
                if (!isObject(key)) return false;
                var data = getWeakData(key);
                if (data === true) return uncaughtFrozenStore(state) ['delete'](key);
                return data && $has(data, state.id) && delete data[state.id];
              },
              // 23.3.3.4 WeakMap.prototype.has(key)
              // 23.4.3.4 WeakSet.prototype.has(value)
              has: function has(key) {
                var state = getInternalState(this);
                if (!isObject(key)) return false;
                var data = getWeakData(key);
                if (data === true) return uncaughtFrozenStore(state).has(key);
                return data && $has(data, state.id);
              }
            });
            redefineAll(C.prototype, IS_MAP ? {
              // 23.3.3.3 WeakMap.prototype.get(key)
              get: function get(key) {
                var state = getInternalState(this);
                if (isObject(key)) {
                  var data = getWeakData(key);
                  if (data === true) return uncaughtFrozenStore(state).get(key);
                  return data ? data[state.id] : undefined;
                }
              },
              // 23.3.3.5 WeakMap.prototype.set(key, value)
              set: function set(key, value) {
                return define(this, key, value);
              }
            }
             : {
              // 23.4.3.1 WeakSet.prototype.add(value)
              add: function add(value) {
                return define(this, value, true);
              }
            });
            return C;
          }
        };
      },
      {
        '../internals/an-instance': 4,
        '../internals/an-object': 5,
        '../internals/array-iteration': 9,
        '../internals/has': 43,
        '../internals/internal-metadata': 51,
        '../internals/internal-state': 52,
        '../internals/is-object': 56,
        '../internals/iterate': 59,
        '../internals/redefine-all': 86
      }
    ],
    19: [
      function (_dereq_, module, exports) {
        'use strict';
        var $ = _dereq_('../internals/export');
        var global = _dereq_('../internals/global');
        var isForced = _dereq_('../internals/is-forced');
        var redefine = _dereq_('../internals/redefine');
        var InternalMetadataModule = _dereq_('../internals/internal-metadata');
        var iterate = _dereq_('../internals/iterate');
        var anInstance = _dereq_('../internals/an-instance');
        var isObject = _dereq_('../internals/is-object');
        var fails = _dereq_('../internals/fails');
        var checkCorrectnessOfIteration = _dereq_('../internals/check-correctness-of-iteration');
        var setToStringTag = _dereq_('../internals/set-to-string-tag');
        var inheritIfRequired = _dereq_('../internals/inherit-if-required');
        module.exports = function (CONSTRUCTOR_NAME, wrapper, common) {
          var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== - 1;
          var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== - 1;
          var ADDER = IS_MAP ? 'set' : 'add';
          var NativeConstructor = global[CONSTRUCTOR_NAME];
          var NativePrototype = NativeConstructor && NativeConstructor.prototype;
          var Constructor = NativeConstructor;
          var exported = {
          };
          var fixMethod = function (KEY) {
            var nativeMethod = NativePrototype[KEY];
            redefine(NativePrototype, KEY, KEY == 'add' ? function add(value) {
              nativeMethod.call(this, value === 0 ? 0 : value);
              return this;
            }
             : KEY == 'delete' ? function (key) {
              return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);
            }
             : KEY == 'get' ? function get(key) {
              return IS_WEAK && !isObject(key) ? undefined : nativeMethod.call(this, key === 0 ? 0 : key);
            }
             : KEY == 'has' ? function has(key) {
              return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);
            }
             : function set(key, value) {
              nativeMethod.call(this, key === 0 ? 0 : key, value);
              return this;
            });
          }; // eslint-disable-next-line max-len
          if (isForced(CONSTRUCTOR_NAME, typeof NativeConstructor != 'function' || !(IS_WEAK || NativePrototype.forEach && !fails(function () {
            new NativeConstructor().entries().next();
          })))) {
            // create collection constructor
            Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
            InternalMetadataModule.REQUIRED = true;
          } else if (isForced(CONSTRUCTOR_NAME, true)) {
            var instance = new Constructor(); // early implementations not supports chaining
            var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {
            }
             : - 0, 1) != instance; // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false
            var THROWS_ON_PRIMITIVES = fails(function () {
              instance.has(1);
            }); // most early implementations doesn't supports iterables, most modern - not close it correctly
            // eslint-disable-next-line no-new
            var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) {
              new NativeConstructor(iterable);
            }); // for early implementations -0 and +0 not the same
            var BUGGY_ZERO = !IS_WEAK && fails(function () {
              // V8 ~ Chromium 42- fails only with 5+ elements
              var $instance = new NativeConstructor();
              var index = 5;
              while (index--) $instance[ADDER](index, index);
              return !$instance.has( - 0);
            });
            if (!ACCEPT_ITERABLES) {
              Constructor = wrapper(function (dummy, iterable) {
                anInstance(dummy, Constructor, CONSTRUCTOR_NAME);
                var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);
                if (iterable != undefined) iterate(iterable, that[ADDER], that, IS_MAP);
                return that;
              });
              Constructor.prototype = NativePrototype;
              NativePrototype.constructor = Constructor;
            }
            if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
              fixMethod('delete');
              fixMethod('has');
              IS_MAP && fixMethod('get');
            }
            if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER); // weak collections should not contains .clear method
            if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;
          }
          exported[CONSTRUCTOR_NAME] = Constructor;
          $({
            global: true,
            forced: Constructor != NativeConstructor
          }, exported);
          setToStringTag(Constructor, CONSTRUCTOR_NAME);
          if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);
          return Constructor;
        };
      },
      {
        '../internals/an-instance': 4,
        '../internals/check-correctness-of-iteration': 15,
        '../internals/export': 36,
        '../internals/fails': 37,
        '../internals/global': 42,
        '../internals/inherit-if-required': 49,
        '../internals/internal-metadata': 51,
        '../internals/is-forced': 55,
        '../internals/is-object': 56,
        '../internals/iterate': 59,
        '../internals/redefine': 87,
        '../internals/set-to-string-tag': 94
      }
    ],
    20: [
      function (_dereq_, module, exports) {
        var has = _dereq_('../internals/has');
        var ownKeys = _dereq_('../internals/own-keys');
        var getOwnPropertyDescriptorModule = _dereq_('../internals/object-get-own-property-descriptor');
        var definePropertyModule = _dereq_('../internals/object-define-property');
        module.exports = function (target, source) {
          var keys = ownKeys(source);
          var defineProperty = definePropertyModule.f;
          var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
          for (var i = 0; i < keys.length; i++) {
            var key = keys[i];
            if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));
          }
        };
      },
      {
        '../internals/has': 43,
        '../internals/object-define-property': 71,
        '../internals/object-get-own-property-descriptor': 72,
        '../internals/own-keys': 82
      }
    ],
    21: [
      function (_dereq_, module, exports) {
        var wellKnownSymbol = _dereq_('../internals/well-known-symbol');
        var MATCH = wellKnownSymbol('match');
        module.exports = function (METHOD_NAME) {
          var regexp = /./;
          try {
            '/./'[METHOD_NAME](regexp);
          } catch (e) {
            try {
              regexp[MATCH] = false;
              return '/./'[METHOD_NAME](regexp);
            } catch (f) {
              /* empty */
            }
          }
          return false;
        };
      },
      {
        '../internals/well-known-symbol': 113
      }
    ],
    22: [
      function (_dereq_, module, exports) {
        var fails = _dereq_('../internals/fails');
        module.exports = !fails(function () {
          function F() {
            /* empty */
          }
          F.prototype.constructor = null;
          return Object.getPrototypeOf(new F()) !== F.prototype;
        });
      },
      {
        '../internals/fails': 37
      }
    ],
    23: [
      function (_dereq_, module, exports) {
        'use strict';
        var IteratorPrototype = _dereq_('../internals/iterators-core').IteratorPrototype;
        var create = _dereq_('../internals/object-create');
        var createPropertyDescriptor = _dereq_('../internals/create-property-descriptor');
        var setToStringTag = _dereq_('../internals/set-to-string-tag');
        var Iterators = _dereq_('../internals/iterators');
        var returnThis = function () {
          return this;
        };
        module.exports = function (IteratorConstructor, NAME, next) {
          var TO_STRING_TAG = NAME + ' Iterator';
          IteratorConstructor.prototype = create(IteratorPrototype, {
            next: createPropertyDescriptor(1, next)
          });
          setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
          Iterators[TO_STRING_TAG] = returnThis;
          return IteratorConstructor;
        };
      },
      {
        '../internals/create-property-descriptor': 25,
        '../internals/iterators': 61,
        '../internals/iterators-core': 60,
        '../internals/object-create': 69,
        '../internals/set-to-string-tag': 94
      }
    ],
    24: [
      function (_dereq_, module, exports) {
        var DESCRIPTORS = _dereq_('../internals/descriptors');
        var definePropertyModule = _dereq_('../internals/object-define-property');
        var createPropertyDescriptor = _dereq_('../internals/create-property-descriptor');
        module.exports = DESCRIPTORS ? function (object, key, value) {
          return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
        }
         : function (object, key, value) {
          object[key] = value;
          return object;
        };
      },
      {
        '../internals/create-property-descriptor': 25,
        '../internals/descriptors': 29,
        '../internals/object-define-property': 71
      }
    ],
    25: [
      function (_dereq_, module, exports) {
        module.exports = function (bitmap, value) {
          return {
            enumerable: !(bitmap & 1),
            configurable: !(bitmap & 2),
            writable: !(bitmap & 4),
            value: value
          };
        };
      },
      {
      }
    ],
    26: [
      function (_dereq_, module, exports) {
        'use strict';
        var toPrimitive = _dereq_('../internals/to-primitive');
        var definePropertyModule = _dereq_('../internals/object-define-property');
        var createPropertyDescriptor = _dereq_('../internals/create-property-descriptor');
        module.exports = function (object, key, value) {
          var propertyKey = toPrimitive(key);
          if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
           else object[propertyKey] = value;
        };
      },
      {
        '../internals/create-property-descriptor': 25,
        '../internals/object-define-property': 71,
        '../internals/to-primitive': 108
      }
    ],
    27: [
      function (_dereq_, module, exports) {
        'use strict';
        var $ = _dereq_('../internals/export');
        var createIteratorConstructor = _dereq_('../internals/create-iterator-constructor');
        var getPrototypeOf = _dereq_('../internals/object-get-prototype-of');
        var setPrototypeOf = _dereq_('../internals/object-set-prototype-of');
        var setToStringTag = _dereq_('../internals/set-to-string-tag');
        var createNonEnumerableProperty = _dereq_('../internals/create-non-enumerable-property');
        var redefine = _dereq_('../internals/redefine');
        var wellKnownSymbol = _dereq_('../internals/well-known-symbol');
        var IS_PURE = _dereq_('../internals/is-pure');
        var Iterators = _dereq_('../internals/iterators');
        var IteratorsCore = _dereq_('../internals/iterators-core');
        var IteratorPrototype = IteratorsCore.IteratorPrototype;
        var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
        var ITERATOR = wellKnownSymbol('iterator');
        var KEYS = 'keys';
        var VALUES = 'values';
        var ENTRIES = 'entries';
        var returnThis = function () {
          return this;
        };
        module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
          createIteratorConstructor(IteratorConstructor, NAME, next);
          var getIterationMethod = function (KIND) {
            if (KIND === DEFAULT && defaultIterator) return defaultIterator;
            if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
            switch (KIND) {
              case KEYS:
                return function keys() {
                  return new IteratorConstructor(this, KIND);
                };
              case VALUES:
                return function values() {
                  return new IteratorConstructor(this, KIND);
                };
              case ENTRIES:
                return function entries() {
                  return new IteratorConstructor(this, KIND);
                };
            }
            return function () {
              return new IteratorConstructor(this);
            };
          };
          var TO_STRING_TAG = NAME + ' Iterator';
          var INCORRECT_VALUES_NAME = false;
          var IterablePrototype = Iterable.prototype;
          var nativeIterator = IterablePrototype[ITERATOR] || IterablePrototype['@@iterator'] || DEFAULT && IterablePrototype[DEFAULT];
          var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
          var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
          var CurrentIteratorPrototype,
          methods,
          KEY; // fix native
          if (anyNativeIterator) {
            CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
            if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
              if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
                if (setPrototypeOf) {
                  setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
                } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {
                  createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);
                }
              } // Set @@toStringTag to native iterators

              setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
              if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
            }
          } // fix Array#{values, @@iterator}.name in V8 / FF

          if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
            INCORRECT_VALUES_NAME = true;
            defaultIterator = function values() {
              return nativeIterator.call(this);
            };
          } // define iterator

          if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
            createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);
          }
          Iterators[NAME] = defaultIterator; // export additional methods
          if (DEFAULT) {
            methods = {
              values: getIterationMethod(VALUES),
              keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
              entries: getIterationMethod(ENTRIES)
            };
            if (FORCED) for (KEY in methods) {
              if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
                redefine(IterablePrototype, KEY, methods[KEY]);
              }
            } else $({
              target: NAME,
              proto: true,
              forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME
            }, methods);
          }
          return methods;
        };
      },
      {
        '../internals/create-iterator-constructor': 23,
        '../internals/create-non-enumerable-property': 24,
        '../internals/export': 36,
        '../internals/is-pure': 57,
        '../internals/iterators': 61,
        '../internals/iterators-core': 60,
        '../internals/object-get-prototype-of': 76,
        '../internals/object-set-prototype-of': 80,
        '../internals/redefine': 87,
        '../internals/set-to-string-tag': 94,
        '../internals/well-known-symbol': 113
      }
    ],
    28: [
      function (_dereq_, module, exports) {
        var path = _dereq_('../internals/path');
        var has = _dereq_('../internals/has');
        var wrappedWellKnownSymbolModule = _dereq_('../internals/well-known-symbol-wrapped');
        var defineProperty = _dereq_('../internals/object-define-property').f;
        module.exports = function (NAME) {
          var Symbol = path.Symbol || (path.Symbol = {
          });
          if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {
            value: wrappedWellKnownSymbolModule.f(NAME)
          });
        };
      },
      {
        '../internals/has': 43,
        '../internals/object-define-property': 71,
        '../internals/path': 83,
        '../internals/well-known-symbol-wrapped': 112
      }
    ],
    29: [
      function (_dereq_, module, exports) {
        var fails = _dereq_('../internals/fails'); // Thank's IE8 for his funny defineProperty
        module.exports = !fails(function () {
          return Object.defineProperty({
          }, 1, {
            get: function () {
              return 7;
            }
          }) [1] != 7;
        });
      },
      {
        '../internals/fails': 37
      }
    ],
    30: [
      function (_dereq_, module, exports) {
        var global = _dereq_('../internals/global');
        var isObject = _dereq_('../internals/is-object');
        var document = global.document; // typeof document.createElement is 'object' in old IE
        var EXISTS = isObject(document) && isObject(document.createElement);
        module.exports = function (it) {
          return EXISTS ? document.createElement(it) : {
          };
        };
      },
      {
        '../internals/global': 42,
        '../internals/is-object': 56
      }
    ],
    31: [
      function (_dereq_, module, exports) {
        // iterable DOM collections
        // flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
        module.exports = {
          CSSRuleList: 0,
          CSSStyleDeclaration: 0,
          CSSValueList: 0,
          ClientRectList: 0,
          DOMRectList: 0,
          DOMStringList: 0,
          DOMTokenList: 1,
          DataTransferItemList: 0,
          FileList: 0,
          HTMLAllCollection: 0,
          HTMLCollection: 0,
          HTMLFormElement: 0,
          HTMLSelectElement: 0,
          MediaList: 0,
          MimeTypeArray: 0,
          NamedNodeMap: 0,
          NodeList: 1,
          PaintRequestList: 0,
          Plugin: 0,
          PluginArray: 0,
          SVGLengthList: 0,
          SVGNumberList: 0,
          SVGPathSegList: 0,
          SVGPointList: 0,
          SVGStringList: 0,
          SVGTransformList: 0,
          SourceBufferList: 0,
          StyleSheetList: 0,
          TextTrackCueList: 0,
          TextTrackList: 0,
          TouchList: 0
        };
      },
      {
      }
    ],
    32: [
      function (_dereq_, module, exports) {
        var userAgent = _dereq_('../internals/engine-user-agent');
        module.exports = /(iphone|ipod|ipad).*applewebkit/i.test(userAgent);
      },
      {
        '../internals/engine-user-agent': 33
      }
    ],
    33: [
      function (_dereq_, module, exports) {
        var getBuiltIn = _dereq_('../internals/get-built-in');
        module.exports = getBuiltIn('navigator', 'userAgent') || '';
      },
      {
        '../internals/get-built-in': 40
      }
    ],
    34: [
      function (_dereq_, module, exports) {
        var global = _dereq_('../internals/global');
        var userAgent = _dereq_('../internals/engine-user-agent');
        var process = global.process;
        var versions = process && process.versions;
        var v8 = versions && versions.v8;
        var match,
        version;
        if (v8) {
          match = v8.split('.');
          version = match[0] + match[1];
        } else if (userAgent) {
          match = userAgent.match(/Edge\/(\d+)/);
          if (!match || match[1] >= 74) {
            match = userAgent.match(/Chrome\/(\d+)/);
            if (match) version = match[1];
          }
        }
        module.exports = version && + version;
      },
      {
        '../internals/engine-user-agent': 33,
        '../internals/global': 42
      }
    ],
    35: [
      function (_dereq_, module, exports) {
        // IE8- don't enum bug keys
        module.exports = [
          'constructor',
          'hasOwnProperty',
          'isPrototypeOf',
          'propertyIsEnumerable',
          'toLocaleString',
          'toString',
          'valueOf'
        ];
      },
      {
      }
    ],
    36: [
      function (_dereq_, module, exports) {
        var global = _dereq_('../internals/global');
        var getOwnPropertyDescriptor = _dereq_('../internals/object-get-own-property-descriptor').f;
        var createNonEnumerableProperty = _dereq_('../internals/create-non-enumerable-property');
        var redefine = _dereq_('../internals/redefine');
        var setGlobal = _dereq_('../internals/set-global');
        var copyConstructorProperties = _dereq_('../internals/copy-constructor-properties');
        var isForced = _dereq_('../internals/is-forced');
        /*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
*/
        module.exports = function (options, source) {
          var TARGET = options.target;
          var GLOBAL = options.global;
          var STATIC = options.stat;
          var FORCED,
          target,
          key,
          targetProperty,
          sourceProperty,
          descriptor;
          if (GLOBAL) {
            target = global;
          } else if (STATIC) {
            target = global[TARGET] || setGlobal(TARGET, {
            });
          } else {
            target = (global[TARGET] || {
            }).prototype;
          }
          if (target) for (key in source) {
            sourceProperty = source[key];
            if (options.noTargetGet) {
              descriptor = getOwnPropertyDescriptor(target, key);
              targetProperty = descriptor && descriptor.value;
            } else targetProperty = target[key];
            FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced); // contained in target
            if (!FORCED && targetProperty !== undefined) {
              if (typeof sourceProperty === typeof targetProperty) continue;
              copyConstructorProperties(sourceProperty, targetProperty);
            } // add a flag to not completely full polyfills

            if (options.sham || targetProperty && targetProperty.sham) {
              createNonEnumerableProperty(sourceProperty, 'sham', true);
            } // extend global

            redefine(target, key, sourceProperty, options);
          }
        };
      },
      {
        '../internals/copy-constructor-properties': 20,
        '../internals/create-non-enumerable-property': 24,
        '../internals/global': 42,
        '../internals/is-forced': 55,
        '../internals/object-get-own-property-descriptor': 72,
        '../internals/redefine': 87,
        '../internals/set-global': 92
      }
    ],
    37: [
      function (_dereq_, module, exports) {
        module.exports = function (exec) {
          try {
            return !!exec();
          } catch (error) {
            return true;
          }
        };
      },
      {
      }
    ],
    38: [
      function (_dereq_, module, exports) {
        var fails = _dereq_('../internals/fails');
        module.exports = !fails(function () {
          return Object.isExtensible(Object.preventExtensions({
          }));
        });
      },
      {
        '../internals/fails': 37
      }
    ],
    39: [
      function (_dereq_, module, exports) {
        var aFunction = _dereq_('../internals/a-function'); // optional / simple context binding
        module.exports = function (fn, that, length) {
          aFunction(fn);
          if (that === undefined) return fn;
          switch (length) {
            case 0:
              return function () {
                return fn.call(that);
              };
            case 1:
              return function (a) {
                return fn.call(that, a);
              };
            case 2:
              return function (a, b) {
                return fn.call(that, a, b);
              };
            case 3:
              return function (a, b, c) {
                return fn.call(that, a, b, c);
              };
          }
          return function ()          /* ...args */
          {
            return fn.apply(that, arguments);
          };
        };
      },
      {
        '../internals/a-function': 1
      }
    ],
    40: [
      function (_dereq_, module, exports) {
        var path = _dereq_('../internals/path');
        var global = _dereq_('../internals/global');
        var aFunction = function (variable) {
          return typeof variable == 'function' ? variable : undefined;
        };
        module.exports = function (namespace, method) {
          return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace]) : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];
        };
      },
      {
        '../internals/global': 42,
        '../internals/path': 83
      }
    ],
    41: [
      function (_dereq_, module, exports) {
        var classof = _dereq_('../internals/classof');
        var Iterators = _dereq_('../internals/iterators');
        var wellKnownSymbol = _dereq_('../internals/well-known-symbol');
        var ITERATOR = wellKnownSymbol('iterator');
        module.exports = function (it) {
          if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];
        };
      },
      {
        '../internals/classof': 17,
        '../internals/iterators': 61,
        '../internals/well-known-symbol': 113
      }
    ],
    42: [
      function (_dereq_, module, exports) {
        (function (global) {
          var check = function (it) {
            return it && it.Math == Math && it;
          }; // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
          module.exports = // eslint-disable-next-line no-undef
          check(typeof globalThis == 'object' && globalThis) || check(typeof window == 'object' && window) || check(typeof self == 'object' && self) || check(typeof global == 'object' && global) || // eslint-disable-next-line no-new-func
          Function('return this') ();
        }).call(this, typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {
        })
      },
      {
      }
    ],
    43: [
      function (_dereq_, module, exports) {
        var hasOwnProperty = {
        }.hasOwnProperty;
        module.exports = function (it, key) {
          return hasOwnProperty.call(it, key);
        };
      },
      {
      }
    ],
    44: [
      function (_dereq_, module, exports) {
        module.exports = {
        };
      },
      {
      }
    ],
    45: [
      function (_dereq_, module, exports) {
        var global = _dereq_('../internals/global');
        module.exports = function (a, b) {
          var console = global.console;
          if (console && console.error) {
            arguments.length === 1 ? console.error(a) : console.error(a, b);
          }
        };
      },
      {
        '../internals/global': 42
      }
    ],
    46: [
      function (_dereq_, module, exports) {
        var getBuiltIn = _dereq_('../internals/get-built-in');
        module.exports = getBuiltIn('document', 'documentElement');
      },
      {
        '../internals/get-built-in': 40
      }
    ],
    47: [
      function (_dereq_, module, exports) {
        var DESCRIPTORS = _dereq_('../internals/descriptors');
        var fails = _dereq_('../internals/fails');
        var createElement = _dereq_('../internals/document-create-element'); // Thank's IE8 for his funny defineProperty
        module.exports = !DESCRIPTORS && !fails(function () {
          return Object.defineProperty(createElement('div'), 'a', {
            get: function () {
              return 7;
            }
          }).a != 7;
        });
      },
      {
        '../internals/descriptors': 29,
        '../internals/document-create-element': 30,
        '../internals/fails': 37
      }
    ],
    48: [
      function (_dereq_, module, exports) {
        var fails = _dereq_('../internals/fails');
        var classof = _dereq_('../internals/classof-raw');
        var split = ''.split; // fallback for non-array-like ES3 and non-enumerable old V8 strings
        module.exports = fails(function () {
          // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
          // eslint-disable-next-line no-prototype-builtins
          return !Object('z').propertyIsEnumerable(0);
        }) ? function (it) {
          return classof(it) == 'String' ? split.call(it, '') : Object(it);
        }
         : Object;
      },
      {
        '../internals/classof-raw': 16,
        '../internals/fails': 37
      }
    ],
    49: [
      function (_dereq_, module, exports) {
        var isObject = _dereq_('../internals/is-object');
        var setPrototypeOf = _dereq_('../internals/object-set-prototype-of'); // makes subclassing work correct for wrapped built-ins
        module.exports = function ($this, dummy, Wrapper) {
          var NewTarget,
          NewTargetPrototype;
          if ( // it can work only with native `setPrototypeOf`
          setPrototypeOf && // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
          typeof (NewTarget = dummy.constructor) == 'function' && NewTarget !== Wrapper && isObject(NewTargetPrototype = NewTarget.prototype) && NewTargetPrototype !== Wrapper.prototype) setPrototypeOf($this, NewTargetPrototype);
          return $this;
        };
      },
      {
        '../internals/is-object': 56,
        '../internals/object-set-prototype-of': 80
      }
    ],
    50: [
      function (_dereq_, module, exports) {
        var store = _dereq_('../internals/shared-store');
        var functionToString = Function.toString; // this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper
        if (typeof store.inspectSource != 'function') {
          store.inspectSource = function (it) {
            return functionToString.call(it);
          };
        }
        module.exports = store.inspectSource;
      },
      {
        '../internals/shared-store': 96
      }
    ],
    51: [
      function (_dereq_, module, exports) {
        var hiddenKeys = _dereq_('../internals/hidden-keys');
        var isObject = _dereq_('../internals/is-object');
        var has = _dereq_('../internals/has');
        var defineProperty = _dereq_('../internals/object-define-property').f;
        var uid = _dereq_('../internals/uid');
        var FREEZING = _dereq_('../internals/freezing');
        var METADATA = uid('meta');
        var id = 0;
        var isExtensible = Object.isExtensible || function () {
          return true;
        };
        var setMetadata = function (it) {
          defineProperty(it, METADATA, {
            value: {
              objectID: 'O' + ++id,
              // object ID
              weakData: {
              } // weak collections IDs

            }
          });
        };
        var fastKey = function (it, create) {
          // return a primitive with prefix
          if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
          if (!has(it, METADATA)) {
            // can't set metadata to uncaught frozen object
            if (!isExtensible(it)) return 'F'; // not necessary to add metadata
            if (!create) return 'E'; // add missing metadata
            setMetadata(it); // return object ID
          }
          return it[METADATA].objectID;
        };
        var getWeakData = function (it, create) {
          if (!has(it, METADATA)) {
            // can't set metadata to uncaught frozen object
            if (!isExtensible(it)) return true; // not necessary to add metadata
            if (!create) return false; // add missing metadata
            setMetadata(it); // return the store of weak collections IDs
          }
          return it[METADATA].weakData;
        }; // add metadata on freeze-family methods calling
        var onFreeze = function (it) {
          if (FREEZING && meta.REQUIRED && isExtensible(it) && !has(it, METADATA)) setMetadata(it);
          return it;
        };
        var meta = module.exports = {
          REQUIRED: false,
          fastKey: fastKey,
          getWeakData: getWeakData,
          onFreeze: onFreeze
        };
        hiddenKeys[METADATA] = true;
      },
      {
        '../internals/freezing': 38,
        '../internals/has': 43,
        '../internals/hidden-keys': 44,
        '../internals/is-object': 56,
        '../internals/object-define-property': 71,
        '../internals/uid': 110
      }
    ],
    52: [
      function (_dereq_, module, exports) {
        var NATIVE_WEAK_MAP = _dereq_('../internals/native-weak-map');
        var global = _dereq_('../internals/global');
        var isObject = _dereq_('../internals/is-object');
        var createNonEnumerableProperty = _dereq_('../internals/create-non-enumerable-property');
        var objectHas = _dereq_('../internals/has');
        var sharedKey = _dereq_('../internals/shared-key');
        var hiddenKeys = _dereq_('../internals/hidden-keys');
        var WeakMap = global.WeakMap;
        var set,
        get,
        has;
        var enforce = function (it) {
          return has(it) ? get(it) : set(it, {
          });
        };
        var getterFor = function (TYPE) {
          return function (it) {
            var state;
            if (!isObject(it) || (state = get(it)).type !== TYPE) {
              throw TypeError('Incompatible receiver, ' + TYPE + ' required');
            }
            return state;
          };
        };
        if (NATIVE_WEAK_MAP) {
          var store = new WeakMap();
          var wmget = store.get;
          var wmhas = store.has;
          var wmset = store.set;
          set = function (it, metadata) {
            wmset.call(store, it, metadata);
            return metadata;
          };
          get = function (it) {
            return wmget.call(store, it) || {
            };
          };
          has = function (it) {
            return wmhas.call(store, it);
          };
        } else {
          var STATE = sharedKey('state');
          hiddenKeys[STATE] = true;
          set = function (it, metadata) {
            createNonEnumerableProperty(it, STATE, metadata);
            return metadata;
          };
          get = function (it) {
            return objectHas(it, STATE) ? it[STATE] : {
            };
          };
          has = function (it) {
            return objectHas(it, STATE);
          };
        }
        module.exports = {
          set: set,
          get: get,
          has: has,
          enforce: enforce,
          getterFor: getterFor
        };
      },
      {
        '../internals/create-non-enumerable-property': 24,
        '../internals/global': 42,
        '../internals/has': 43,
        '../internals/hidden-keys': 44,
        '../internals/is-object': 56,
        '../internals/native-weak-map': 65,
        '../internals/shared-key': 95
      }
    ],
    53: [
      function (_dereq_, module, exports) {
        var wellKnownSymbol = _dereq_('../internals/well-known-symbol');
        var Iterators = _dereq_('../internals/iterators');
        var ITERATOR = wellKnownSymbol('iterator');
        var ArrayPrototype = Array.prototype; // check on default Array iterator
        module.exports = function (it) {
          return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
        };
      },
      {
        '../internals/iterators': 61,
        '../internals/well-known-symbol': 113
      }
    ],
    54: [
      function (_dereq_, module, exports) {
        var classof = _dereq_('../internals/classof-raw'); // `IsArray` abstract operation
        // https://tc39.github.io/ecma262/#sec-isarray
        module.exports = Array.isArray || function isArray(arg) {
          return classof(arg) == 'Array';
        };
      },
      {
        '../internals/classof-raw': 16
      }
    ],
    55: [
      function (_dereq_, module, exports) {
        var fails = _dereq_('../internals/fails');
        var replacement = /#|\.prototype\./;
        var isForced = function (feature, detection) {
          var value = data[normalize(feature)];
          return value == POLYFILL ? true : value == NATIVE ? false : typeof detection == 'function' ? fails(detection) : !!detection;
        };
        var normalize = isForced.normalize = function (string) {
          return String(string).replace(replacement, '.').toLowerCase();
        };
        var data = isForced.data = {
        };
        var NATIVE = isForced.NATIVE = 'N';
        var POLYFILL = isForced.POLYFILL = 'P';
        module.exports = isForced;
      },
      {
        '../internals/fails': 37
      }
    ],
    56: [
      function (_dereq_, module, exports) {
        module.exports = function (it) {
          return typeof it === 'object' ? it !== null : typeof it === 'function';
        };
      },
      {
      }
    ],
    57: [
      function (_dereq_, module, exports) {
        module.exports = false;
      },
      {
      }
    ],
    58: [
      function (_dereq_, module, exports) {
        var isObject = _dereq_('../internals/is-object');
        var classof = _dereq_('../internals/classof-raw');
        var wellKnownSymbol = _dereq_('../internals/well-known-symbol');
        var MATCH = wellKnownSymbol('match'); // `IsRegExp` abstract operation
        // https://tc39.github.io/ecma262/#sec-isregexp
        module.exports = function (it) {
          var isRegExp;
          return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');
        };
      },
      {
        '../internals/classof-raw': 16,
        '../internals/is-object': 56,
        '../internals/well-known-symbol': 113
      }
    ],
    59: [
      function (_dereq_, module, exports) {
        var anObject = _dereq_('../internals/an-object');
        var isArrayIteratorMethod = _dereq_('../internals/is-array-iterator-method');
        var toLength = _dereq_('../internals/to-length');
        var bind = _dereq_('../internals/function-bind-context');
        var getIteratorMethod = _dereq_('../internals/get-iterator-method');
        var callWithSafeIterationClosing = _dereq_('../internals/call-with-safe-iteration-closing');
        var Result = function (stopped, result) {
          this.stopped = stopped;
          this.result = result;
        };
        var iterate = module.exports = function (iterable, fn, that, AS_ENTRIES, IS_ITERATOR) {
          var boundFunction = bind(fn, that, AS_ENTRIES ? 2 : 1);
          var iterator,
          iterFn,
          index,
          length,
          result,
          next,
          step;
          if (IS_ITERATOR) {
            iterator = iterable;
          } else {
            iterFn = getIteratorMethod(iterable);
            if (typeof iterFn != 'function') throw TypeError('Target is not iterable'); // optimisation for array iterators
            if (isArrayIteratorMethod(iterFn)) {
              for (index = 0, length = toLength(iterable.length); length > index; index++) {
                result = AS_ENTRIES ? boundFunction(anObject(step = iterable[index]) [0], step[1]) : boundFunction(iterable[index]);
                if (result && result instanceof Result) return result;
              }
              return new Result(false);
            }
            iterator = iterFn.call(iterable);
          }
          next = iterator.next;
          while (!(step = next.call(iterator)).done) {
            result = callWithSafeIterationClosing(iterator, boundFunction, step.value, AS_ENTRIES);
            if (typeof result == 'object' && result && result instanceof Result) return result;
          }
          return new Result(false);
        };
        iterate.stop = function (result) {
          return new Result(true, result);
        };
      },
      {
        '../internals/an-object': 5,
        '../internals/call-with-safe-iteration-closing': 14,
        '../internals/function-bind-context': 39,
        '../internals/get-iterator-method': 41,
        '../internals/is-array-iterator-method': 53,
        '../internals/to-length': 106
      }
    ],
    60: [
      function (_dereq_, module, exports) {
        'use strict';
        var getPrototypeOf = _dereq_('../internals/object-get-prototype-of');
        var createNonEnumerableProperty = _dereq_('../internals/create-non-enumerable-property');
        var has = _dereq_('../internals/has');
        var wellKnownSymbol = _dereq_('../internals/well-known-symbol');
        var IS_PURE = _dereq_('../internals/is-pure');
        var ITERATOR = wellKnownSymbol('iterator');
        var BUGGY_SAFARI_ITERATORS = false;
        var returnThis = function () {
          return this;
        }; // `%IteratorPrototype%` object
        // https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object
        var IteratorPrototype,
        PrototypeOfArrayIteratorPrototype,
        arrayIterator;
        if ([].keys) {
          arrayIterator = [
          ].keys(); // Safari 8 has buggy iterators w/o `next`
          if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
           else {
            PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
            if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
          }
        }
        if (IteratorPrototype == undefined) IteratorPrototype = {
        }; // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
        if (!IS_PURE && !has(IteratorPrototype, ITERATOR)) {
          createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);
        }
        module.exports = {
          IteratorPrototype: IteratorPrototype,
          BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
        };
      },
      {
        '../internals/create-non-enumerable-property': 24,
        '../internals/has': 43,
        '../internals/is-pure': 57,
        '../internals/object-get-prototype-of': 76,
        '../internals/well-known-symbol': 113
      }
    ],
    61: [
      function (_dereq_, module, exports) {
        module.exports = {
        };
      },
      {
      }
    ],
    62: [
      function (_dereq_, module, exports) {
        var global = _dereq_('../internals/global');
        var getOwnPropertyDescriptor = _dereq_('../internals/object-get-own-property-descriptor').f;
        var classof = _dereq_('../internals/classof-raw');
        var macrotask = _dereq_('../internals/task').set;
        var IS_IOS = _dereq_('../internals/engine-is-ios');
        var MutationObserver = global.MutationObserver || global.WebKitMutationObserver;
        var process = global.process;
        var Promise = global.Promise;
        var IS_NODE = classof(process) == 'process'; // Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`
        var queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');
        var queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;
        var flush,
        head,
        last,
        notify,
        toggle,
        node,
        promise,
        then; // modern engines have queueMicrotask method
        if (!queueMicrotask) {
          flush = function () {
            var parent,
            fn;
            if (IS_NODE && (parent = process.domain)) parent.exit();
            while (head) {
              fn = head.fn;
              head = head.next;
              try {
                fn();
              } catch (error) {
                if (head) notify();
                 else last = undefined;
                throw error;
              }
            }
            last = undefined;
            if (parent) parent.enter();
          }; // Node.js
          if (IS_NODE) {
            notify = function () {
              process.nextTick(flush);
            }; // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
          } else if (MutationObserver && !IS_IOS) {
            toggle = true;
            node = document.createTextNode('');
            new MutationObserver(flush).observe(node, {
              characterData: true
            });
            notify = function () {
              node.data = toggle = !toggle;
            }; // environments with maybe non-completely correct, but existent Promise
          } else if (Promise && Promise.resolve) {
            // Promise.resolve without an argument throws an error in LG WebOS 2
            promise = Promise.resolve(undefined);
            then = promise.then;
            notify = function () {
              then.call(promise, flush);
            }; // for other environments - macrotask based on:
            // - setImmediate
            // - MessageChannel
            // - window.postMessag
            // - onreadystatechange
            // - setTimeout
          } else {
            notify = function () {
              // strange IE + webpack dev server bug - use .call(global)
              macrotask.call(global, flush);
            };
          }
        }
        module.exports = queueMicrotask || function (fn) {
          var task = {
            fn: fn,
            next: undefined
          };
          if (last) last.next = task;
          if (!head) {
            head = task;
            notify();
          }
          last = task;
        };
      },
      {
        '../internals/classof-raw': 16,
        '../internals/engine-is-ios': 32,
        '../internals/global': 42,
        '../internals/object-get-own-property-descriptor': 72,
        '../internals/task': 102
      }
    ],
    63: [
      function (_dereq_, module, exports) {
        var global = _dereq_('../internals/global');
        module.exports = global.Promise;
      },
      {
        '../internals/global': 42
      }
    ],
    64: [
      function (_dereq_, module, exports) {
        var fails = _dereq_('../internals/fails');
        module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
          // Chrome 38 Symbol has incorrect toString conversion
          // eslint-disable-next-line no-undef
          return !String(Symbol());
        });
      },
      {
        '../internals/fails': 37
      }
    ],
    65: [
      function (_dereq_, module, exports) {
        var global = _dereq_('../internals/global');
        var inspectSource = _dereq_('../internals/inspect-source');
        var WeakMap = global.WeakMap;
        module.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));
      },
      {
        '../internals/global': 42,
        '../internals/inspect-source': 50
      }
    ],
    66: [
      function (_dereq_, module, exports) {
        'use strict';
        var aFunction = _dereq_('../internals/a-function');
        var PromiseCapability = function (C) {
          var resolve,
          reject;
          this.promise = new C(function ($$resolve, $$reject) {
            if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
            resolve = $$resolve;
            reject = $$reject;
          });
          this.resolve = aFunction(resolve);
          this.reject = aFunction(reject);
        }; // 25.4.1.5 NewPromiseCapability(C)
        module.exports.f = function (C) {
          return new PromiseCapability(C);
        };
      },
      {
        '../internals/a-function': 1
      }
    ],
    67: [
      function (_dereq_, module, exports) {
        var isRegExp = _dereq_('../internals/is-regexp');
        module.exports = function (it) {
          if (isRegExp(it)) {
            throw TypeError('The method doesn\'t accept regular expressions');
          }
          return it;
        };
      },
      {
        '../internals/is-regexp': 58
      }
    ],
    68: [
      function (_dereq_, module, exports) {
        'use strict';
        var DESCRIPTORS = _dereq_('../internals/descriptors');
        var fails = _dereq_('../internals/fails');
        var objectKeys = _dereq_('../internals/object-keys');
        var getOwnPropertySymbolsModule = _dereq_('../internals/object-get-own-property-symbols');
        var propertyIsEnumerableModule = _dereq_('../internals/object-property-is-enumerable');
        var toObject = _dereq_('../internals/to-object');
        var IndexedObject = _dereq_('../internals/indexed-object');
        var nativeAssign = Object.assign;
        var defineProperty = Object.defineProperty; // `Object.assign` method
        // https://tc39.github.io/ecma262/#sec-object.assign
        module.exports = !nativeAssign || fails(function () {
          // should have correct order of operations (Edge bug)
          if (DESCRIPTORS && nativeAssign({
            b: 1
          }, nativeAssign(defineProperty({
          }, 'a', {
            enumerable: true,
            get: function () {
              defineProperty(this, 'b', {
                value: 3,
                enumerable: false
              });
            }
          }), {
            b: 2
          })).b !== 1) return true; // should work with symbols and should have deterministic property order (V8 bug)
          var A = {
          };
          var B = {
          }; // eslint-disable-next-line no-undef
          var symbol = Symbol();
          var alphabet = 'abcdefghijklmnopqrst';
          A[symbol] = 7;
          alphabet.split('').forEach(function (chr) {
            B[chr] = chr;
          });
          return nativeAssign({
          }, A) [symbol] != 7 || objectKeys(nativeAssign({
          }, B)).join('') != alphabet;
        }) ? function assign(target, source) {
          // eslint-disable-line no-unused-vars
          var T = toObject(target);
          var argumentsLength = arguments.length;
          var index = 1;
          var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
          var propertyIsEnumerable = propertyIsEnumerableModule.f;
          while (argumentsLength > index) {
            var S = IndexedObject(arguments[index++]);
            var keys = getOwnPropertySymbols ? objectKeys(S).concat(getOwnPropertySymbols(S)) : objectKeys(S);
            var length = keys.length;
            var j = 0;
            var key;
            while (length > j) {
              key = keys[j++];
              if (!DESCRIPTORS || propertyIsEnumerable.call(S, key)) T[key] = S[key];
            }
          }
          return T;
        }
         : nativeAssign;
      },
      {
        '../internals/descriptors': 29,
        '../internals/fails': 37,
        '../internals/indexed-object': 48,
        '../internals/object-get-own-property-symbols': 75,
        '../internals/object-keys': 78,
        '../internals/object-property-is-enumerable': 79,
        '../internals/to-object': 107
      }
    ],
    69: [
      function (_dereq_, module, exports) {
        var anObject = _dereq_('../internals/an-object');
        var defineProperties = _dereq_('../internals/object-define-properties');
        var enumBugKeys = _dereq_('../internals/enum-bug-keys');
        var hiddenKeys = _dereq_('../internals/hidden-keys');
        var html = _dereq_('../internals/html');
        var documentCreateElement = _dereq_('../internals/document-create-element');
        var sharedKey = _dereq_('../internals/shared-key');
        var GT = '>';
        var LT = '<';
        var PROTOTYPE = 'prototype';
        var SCRIPT = 'script';
        var IE_PROTO = sharedKey('IE_PROTO');
        var EmptyConstructor = function () {
          /* empty */
        };
        var scriptTag = function (content) {
          return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
        }; // Create object with fake `null` prototype: use ActiveX Object with cleared prototype
        var NullProtoObjectViaActiveX = function (activeXDocument) {
          activeXDocument.write(scriptTag(''));
          activeXDocument.close();
          var temp = activeXDocument.parentWindow.Object;
          activeXDocument = null; // avoid memory leak
          return temp;
        }; // Create object with fake `null` prototype: use iframe Object with cleared prototype
        var NullProtoObjectViaIFrame = function () {
          // Thrash, waste and sodomy: IE GC bug
          var iframe = documentCreateElement('iframe');
          var JS = 'java' + SCRIPT + ':';
          var iframeDocument;
          iframe.style.display = 'none';
          html.appendChild(iframe); // https://github.com/zloirock/core-js/issues/475
          iframe.src = String(JS);
          iframeDocument = iframe.contentWindow.document;
          iframeDocument.open();
          iframeDocument.write(scriptTag('document.F=Object'));
          iframeDocument.close();
          return iframeDocument.F;
        }; // Check for document.domain and active x support
        // No need to use active x approach when document.domain is not set
        // see https://github.com/es-shims/es5-shim/issues/150
        // variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
        // avoid IE GC bug
        var activeXDocument;
        var NullProtoObject = function () {
          try {
            /* global ActiveXObject */
            activeXDocument = document.domain && new ActiveXObject('htmlfile');
          } catch (error) {
            /* ignore */
          }
          NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();
          var length = enumBugKeys.length;
          while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
          return NullProtoObject();
        };
        hiddenKeys[IE_PROTO] = true; // `Object.create` method
        // https://tc39.github.io/ecma262/#sec-object.create
        module.exports = Object.create || function create(O, Properties) {
          var result;
          if (O !== null) {
            EmptyConstructor[PROTOTYPE] = anObject(O);
            result = new EmptyConstructor();
            EmptyConstructor[PROTOTYPE] = null; // add "__proto__" for Object.getPrototypeOf polyfill
            result[IE_PROTO] = O;
          } else result = NullProtoObject();
          return Properties === undefined ? result : defineProperties(result, Properties);
        };
      },
      {
        '../internals/an-object': 5,
        '../internals/document-create-element': 30,
        '../internals/enum-bug-keys': 35,
        '../internals/hidden-keys': 44,
        '../internals/html': 46,
        '../internals/object-define-properties': 70,
        '../internals/shared-key': 95
      }
    ],
    70: [
      function (_dereq_, module, exports) {
        var DESCRIPTORS = _dereq_('../internals/descriptors');
        var definePropertyModule = _dereq_('../internals/object-define-property');
        var anObject = _dereq_('../internals/an-object');
        var objectKeys = _dereq_('../internals/object-keys'); // `Object.defineProperties` method
        // https://tc39.github.io/ecma262/#sec-object.defineproperties
        module.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {
          anObject(O);
          var keys = objectKeys(Properties);
          var length = keys.length;
          var index = 0;
          var key;
          while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);
          return O;
        };
      },
      {
        '../internals/an-object': 5,
        '../internals/descriptors': 29,
        '../internals/object-define-property': 71,
        '../internals/object-keys': 78
      }
    ],
    71: [
      function (_dereq_, module, exports) {
        var DESCRIPTORS = _dereq_('../internals/descriptors');
        var IE8_DOM_DEFINE = _dereq_('../internals/ie8-dom-define');
        var anObject = _dereq_('../internals/an-object');
        var toPrimitive = _dereq_('../internals/to-primitive');
        var nativeDefineProperty = Object.defineProperty; // `Object.defineProperty` method
        // https://tc39.github.io/ecma262/#sec-object.defineproperty
        exports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {
          anObject(O);
          P = toPrimitive(P, true);
          anObject(Attributes);
          if (IE8_DOM_DEFINE) try {
            return nativeDefineProperty(O, P, Attributes);
          } catch (error) {
            /* empty */
          }
          if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
          if ('value' in Attributes) O[P] = Attributes.value;
          return O;
        };
      },
      {
        '../internals/an-object': 5,
        '../internals/descriptors': 29,
        '../internals/ie8-dom-define': 47,
        '../internals/to-primitive': 108
      }
    ],
    72: [
      function (_dereq_, module, exports) {
        var DESCRIPTORS = _dereq_('../internals/descriptors');
        var propertyIsEnumerableModule = _dereq_('../internals/object-property-is-enumerable');
        var createPropertyDescriptor = _dereq_('../internals/create-property-descriptor');
        var toIndexedObject = _dereq_('../internals/to-indexed-object');
        var toPrimitive = _dereq_('../internals/to-primitive');
        var has = _dereq_('../internals/has');
        var IE8_DOM_DEFINE = _dereq_('../internals/ie8-dom-define');
        var nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor; // `Object.getOwnPropertyDescriptor` method
        // https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor
        exports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
          O = toIndexedObject(O);
          P = toPrimitive(P, true);
          if (IE8_DOM_DEFINE) try {
            return nativeGetOwnPropertyDescriptor(O, P);
          } catch (error) {
            /* empty */
          }
          if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);
        };
      },
      {
        '../internals/create-property-descriptor': 25,
        '../internals/descriptors': 29,
        '../internals/has': 43,
        '../internals/ie8-dom-define': 47,
        '../internals/object-property-is-enumerable': 79,
        '../internals/to-indexed-object': 104,
        '../internals/to-primitive': 108
      }
    ],
    73: [
      function (_dereq_, module, exports) {
        var toIndexedObject = _dereq_('../internals/to-indexed-object');
        var nativeGetOwnPropertyNames = _dereq_('../internals/object-get-own-property-names').f;
        var toString = {
        }.toString;
        var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [
        ];
        var getWindowNames = function (it) {
          try {
            return nativeGetOwnPropertyNames(it);
          } catch (error) {
            return windowNames.slice();
          }
        }; // fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
        module.exports.f = function getOwnPropertyNames(it) {
          return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : nativeGetOwnPropertyNames(toIndexedObject(it));
        };
      },
      {
        '../internals/object-get-own-property-names': 74,
        '../internals/to-indexed-object': 104
      }
    ],
    74: [
      function (_dereq_, module, exports) {
        var internalObjectKeys = _dereq_('../internals/object-keys-internal');
        var enumBugKeys = _dereq_('../internals/enum-bug-keys');
        var hiddenKeys = enumBugKeys.concat('length', 'prototype'); // `Object.getOwnPropertyNames` method
        // https://tc39.github.io/ecma262/#sec-object.getownpropertynames
        exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
          return internalObjectKeys(O, hiddenKeys);
        };
      },
      {
        '../internals/enum-bug-keys': 35,
        '../internals/object-keys-internal': 77
      }
    ],
    75: [
      function (_dereq_, module, exports) {
        exports.f = Object.getOwnPropertySymbols;
      },
      {
      }
    ],
    76: [
      function (_dereq_, module, exports) {
        var has = _dereq_('../internals/has');
        var toObject = _dereq_('../internals/to-object');
        var sharedKey = _dereq_('../internals/shared-key');
        var CORRECT_PROTOTYPE_GETTER = _dereq_('../internals/correct-prototype-getter');
        var IE_PROTO = sharedKey('IE_PROTO');
        var ObjectPrototype = Object.prototype; // `Object.getPrototypeOf` method
        // https://tc39.github.io/ecma262/#sec-object.getprototypeof
        module.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {
          O = toObject(O);
          if (has(O, IE_PROTO)) return O[IE_PROTO];
          if (typeof O.constructor == 'function' && O instanceof O.constructor) {
            return O.constructor.prototype;
          }
          return O instanceof Object ? ObjectPrototype : null;
        };
      },
      {
        '../internals/correct-prototype-getter': 22,
        '../internals/has': 43,
        '../internals/shared-key': 95,
        '../internals/to-object': 107
      }
    ],
    77: [
      function (_dereq_, module, exports) {
        var has = _dereq_('../internals/has');
        var toIndexedObject = _dereq_('../internals/to-indexed-object');
        var indexOf = _dereq_('../internals/array-includes').indexOf;
        var hiddenKeys = _dereq_('../internals/hidden-keys');
        module.exports = function (object, names) {
          var O = toIndexedObject(object);
          var i = 0;
          var result = [
          ];
          var key;
          for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key); // Don't enum bug & hidden keys
          while (names.length > i) if (has(O, key = names[i++])) {
            ~indexOf(result, key) || result.push(key);
          }
          return result;
        };
      },
      {
        '../internals/array-includes': 8,
        '../internals/has': 43,
        '../internals/hidden-keys': 44,
        '../internals/to-indexed-object': 104
      }
    ],
    78: [
      function (_dereq_, module, exports) {
        var internalObjectKeys = _dereq_('../internals/object-keys-internal');
        var enumBugKeys = _dereq_('../internals/enum-bug-keys'); // `Object.keys` method
        // https://tc39.github.io/ecma262/#sec-object.keys
        module.exports = Object.keys || function keys(O) {
          return internalObjectKeys(O, enumBugKeys);
        };
      },
      {
        '../internals/enum-bug-keys': 35,
        '../internals/object-keys-internal': 77
      }
    ],
    79: [
      function (_dereq_, module, exports) {
        'use strict';
        var nativePropertyIsEnumerable = {
        }.propertyIsEnumerable;
        var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor; // Nashorn ~ JDK8 bug
        var NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({
          1: 2
        }, 1); // `Object.prototype.propertyIsEnumerable` method implementation
        // https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable
        exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
          var descriptor = getOwnPropertyDescriptor(this, V);
          return !!descriptor && descriptor.enumerable;
        }
         : nativePropertyIsEnumerable;
      },
      {
      }
    ],
    80: [
      function (_dereq_, module, exports) {
        var anObject = _dereq_('../internals/an-object');
        var aPossiblePrototype = _dereq_('../internals/a-possible-prototype'); // `Object.setPrototypeOf` method
        // https://tc39.github.io/ecma262/#sec-object.setprototypeof
        // Works with __proto__ only. Old v8 can't work with null proto objects.
        /* eslint-disable no-proto */
        module.exports = Object.setPrototypeOf || ('__proto__' in {
        }
        ? function () {
          var CORRECT_SETTER = false;
          var test = {
          };
          var setter;
          try {
            setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;
            setter.call(test, [
            ]);
            CORRECT_SETTER = test instanceof Array;
          } catch (error) {
            /* empty */
          }
          return function setPrototypeOf(O, proto) {
            anObject(O);
            aPossiblePrototype(proto);
            if (CORRECT_SETTER) setter.call(O, proto);
             else O.__proto__ = proto;
            return O;
          };
        }() : undefined);
      },
      {
        '../internals/a-possible-prototype': 2,
        '../internals/an-object': 5
      }
    ],
    81: [
      function (_dereq_, module, exports) {
        'use strict';
        var TO_STRING_TAG_SUPPORT = _dereq_('../internals/to-string-tag-support');
        var classof = _dereq_('../internals/classof'); // `Object.prototype.toString` method implementation
        // https://tc39.github.io/ecma262/#sec-object.prototype.tostring
        module.exports = TO_STRING_TAG_SUPPORT ? {
        }.toString : function toString() {
          return '[object ' + classof(this) + ']';
        };
      },
      {
        '../internals/classof': 17,
        '../internals/to-string-tag-support': 109
      }
    ],
    82: [
      function (_dereq_, module, exports) {
        var getBuiltIn = _dereq_('../internals/get-built-in');
        var getOwnPropertyNamesModule = _dereq_('../internals/object-get-own-property-names');
        var getOwnPropertySymbolsModule = _dereq_('../internals/object-get-own-property-symbols');
        var anObject = _dereq_('../internals/an-object'); // all object keys, includes non-enumerable and symbols
        module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
          var keys = getOwnPropertyNamesModule.f(anObject(it));
          var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
          return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;
        };
      },
      {
        '../internals/an-object': 5,
        '../internals/get-built-in': 40,
        '../internals/object-get-own-property-names': 74,
        '../internals/object-get-own-property-symbols': 75
      }
    ],
    83: [
      function (_dereq_, module, exports) {
        var global = _dereq_('../internals/global');
        module.exports = global;
      },
      {
        '../internals/global': 42
      }
    ],
    84: [
      function (_dereq_, module, exports) {
        module.exports = function (exec) {
          try {
            return {
              error: false,
              value: exec()
            };
          } catch (error) {
            return {
              error: true,
              value: error
            };
          }
        };
      },
      {
      }
    ],
    85: [
      function (_dereq_, module, exports) {
        var anObject = _dereq_('../internals/an-object');
        var isObject = _dereq_('../internals/is-object');
        var newPromiseCapability = _dereq_('../internals/new-promise-capability');
        module.exports = function (C, x) {
          anObject(C);
          if (isObject(x) && x.constructor === C) return x;
          var promiseCapability = newPromiseCapability.f(C);
          var resolve = promiseCapability.resolve;
          resolve(x);
          return promiseCapability.promise;
        };
      },
      {
        '../internals/an-object': 5,
        '../internals/is-object': 56,
        '../internals/new-promise-capability': 66
      }
    ],
    86: [
      function (_dereq_, module, exports) {
        var redefine = _dereq_('../internals/redefine');
        module.exports = function (target, src, options) {
          for (var key in src) redefine(target, key, src[key], options);
          return target;
        };
      },
      {
        '../internals/redefine': 87
      }
    ],
    87: [
      function (_dereq_, module, exports) {
        var global = _dereq_('../internals/global');
        var createNonEnumerableProperty = _dereq_('../internals/create-non-enumerable-property');
        var has = _dereq_('../internals/has');
        var setGlobal = _dereq_('../internals/set-global');
        var inspectSource = _dereq_('../internals/inspect-source');
        var InternalStateModule = _dereq_('../internals/internal-state');
        var getInternalState = InternalStateModule.get;
        var enforceInternalState = InternalStateModule.enforce;
        var TEMPLATE = String(String).split('String');
        (module.exports = function (O, key, value, options) {
          var unsafe = options ? !!options.unsafe : false;
          var simple = options ? !!options.enumerable : false;
          var noTargetGet = options ? !!options.noTargetGet : false;
          if (typeof value == 'function') {
            if (typeof key == 'string' && !has(value, 'name')) createNonEnumerableProperty(value, 'name', key);
            enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');
          }
          if (O === global) {
            if (simple) O[key] = value;
             else setGlobal(key, value);
            return;
          } else if (!unsafe) {
            delete O[key];
          } else if (!noTargetGet && O[key]) {
            simple = true;
          }
          if (simple) O[key] = value;
           else createNonEnumerableProperty(O, key, value); // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
        }) (Function.prototype, 'toString', function toString() {
          return typeof this == 'function' && getInternalState(this).source || inspectSource(this);
        });
      },
      {
        '../internals/create-non-enumerable-property': 24,
        '../internals/global': 42,
        '../internals/has': 43,
        '../internals/inspect-source': 50,
        '../internals/internal-state': 52,
        '../internals/set-global': 92
      }
    ],
    88: [
      function (_dereq_, module, exports) {
        'use strict';
        var regexpFlags = _dereq_('./regexp-flags');
        var stickyHelpers = _dereq_('./regexp-sticky-helpers');
        var nativeExec = RegExp.prototype.exec; // This always refers to the native implementation, because the
        // String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
        // which loads this file before patching the method.
        var nativeReplace = String.prototype.replace;
        var patchedExec = nativeExec;
        var UPDATES_LAST_INDEX_WRONG = function () {
          var re1 = /a/;
          var re2 = /b*/g;
          nativeExec.call(re1, 'a');
          nativeExec.call(re2, 'a');
          return re1.lastIndex !== 0 || re2.lastIndex !== 0;
        }();
        var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET; // nonparticipating capturing group, copied from es5-shim's String#split patch.
        var NPCG_INCLUDED = /()??/.exec('') [1] !== undefined;
        var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;
        if (PATCH) {
          patchedExec = function exec(str) {
            var re = this;
            var lastIndex,
            reCopy,
            match,
            i;
            var sticky = UNSUPPORTED_Y && re.sticky;
            var flags = regexpFlags.call(re);
            var source = re.source;
            var charsAdded = 0;
            var strCopy = str;
            if (sticky) {
              flags = flags.replace('y', '');
              if (flags.indexOf('g') === - 1) {
                flags += 'g';
              }
              strCopy = String(str).slice(re.lastIndex); // Support anchored sticky behavior.
              if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\n')) {
                source = '(?: ' + source + ')';
                strCopy = ' ' + strCopy;
                charsAdded++;
              } // ^(? + rx + ) is needed, in combination with some str slicing, to
              // simulate the 'y' flag.

              reCopy = new RegExp('^(?:' + source + ')', flags);
            }
            if (NPCG_INCLUDED) {
              reCopy = new RegExp('^' + source + '$(?!\\s)', flags);
            }
            if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;
            match = nativeExec.call(sticky ? reCopy : re, strCopy);
            if (sticky) {
              if (match) {
                match.input = match.input.slice(charsAdded);
                match[0] = match[0].slice(charsAdded);
                match.index = re.lastIndex;
                re.lastIndex += match[0].length;
              } else re.lastIndex = 0;
            } else if (UPDATES_LAST_INDEX_WRONG && match) {
              re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
            }
            if (NPCG_INCLUDED && match && match.length > 1) {
              // Fix browsers whose `exec` methods don't consistently return `undefined`
              // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
              nativeReplace.call(match[0], reCopy, function () {
                for (i = 1; i < arguments.length - 2; i++) {
                  if (arguments[i] === undefined) match[i] = undefined;
                }
              });
            }
            return match;
          };
        }
        module.exports = patchedExec;
      },
      {
        './regexp-flags': 89,
        './regexp-sticky-helpers': 90
      }
    ],
    89: [
      function (_dereq_, module, exports) {
        'use strict';
        var anObject = _dereq_('../internals/an-object'); // `RegExp.prototype.flags` getter implementation
        // https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags
        module.exports = function () {
          var that = anObject(this);
          var result = '';
          if (that.global) result += 'g';
          if (that.ignoreCase) result += 'i';
          if (that.multiline) result += 'm';
          if (that.dotAll) result += 's';
          if (that.unicode) result += 'u';
          if (that.sticky) result += 'y';
          return result;
        };
      },
      {
        '../internals/an-object': 5
      }
    ],
    90: [
      function (_dereq_, module, exports) {
        'use strict';
        var fails = _dereq_('./fails'); // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,
        // so we use an intermediate function.
        function RE(s, f) {
          return RegExp(s, f);
        }
        exports.UNSUPPORTED_Y = fails(function () {
          // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
          var re = RE('a', 'y');
          re.lastIndex = 2;
          return re.exec('abcd') != null;
        });
        exports.BROKEN_CARET = fails(function () {
          // https://bugzilla.mozilla.org/show_bug.cgi?id=773687
          var re = RE('^r', 'gy');
          re.lastIndex = 2;
          return re.exec('str') != null;
        });
      },
      {
        './fails': 37
      }
    ],
    91: [
      function (_dereq_, module, exports) {
        // `RequireObjectCoercible` abstract operation
        // https://tc39.github.io/ecma262/#sec-requireobjectcoercible
        module.exports = function (it) {
          if (it == undefined) throw TypeError('Can\'t call method on ' + it);
          return it;
        };
      },
      {
      }
    ],
    92: [
      function (_dereq_, module, exports) {
        var global = _dereq_('../internals/global');
        var createNonEnumerableProperty = _dereq_('../internals/create-non-enumerable-property');
        module.exports = function (key, value) {
          try {
            createNonEnumerableProperty(global, key, value);
          } catch (error) {
            global[key] = value;
          }
          return value;
        };
      },
      {
        '../internals/create-non-enumerable-property': 24,
        '../internals/global': 42
      }
    ],
    93: [
      function (_dereq_, module, exports) {
        'use strict';
        var getBuiltIn = _dereq_('../internals/get-built-in');
        var definePropertyModule = _dereq_('../internals/object-define-property');
        var wellKnownSymbol = _dereq_('../internals/well-known-symbol');
        var DESCRIPTORS = _dereq_('../internals/descriptors');
        var SPECIES = wellKnownSymbol('species');
        module.exports = function (CONSTRUCTOR_NAME) {
          var Constructor = getBuiltIn(CONSTRUCTOR_NAME);
          var defineProperty = definePropertyModule.f;
          if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {
            defineProperty(Constructor, SPECIES, {
              configurable: true,
              get: function () {
                return this;
              }
            });
          }
        };
      },
      {
        '../internals/descriptors': 29,
        '../internals/get-built-in': 40,
        '../internals/object-define-property': 71,
        '../internals/well-known-symbol': 113
      }
    ],
    94: [
      function (_dereq_, module, exports) {
        var defineProperty = _dereq_('../internals/object-define-property').f;
        var has = _dereq_('../internals/has');
        var wellKnownSymbol = _dereq_('../internals/well-known-symbol');
        var TO_STRING_TAG = wellKnownSymbol('toStringTag');
        module.exports = function (it, TAG, STATIC) {
          if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {
            defineProperty(it, TO_STRING_TAG, {
              configurable: true,
              value: TAG
            });
          }
        };
      },
      {
        '../internals/has': 43,
        '../internals/object-define-property': 71,
        '../internals/well-known-symbol': 113
      }
    ],
    95: [
      function (_dereq_, module, exports) {
        var shared = _dereq_('../internals/shared');
        var uid = _dereq_('../internals/uid');
        var keys = shared('keys');
        module.exports = function (key) {
          return keys[key] || (keys[key] = uid(key));
        };
      },
      {
        '../internals/shared': 97,
        '../internals/uid': 110
      }
    ],
    96: [
      function (_dereq_, module, exports) {
        var global = _dereq_('../internals/global');
        var setGlobal = _dereq_('../internals/set-global');
        var SHARED = '__core-js_shared__';
        var store = global[SHARED] || setGlobal(SHARED, {
        });
        module.exports = store;
      },
      {
        '../internals/global': 42,
        '../internals/set-global': 92
      }
    ],
    97: [
      function (_dereq_, module, exports) {
        var IS_PURE = _dereq_('../internals/is-pure');
        var store = _dereq_('../internals/shared-store');
        (module.exports = function (key, value) {
          return store[key] || (store[key] = value !== undefined ? value : {
          });
        }) ('versions', [
        ]).push({
          version: '3.6.5',
          mode: IS_PURE ? 'pure' : 'global',
          copyright: '© 2020 Denis Pushkarev (zloirock.ru)'
        });
      },
      {
        '../internals/is-pure': 57,
        '../internals/shared-store': 96
      }
    ],
    98: [
      function (_dereq_, module, exports) {
        var anObject = _dereq_('../internals/an-object');
        var aFunction = _dereq_('../internals/a-function');
        var wellKnownSymbol = _dereq_('../internals/well-known-symbol');
        var SPECIES = wellKnownSymbol('species'); // `SpeciesConstructor` abstract operation
        // https://tc39.github.io/ecma262/#sec-speciesconstructor
        module.exports = function (O, defaultConstructor) {
          var C = anObject(O).constructor;
          var S;
          return C === undefined || (S = anObject(C) [SPECIES]) == undefined ? defaultConstructor : aFunction(S);
        };
      },
      {
        '../internals/a-function': 1,
        '../internals/an-object': 5,
        '../internals/well-known-symbol': 113
      }
    ],
    99: [
      function (_dereq_, module, exports) {
        var toInteger = _dereq_('../internals/to-integer');
        var requireObjectCoercible = _dereq_('../internals/require-object-coercible'); // `String.prototype.{ codePointAt, at }` methods implementation
        var createMethod = function (CONVERT_TO_STRING) {
          return function ($this, pos) {
            var S = String(requireObjectCoercible($this));
            var position = toInteger(pos);
            var size = S.length;
            var first,
            second;
            if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
            first = S.charCodeAt(position);
            return first < 55296 || first > 56319 || position + 1 === size || (second = S.charCodeAt(position + 1)) < 56320 || second > 57343 ? CONVERT_TO_STRING ? S.charAt(position) : first : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 55296 << 10) + (second - 56320) + 65536;
          };
        };
        module.exports = {
          // `String.prototype.codePointAt` method
          // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat
          codeAt: createMethod(false),
          // `String.prototype.at` method
          // https://github.com/mathiasbynens/String.prototype.at
          charAt: createMethod(true)
        };
      },
      {
        '../internals/require-object-coercible': 91,
        '../internals/to-integer': 105
      }
    ],
    100: [
      function (_dereq_, module, exports) {
        var fails = _dereq_('../internals/fails');
        var whitespaces = _dereq_('../internals/whitespaces');
        var non = '​᠎'; // check that a method works with the correct list
        // of whitespaces and has a correct name
        module.exports = function (METHOD_NAME) {
          return fails(function () {
            return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;
          });
        };
      },
      {
        '../internals/fails': 37,
        '../internals/whitespaces': 114
      }
    ],
    101: [
      function (_dereq_, module, exports) {
        var requireObjectCoercible = _dereq_('../internals/require-object-coercible');
        var whitespaces = _dereq_('../internals/whitespaces');
        var whitespace = '[' + whitespaces + ']';
        var ltrim = RegExp('^' + whitespace + whitespace + '*');
        var rtrim = RegExp(whitespace + whitespace + '*$'); // `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation
        var createMethod = function (TYPE) {
          return function ($this) {
            var string = String(requireObjectCoercible($this));
            if (TYPE & 1) string = string.replace(ltrim, '');
            if (TYPE & 2) string = string.replace(rtrim, '');
            return string;
          };
        };
        module.exports = {
          // `String.prototype.{ trimLeft, trimStart }` methods
          // https://tc39.github.io/ecma262/#sec-string.prototype.trimstart
          start: createMethod(1),
          // `String.prototype.{ trimRight, trimEnd }` methods
          // https://tc39.github.io/ecma262/#sec-string.prototype.trimend
          end: createMethod(2),
          // `String.prototype.trim` method
          // https://tc39.github.io/ecma262/#sec-string.prototype.trim
          trim: createMethod(3)
        };
      },
      {
        '../internals/require-object-coercible': 91,
        '../internals/whitespaces': 114
      }
    ],
    102: [
      function (_dereq_, module, exports) {
        var global = _dereq_('../internals/global');
        var fails = _dereq_('../internals/fails');
        var classof = _dereq_('../internals/classof-raw');
        var bind = _dereq_('../internals/function-bind-context');
        var html = _dereq_('../internals/html');
        var createElement = _dereq_('../internals/document-create-element');
        var IS_IOS = _dereq_('../internals/engine-is-ios');
        var location = global.location;
        var set = global.setImmediate;
        var clear = global.clearImmediate;
        var process = global.process;
        var MessageChannel = global.MessageChannel;
        var Dispatch = global.Dispatch;
        var counter = 0;
        var queue = {
        };
        var ONREADYSTATECHANGE = 'onreadystatechange';
        var defer,
        channel,
        port;
        var run = function (id) {
          // eslint-disable-next-line no-prototype-builtins
          if (queue.hasOwnProperty(id)) {
            var fn = queue[id];
            delete queue[id];
            fn();
          }
        };
        var runner = function (id) {
          return function () {
            run(id);
          };
        };
        var listener = function (event) {
          run(event.data);
        };
        var post = function (id) {
          // old engines have not location.origin
          global.postMessage(id + '', location.protocol + '//' + location.host);
        }; // Node.js 0.9+ & IE10+ has setImmediate, otherwise:
        if (!set || !clear) {
          set = function setImmediate(fn) {
            var args = [
            ];
            var i = 1;
            while (arguments.length > i) args.push(arguments[i++]);
            queue[++counter] = function () {
              // eslint-disable-next-line no-new-func
              (typeof fn == 'function' ? fn : Function(fn)).apply(undefined, args);
            };
            defer(counter);
            return counter;
          };
          clear = function clearImmediate(id) {
            delete queue[id];
          }; // Node.js 0.8-
          if (classof(process) == 'process') {
            defer = function (id) {
              process.nextTick(runner(id));
            }; // Sphere (JS game engine) Dispatch API
          } else if (Dispatch && Dispatch.now) {
            defer = function (id) {
              Dispatch.now(runner(id));
            }; // Browsers with MessageChannel, includes WebWorkers
            // except iOS - https://github.com/zloirock/core-js/issues/624
          } else if (MessageChannel && !IS_IOS) {
            channel = new MessageChannel();
            port = channel.port2;
            channel.port1.onmessage = listener;
            defer = bind(port.postMessage, port, 1); // Browsers with postMessage, skip WebWorkers
            // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
          } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts && !fails(post) && location.protocol !== 'file:') {
            defer = post;
            global.addEventListener('message', listener, false); // IE8-
          } else if (ONREADYSTATECHANGE in createElement('script')) {
            defer = function (id) {
              html.appendChild(createElement('script')) [ONREADYSTATECHANGE] = function () {
                html.removeChild(this);
                run(id);
              };
            }; // Rest old browsers
          } else {
            defer = function (id) {
              setTimeout(runner(id), 0);
            };
          }
        }
        module.exports = {
          set: set,
          clear: clear
        };
      },
      {
        '../internals/classof-raw': 16,
        '../internals/document-create-element': 30,
        '../internals/engine-is-ios': 32,
        '../internals/fails': 37,
        '../internals/function-bind-context': 39,
        '../internals/global': 42,
        '../internals/html': 46
      }
    ],
    103: [
      function (_dereq_, module, exports) {
        var toInteger = _dereq_('../internals/to-integer');
        var max = Math.max;
        var min = Math.min; // Helper for a popular repeating case of the spec:
        // Let integer be ? ToInteger(index).
        // If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
        module.exports = function (index, length) {
          var integer = toInteger(index);
          return integer < 0 ? max(integer + length, 0) : min(integer, length);
        };
      },
      {
        '../internals/to-integer': 105
      }
    ],
    104: [
      function (_dereq_, module, exports) {
        // toObject with fallback for non-array-like ES3 strings
        var IndexedObject = _dereq_('../internals/indexed-object');
        var requireObjectCoercible = _dereq_('../internals/require-object-coercible');
        module.exports = function (it) {
          return IndexedObject(requireObjectCoercible(it));
        };
      },
      {
        '../internals/indexed-object': 48,
        '../internals/require-object-coercible': 91
      }
    ],
    105: [
      function (_dereq_, module, exports) {
        var ceil = Math.ceil;
        var floor = Math.floor; // `ToInteger` abstract operation
        // https://tc39.github.io/ecma262/#sec-tointeger
        module.exports = function (argument) {
          return isNaN(argument = + argument) ? 0 : (argument > 0 ? floor : ceil) (argument);
        };
      },
      {
      }
    ],
    106: [
      function (_dereq_, module, exports) {
        var toInteger = _dereq_('../internals/to-integer');
        var min = Math.min; // `ToLength` abstract operation
        // https://tc39.github.io/ecma262/#sec-tolength
        module.exports = function (argument) {
          return argument > 0 ? min(toInteger(argument), 9007199254740991) : 0; // 2 ** 53 - 1 == 9007199254740991
        };
      },
      {
        '../internals/to-integer': 105
      }
    ],
    107: [
      function (_dereq_, module, exports) {
        var requireObjectCoercible = _dereq_('../internals/require-object-coercible'); // `ToObject` abstract operation
        // https://tc39.github.io/ecma262/#sec-toobject
        module.exports = function (argument) {
          return Object(requireObjectCoercible(argument));
        };
      },
      {
        '../internals/require-object-coercible': 91
      }
    ],
    108: [
      function (_dereq_, module, exports) {
        var isObject = _dereq_('../internals/is-object'); // `ToPrimitive` abstract operation
        // https://tc39.github.io/ecma262/#sec-toprimitive
        // instead of the ES6 spec version, we didn't implement @@toPrimitive case
        // and the second argument - flag - preferred type is a string
        module.exports = function (input, PREFERRED_STRING) {
          if (!isObject(input)) return input;
          var fn,
          val;
          if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
          if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;
          if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
          throw TypeError('Can\'t convert object to primitive value');
        };
      },
      {
        '../internals/is-object': 56
      }
    ],
    109: [
      function (_dereq_, module, exports) {
        var wellKnownSymbol = _dereq_('../internals/well-known-symbol');
        var TO_STRING_TAG = wellKnownSymbol('toStringTag');
        var test = {
        };
        test[TO_STRING_TAG] = 'z';
        module.exports = String(test) === '[object z]';
      },
      {
        '../internals/well-known-symbol': 113
      }
    ],
    110: [
      function (_dereq_, module, exports) {
        var id = 0;
        var postfix = Math.random();
        module.exports = function (key) {
          return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);
        };
      },
      {
      }
    ],
    111: [
      function (_dereq_, module, exports) {
        var NATIVE_SYMBOL = _dereq_('../internals/native-symbol');
        module.exports = NATIVE_SYMBOL // eslint-disable-next-line no-undef
        && !Symbol.sham // eslint-disable-next-line no-undef
        && typeof Symbol.iterator == 'symbol';
      },
      {
        '../internals/native-symbol': 64
      }
    ],
    112: [
      function (_dereq_, module, exports) {
        var wellKnownSymbol = _dereq_('../internals/well-known-symbol');
        exports.f = wellKnownSymbol;
      },
      {
        '../internals/well-known-symbol': 113
      }
    ],
    113: [
      function (_dereq_, module, exports) {
        var global = _dereq_('../internals/global');
        var shared = _dereq_('../internals/shared');
        var has = _dereq_('../internals/has');
        var uid = _dereq_('../internals/uid');
        var NATIVE_SYMBOL = _dereq_('../internals/native-symbol');
        var USE_SYMBOL_AS_UID = _dereq_('../internals/use-symbol-as-uid');
        var WellKnownSymbolsStore = shared('wks');
        var Symbol = global.Symbol;
        var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;
        module.exports = function (name) {
          if (!has(WellKnownSymbolsStore, name)) {
            if (NATIVE_SYMBOL && has(Symbol, name)) WellKnownSymbolsStore[name] = Symbol[name];
             else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);
          }
          return WellKnownSymbolsStore[name];
        };
      },
      {
        '../internals/global': 42,
        '../internals/has': 43,
        '../internals/native-symbol': 64,
        '../internals/shared': 97,
        '../internals/uid': 110,
        '../internals/use-symbol-as-uid': 111
      }
    ],
    114: [
      function (_dereq_, module, exports) {
        // a string of all valid unicode whitespaces
        // eslint-disable-next-line max-len
        module.exports = '\t\n\v\f\r                　\u2028\u2029﻿';
      },
      {
      }
    ],
    115: [
      function (_dereq_, module, exports) {
        'use strict';
        var $ = _dereq_('../internals/export');
        var fails = _dereq_('../internals/fails');
        var isArray = _dereq_('../internals/is-array');
        var isObject = _dereq_('../internals/is-object');
        var toObject = _dereq_('../internals/to-object');
        var toLength = _dereq_('../internals/to-length');
        var createProperty = _dereq_('../internals/create-property');
        var arraySpeciesCreate = _dereq_('../internals/array-species-create');
        var arrayMethodHasSpeciesSupport = _dereq_('../internals/array-method-has-species-support');
        var wellKnownSymbol = _dereq_('../internals/well-known-symbol');
        var V8_VERSION = _dereq_('../internals/engine-v8-version');
        var IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');
        var MAX_SAFE_INTEGER = 9007199254740991;
        var MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded'; // We can't use this feature detection in V8 since it causes
        // deoptimization and serious performance degradation
        // https://github.com/zloirock/core-js/issues/679
        var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {
          var array = [
          ];
          array[IS_CONCAT_SPREADABLE] = false;
          return array.concat() [0] !== array;
        });
        var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');
        var isConcatSpreadable = function (O) {
          if (!isObject(O)) return false;
          var spreadable = O[IS_CONCAT_SPREADABLE];
          return spreadable !== undefined ? !!spreadable : isArray(O);
        };
        var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT; // `Array.prototype.concat` method
        // https://tc39.github.io/ecma262/#sec-array.prototype.concat
        // with adding support of @@isConcatSpreadable and @@species
        $({
          target: 'Array',
          proto: true,
          forced: FORCED
        }, {
          concat: function concat(arg) {
            // eslint-disable-line no-unused-vars
            var O = toObject(this);
            var A = arraySpeciesCreate(O, 0);
            var n = 0;
            var i,
            k,
            length,
            len,
            E;
            for (i = - 1, length = arguments.length; i < length; i++) {
              E = i === - 1 ? O : arguments[i];
              if (isConcatSpreadable(E)) {
                len = toLength(E.length);
                if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
                for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);
              } else {
                if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
                createProperty(A, n++, E);
              }
            }
            A.length = n;
            return A;
          }
        });
      },
      {
        '../internals/array-method-has-species-support': 10,
        '../internals/array-species-create': 13,
        '../internals/create-property': 26,
        '../internals/engine-v8-version': 34,
        '../internals/export': 36,
        '../internals/fails': 37,
        '../internals/is-array': 54,
        '../internals/is-object': 56,
        '../internals/to-length': 106,
        '../internals/to-object': 107,
        '../internals/well-known-symbol': 113
      }
    ],
    116: [
      function (_dereq_, module, exports) {
        var $ = _dereq_('../internals/export');
        var fill = _dereq_('../internals/array-fill');
        var addToUnscopables = _dereq_('../internals/add-to-unscopables'); // `Array.prototype.fill` method
        // https://tc39.github.io/ecma262/#sec-array.prototype.fill
        $({
          target: 'Array',
          proto: true
        }, {
          fill: fill
        }); // https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
        addToUnscopables('fill');
      },
      {
        '../internals/add-to-unscopables': 3,
        '../internals/array-fill': 6,
        '../internals/export': 36
      }
    ],
    117: [
      function (_dereq_, module, exports) {
        'use strict';
        var $ = _dereq_('../internals/export');
        var $filter = _dereq_('../internals/array-iteration').filter;
        var arrayMethodHasSpeciesSupport = _dereq_('../internals/array-method-has-species-support');
        var arrayMethodUsesToLength = _dereq_('../internals/array-method-uses-to-length');
        var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter'); // Edge 14- issue
        var USES_TO_LENGTH = arrayMethodUsesToLength('filter'); // `Array.prototype.filter` method
        // https://tc39.github.io/ecma262/#sec-array.prototype.filter
        // with adding support of @@species
        $({
          target: 'Array',
          proto: true,
          forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH
        }, {
          filter: function filter(callbackfn          /* , thisArg */
          ) {
            return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
          }
        });
      },
      {
        '../internals/array-iteration': 9,
        '../internals/array-method-has-species-support': 10,
        '../internals/array-method-uses-to-length': 12,
        '../internals/export': 36
      }
    ],
    118: [
      function (_dereq_, module, exports) {
        'use strict';
        var $ = _dereq_('../internals/export');
        var forEach = _dereq_('../internals/array-for-each'); // `Array.prototype.forEach` method
        // https://tc39.github.io/ecma262/#sec-array.prototype.foreach
        $({
          target: 'Array',
          proto: true,
          forced: [
          ].forEach != forEach
        }, {
          forEach: forEach
        });
      },
      {
        '../internals/array-for-each': 7,
        '../internals/export': 36
      }
    ],
    119: [
      function (_dereq_, module, exports) {
        'use strict';
        var $ = _dereq_('../internals/export');
        var $includes = _dereq_('../internals/array-includes').includes;
        var addToUnscopables = _dereq_('../internals/add-to-unscopables');
        var arrayMethodUsesToLength = _dereq_('../internals/array-method-uses-to-length');
        var USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', {
          ACCESSORS: true,
          1: 0
        }); // `Array.prototype.includes` method
        // https://tc39.github.io/ecma262/#sec-array.prototype.includes
        $({
          target: 'Array',
          proto: true,
          forced: !USES_TO_LENGTH
        }, {
          includes: function includes(el          /* , fromIndex = 0 */
          ) {
            return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
          }
        }); // https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
        addToUnscopables('includes');
      },
      {
        '../internals/add-to-unscopables': 3,
        '../internals/array-includes': 8,
        '../internals/array-method-uses-to-length': 12,
        '../internals/export': 36
      }
    ],
    120: [
      function (_dereq_, module, exports) {
        'use strict';
        var toIndexedObject = _dereq_('../internals/to-indexed-object');
        var addToUnscopables = _dereq_('../internals/add-to-unscopables');
        var Iterators = _dereq_('../internals/iterators');
        var InternalStateModule = _dereq_('../internals/internal-state');
        var defineIterator = _dereq_('../internals/define-iterator');
        var ARRAY_ITERATOR = 'Array Iterator';
        var setInternalState = InternalStateModule.set;
        var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR); // `Array.prototype.entries` method
        // https://tc39.github.io/ecma262/#sec-array.prototype.entries
        // `Array.prototype.keys` method
        // https://tc39.github.io/ecma262/#sec-array.prototype.keys
        // `Array.prototype.values` method
        // https://tc39.github.io/ecma262/#sec-array.prototype.values
        // `Array.prototype[@@iterator]` method
        // https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator
        // `CreateArrayIterator` internal method
        // https://tc39.github.io/ecma262/#sec-createarrayiterator
        module.exports = defineIterator(Array, 'Array', function (iterated, kind) {
          setInternalState(this, {
            type: ARRAY_ITERATOR,
            target: toIndexedObject(iterated),
            // target
            index: 0,
            // next index
            kind: kind // kind
          }); // `%ArrayIteratorPrototype%.next` method
          // https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next
        }, function () {
          var state = getInternalState(this);
          var target = state.target;
          var kind = state.kind;
          var index = state.index++;
          if (!target || index >= target.length) {
            state.target = undefined;
            return {
              value: undefined,
              done: true
            };
          }
          if (kind == 'keys') return {
            value: index,
            done: false
          };
          if (kind == 'values') return {
            value: target[index],
            done: false
          };
          return {
            value: [
              index,
              target[index]
            ],
            done: false
          };
        }, 'values'); // argumentsList[@@iterator] is %ArrayProto_values%
        // https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject
        // https://tc39.github.io/ecma262/#sec-createmappedargumentsobject
        Iterators.Arguments = Iterators.Array; // https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
        addToUnscopables('keys');
        addToUnscopables('values');
        addToUnscopables('entries');
      },
      {
        '../internals/add-to-unscopables': 3,
        '../internals/define-iterator': 27,
        '../internals/internal-state': 52,
        '../internals/iterators': 61,
        '../internals/to-indexed-object': 104
      }
    ],
    121: [
      function (_dereq_, module, exports) {
        'use strict';
        var $ = _dereq_('../internals/export');
        var IndexedObject = _dereq_('../internals/indexed-object');
        var toIndexedObject = _dereq_('../internals/to-indexed-object');
        var arrayMethodIsStrict = _dereq_('../internals/array-method-is-strict');
        var nativeJoin = [
        ].join;
        var ES3_STRINGS = IndexedObject != Object;
        var STRICT_METHOD = arrayMethodIsStrict('join', ','); // `Array.prototype.join` method
        // https://tc39.github.io/ecma262/#sec-array.prototype.join
        $({
          target: 'Array',
          proto: true,
          forced: ES3_STRINGS || !STRICT_METHOD
        }, {
          join: function join(separator) {
            return nativeJoin.call(toIndexedObject(this), separator === undefined ? ',' : separator);
          }
        });
      },
      {
        '../internals/array-method-is-strict': 11,
        '../internals/export': 36,
        '../internals/indexed-object': 48,
        '../internals/to-indexed-object': 104
      }
    ],
    122: [
      function (_dereq_, module, exports) {
        'use strict';
        var $ = _dereq_('../internals/export');
        var $map = _dereq_('../internals/array-iteration').map;
        var arrayMethodHasSpeciesSupport = _dereq_('../internals/array-method-has-species-support');
        var arrayMethodUsesToLength = _dereq_('../internals/array-method-uses-to-length');
        var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map'); // FF49- issue
        var USES_TO_LENGTH = arrayMethodUsesToLength('map'); // `Array.prototype.map` method
        // https://tc39.github.io/ecma262/#sec-array.prototype.map
        // with adding support of @@species
        $({
          target: 'Array',
          proto: true,
          forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH
        }, {
          map: function map(callbackfn          /* , thisArg */
          ) {
            return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
          }
        });
      },
      {
        '../internals/array-iteration': 9,
        '../internals/array-method-has-species-support': 10,
        '../internals/array-method-uses-to-length': 12,
        '../internals/export': 36
      }
    ],
    123: [
      function (_dereq_, module, exports) {
        'use strict';
        var $ = _dereq_('../internals/export');
        var isObject = _dereq_('../internals/is-object');
        var isArray = _dereq_('../internals/is-array');
        var toAbsoluteIndex = _dereq_('../internals/to-absolute-index');
        var toLength = _dereq_('../internals/to-length');
        var toIndexedObject = _dereq_('../internals/to-indexed-object');
        var createProperty = _dereq_('../internals/create-property');
        var wellKnownSymbol = _dereq_('../internals/well-known-symbol');
        var arrayMethodHasSpeciesSupport = _dereq_('../internals/array-method-has-species-support');
        var arrayMethodUsesToLength = _dereq_('../internals/array-method-uses-to-length');
        var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');
        var USES_TO_LENGTH = arrayMethodUsesToLength('slice', {
          ACCESSORS: true,
          0: 0,
          1: 2
        });
        var SPECIES = wellKnownSymbol('species');
        var nativeSlice = [
        ].slice;
        var max = Math.max; // `Array.prototype.slice` method
        // https://tc39.github.io/ecma262/#sec-array.prototype.slice
        // fallback for not array-like ES3 strings and DOM objects
        $({
          target: 'Array',
          proto: true,
          forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH
        }, {
          slice: function slice(start, end) {
            var O = toIndexedObject(this);
            var length = toLength(O.length);
            var k = toAbsoluteIndex(start, length);
            var fin = toAbsoluteIndex(end === undefined ? length : end, length); // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible
            var Constructor,
            result,
            n;
            if (isArray(O)) {
              Constructor = O.constructor; // cross-realm fallback
              if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {
                Constructor = undefined;
              } else if (isObject(Constructor)) {
                Constructor = Constructor[SPECIES];
                if (Constructor === null) Constructor = undefined;
              }
              if (Constructor === Array || Constructor === undefined) {
                return nativeSlice.call(O, k, fin);
              }
            }
            result = new (Constructor === undefined ? Array : Constructor) (max(fin - k, 0));
            for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);
            result.length = n;
            return result;
          }
        });
      },
      {
        '../internals/array-method-has-species-support': 10,
        '../internals/array-method-uses-to-length': 12,
        '../internals/create-property': 26,
        '../internals/export': 36,
        '../internals/is-array': 54,
        '../internals/is-object': 56,
        '../internals/to-absolute-index': 103,
        '../internals/to-indexed-object': 104,
        '../internals/to-length': 106,
        '../internals/well-known-symbol': 113
      }
    ],
    124: [
      function (_dereq_, module, exports) {
        var $ = _dereq_('../internals/export');
        var assign = _dereq_('../internals/object-assign'); // `Object.assign` method
        // https://tc39.github.io/ecma262/#sec-object.assign
        $({
          target: 'Object',
          stat: true,
          forced: Object.assign !== assign
        }, {
          assign: assign
        });
      },
      {
        '../internals/export': 36,
        '../internals/object-assign': 68
      }
    ],
    125: [
      function (_dereq_, module, exports) {
        var $ = _dereq_('../internals/export');
        var fails = _dereq_('../internals/fails');
        var toIndexedObject = _dereq_('../internals/to-indexed-object');
        var nativeGetOwnPropertyDescriptor = _dereq_('../internals/object-get-own-property-descriptor').f;
        var DESCRIPTORS = _dereq_('../internals/descriptors');
        var FAILS_ON_PRIMITIVES = fails(function () {
          nativeGetOwnPropertyDescriptor(1);
        });
        var FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES; // `Object.getOwnPropertyDescriptor` method
        // https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor
        $({
          target: 'Object',
          stat: true,
          forced: FORCED,
          sham: !DESCRIPTORS
        }, {
          getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {
            return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);
          }
        });
      },
      {
        '../internals/descriptors': 29,
        '../internals/export': 36,
        '../internals/fails': 37,
        '../internals/object-get-own-property-descriptor': 72,
        '../internals/to-indexed-object': 104
      }
    ],
    126: [
      function (_dereq_, module, exports) {
        var $ = _dereq_('../internals/export');
        var fails = _dereq_('../internals/fails');
        var nativeGetOwnPropertyNames = _dereq_('../internals/object-get-own-property-names-external').f;
        var FAILS_ON_PRIMITIVES = fails(function () {
          return !Object.getOwnPropertyNames(1);
        }); // `Object.getOwnPropertyNames` method
        // https://tc39.github.io/ecma262/#sec-object.getownpropertynames
        $({
          target: 'Object',
          stat: true,
          forced: FAILS_ON_PRIMITIVES
        }, {
          getOwnPropertyNames: nativeGetOwnPropertyNames
        });
      },
      {
        '../internals/export': 36,
        '../internals/fails': 37,
        '../internals/object-get-own-property-names-external': 73
      }
    ],
    127: [
      function (_dereq_, module, exports) {
        var TO_STRING_TAG_SUPPORT = _dereq_('../internals/to-string-tag-support');
        var redefine = _dereq_('../internals/redefine');
        var toString = _dereq_('../internals/object-to-string'); // `Object.prototype.toString` method
        // https://tc39.github.io/ecma262/#sec-object.prototype.tostring
        if (!TO_STRING_TAG_SUPPORT) {
          redefine(Object.prototype, 'toString', toString, {
            unsafe: true
          });
        }
      },
      {
        '../internals/object-to-string': 81,
        '../internals/redefine': 87,
        '../internals/to-string-tag-support': 109
      }
    ],
    128: [
      function (_dereq_, module, exports) {
        'use strict';
        var $ = _dereq_('../internals/export');
        var IS_PURE = _dereq_('../internals/is-pure');
        var global = _dereq_('../internals/global');
        var getBuiltIn = _dereq_('../internals/get-built-in');
        var NativePromise = _dereq_('../internals/native-promise-constructor');
        var redefine = _dereq_('../internals/redefine');
        var redefineAll = _dereq_('../internals/redefine-all');
        var setToStringTag = _dereq_('../internals/set-to-string-tag');
        var setSpecies = _dereq_('../internals/set-species');
        var isObject = _dereq_('../internals/is-object');
        var aFunction = _dereq_('../internals/a-function');
        var anInstance = _dereq_('../internals/an-instance');
        var classof = _dereq_('../internals/classof-raw');
        var inspectSource = _dereq_('../internals/inspect-source');
        var iterate = _dereq_('../internals/iterate');
        var checkCorrectnessOfIteration = _dereq_('../internals/check-correctness-of-iteration');
        var speciesConstructor = _dereq_('../internals/species-constructor');
        var task = _dereq_('../internals/task').set;
        var microtask = _dereq_('../internals/microtask');
        var promiseResolve = _dereq_('../internals/promise-resolve');
        var hostReportErrors = _dereq_('../internals/host-report-errors');
        var newPromiseCapabilityModule = _dereq_('../internals/new-promise-capability');
        var perform = _dereq_('../internals/perform');
        var InternalStateModule = _dereq_('../internals/internal-state');
        var isForced = _dereq_('../internals/is-forced');
        var wellKnownSymbol = _dereq_('../internals/well-known-symbol');
        var V8_VERSION = _dereq_('../internals/engine-v8-version');
        var SPECIES = wellKnownSymbol('species');
        var PROMISE = 'Promise';
        var getInternalState = InternalStateModule.get;
        var setInternalState = InternalStateModule.set;
        var getInternalPromiseState = InternalStateModule.getterFor(PROMISE);
        var PromiseConstructor = NativePromise;
        var TypeError = global.TypeError;
        var document = global.document;
        var process = global.process;
        var $fetch = getBuiltIn('fetch');
        var newPromiseCapability = newPromiseCapabilityModule.f;
        var newGenericPromiseCapability = newPromiseCapability;
        var IS_NODE = classof(process) == 'process';
        var DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);
        var UNHANDLED_REJECTION = 'unhandledrejection';
        var REJECTION_HANDLED = 'rejectionhandled';
        var PENDING = 0;
        var FULFILLED = 1;
        var REJECTED = 2;
        var HANDLED = 1;
        var UNHANDLED = 2;
        var Internal,
        OwnPromiseCapability,
        PromiseWrapper,
        nativeThen;
        var FORCED = isForced(PROMISE, function () {
          var GLOBAL_CORE_JS_PROMISE = inspectSource(PromiseConstructor) !== String(PromiseConstructor);
          if (!GLOBAL_CORE_JS_PROMISE) {
            // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
            // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
            // We can't detect it synchronously, so just check versions
            if (V8_VERSION === 66) return true; // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
            if (!IS_NODE && typeof PromiseRejectionEvent != 'function') return true;
          } // We need Promise#finally in the pure version for preventing prototype pollution

          if (IS_PURE && !PromiseConstructor.prototype['finally']) return true; // We can't use @@species feature detection in V8 since it causes
          // deoptimization and performance degradation
          // https://github.com/zloirock/core-js/issues/679
          if (V8_VERSION >= 51 && /native code/.test(PromiseConstructor)) return false; // Detect correctness of subclassing with @@species support
          var promise = PromiseConstructor.resolve(1);
          var FakePromise = function (exec) {
            exec(function () {
              /* empty */
            }, function () {
              /* empty */
            });
          };
          var constructor = promise.constructor = {
          };
          constructor[SPECIES] = FakePromise;
          return !(promise.then(function () {
            /* empty */
          }) instanceof FakePromise);
        });
        var INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function (iterable) {
          PromiseConstructor.all(iterable) ['catch'](function () {
            /* empty */
          });
        }); // helpers
        var isThenable = function (it) {
          var then;
          return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
        };
        var notify = function (promise, state, isReject) {
          if (state.notified) return;
          state.notified = true;
          var chain = state.reactions;
          microtask(function () {
            var value = state.value;
            var ok = state.state == FULFILLED;
            var index = 0; // variable length - can't use forEach
            while (chain.length > index) {
              var reaction = chain[index++];
              var handler = ok ? reaction.ok : reaction.fail;
              var resolve = reaction.resolve;
              var reject = reaction.reject;
              var domain = reaction.domain;
              var result,
              then,
              exited;
              try {
                if (handler) {
                  if (!ok) {
                    if (state.rejection === UNHANDLED) onHandleUnhandled(promise, state);
                    state.rejection = HANDLED;
                  }
                  if (handler === true) result = value;
                   else {
                    if (domain) domain.enter();
                    result = handler(value); // can throw
                    if (domain) {
                      domain.exit();
                      exited = true;
                    }
                  }
                  if (result === reaction.promise) {
                    reject(TypeError('Promise-chain cycle'));
                  } else if (then = isThenable(result)) {
                    then.call(result, resolve, reject);
                  } else resolve(result);
                } else reject(value);
              } catch (error) {
                if (domain && !exited) domain.exit();
                reject(error);
              }
            }
            state.reactions = [
            ];
            state.notified = false;
            if (isReject && !state.rejection) onUnhandled(promise, state);
          });
        };
        var dispatchEvent = function (name, promise, reason) {
          var event,
          handler;
          if (DISPATCH_EVENT) {
            event = document.createEvent('Event');
            event.promise = promise;
            event.reason = reason;
            event.initEvent(name, false, true);
            global.dispatchEvent(event);
          } else event = {
            promise: promise,
            reason: reason
          };
          if (handler = global['on' + name]) handler(event);
           else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);
        };
        var onUnhandled = function (promise, state) {
          task.call(global, function () {
            var value = state.value;
            var IS_UNHANDLED = isUnhandled(state);
            var result;
            if (IS_UNHANDLED) {
              result = perform(function () {
                if (IS_NODE) {
                  process.emit('unhandledRejection', value, promise);
                } else dispatchEvent(UNHANDLED_REJECTION, promise, value);
              }); // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
              state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
              if (result.error) throw result.value;
            }
          });
        };
        var isUnhandled = function (state) {
          return state.rejection !== HANDLED && !state.parent;
        };
        var onHandleUnhandled = function (promise, state) {
          task.call(global, function () {
            if (IS_NODE) {
              process.emit('rejectionHandled', promise);
            } else dispatchEvent(REJECTION_HANDLED, promise, state.value);
          });
        };
        var bind = function (fn, promise, state, unwrap) {
          return function (value) {
            fn(promise, state, value, unwrap);
          };
        };
        var internalReject = function (promise, state, value, unwrap) {
          if (state.done) return;
          state.done = true;
          if (unwrap) state = unwrap;
          state.value = value;
          state.state = REJECTED;
          notify(promise, state, true);
        };
        var internalResolve = function (promise, state, value, unwrap) {
          if (state.done) return;
          state.done = true;
          if (unwrap) state = unwrap;
          try {
            if (promise === value) throw TypeError('Promise can\'t be resolved itself');
            var then = isThenable(value);
            if (then) {
              microtask(function () {
                var wrapper = {
                  done: false
                };
                try {
                  then.call(value, bind(internalResolve, promise, wrapper, state), bind(internalReject, promise, wrapper, state));
                } catch (error) {
                  internalReject(promise, wrapper, error, state);
                }
              });
            } else {
              state.value = value;
              state.state = FULFILLED;
              notify(promise, state, false);
            }
          } catch (error) {
            internalReject(promise, {
              done: false
            }, error, state);
          }
        }; // constructor polyfill
        if (FORCED) {
          // 25.4.3.1 Promise(executor)
          PromiseConstructor = function Promise(executor) {
            anInstance(this, PromiseConstructor, PROMISE);
            aFunction(executor);
            Internal.call(this);
            var state = getInternalState(this);
            try {
              executor(bind(internalResolve, this, state), bind(internalReject, this, state));
            } catch (error) {
              internalReject(this, state, error);
            }
          }; // eslint-disable-next-line no-unused-vars
          Internal = function Promise(executor) {
            setInternalState(this, {
              type: PROMISE,
              done: false,
              notified: false,
              parent: false,
              reactions: [
              ],
              rejection: false,
              state: PENDING,
              value: undefined
            });
          };
          Internal.prototype = redefineAll(PromiseConstructor.prototype, {
            // `Promise.prototype.then` method
            // https://tc39.github.io/ecma262/#sec-promise.prototype.then
            then: function then(onFulfilled, onRejected) {
              var state = getInternalPromiseState(this);
              var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));
              reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
              reaction.fail = typeof onRejected == 'function' && onRejected;
              reaction.domain = IS_NODE ? process.domain : undefined;
              state.parent = true;
              state.reactions.push(reaction);
              if (state.state != PENDING) notify(this, state, false);
              return reaction.promise;
            },
            // `Promise.prototype.catch` method
            // https://tc39.github.io/ecma262/#sec-promise.prototype.catch
            'catch': function (onRejected) {
              return this.then(undefined, onRejected);
            }
          });
          OwnPromiseCapability = function () {
            var promise = new Internal();
            var state = getInternalState(promise);
            this.promise = promise;
            this.resolve = bind(internalResolve, promise, state);
            this.reject = bind(internalReject, promise, state);
          };
          newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
            return C === PromiseConstructor || C === PromiseWrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);
          };
          if (!IS_PURE && typeof NativePromise == 'function') {
            nativeThen = NativePromise.prototype.then; // wrap native Promise#then for native async functions
            redefine(NativePromise.prototype, 'then', function then(onFulfilled, onRejected) {
              var that = this;
              return new PromiseConstructor(function (resolve, reject) {
                nativeThen.call(that, resolve, reject);
              }).then(onFulfilled, onRejected); // https://github.com/zloirock/core-js/issues/640
            }, {
              unsafe: true
            }); // wrap fetch result
            if (typeof $fetch == 'function') $({
              global: true,
              enumerable: true,
              forced: true
            }, {
              // eslint-disable-next-line no-unused-vars
              fetch: function fetch(input              /* , init */
              ) {
                return promiseResolve(PromiseConstructor, $fetch.apply(global, arguments));
              }
            });
          }
        }
        $({
          global: true,
          wrap: true,
          forced: FORCED
        }, {
          Promise: PromiseConstructor
        });
        setToStringTag(PromiseConstructor, PROMISE, false, true);
        setSpecies(PROMISE);
        PromiseWrapper = getBuiltIn(PROMISE); // statics
        $({
          target: PROMISE,
          stat: true,
          forced: FORCED
        }, {
          // `Promise.reject` method
          // https://tc39.github.io/ecma262/#sec-promise.reject
          reject: function reject(r) {
            var capability = newPromiseCapability(this);
            capability.reject.call(undefined, r);
            return capability.promise;
          }
        });
        $({
          target: PROMISE,
          stat: true,
          forced: IS_PURE || FORCED
        }, {
          // `Promise.resolve` method
          // https://tc39.github.io/ecma262/#sec-promise.resolve
          resolve: function resolve(x) {
            return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);
          }
        });
        $({
          target: PROMISE,
          stat: true,
          forced: INCORRECT_ITERATION
        }, {
          // `Promise.all` method
          // https://tc39.github.io/ecma262/#sec-promise.all
          all: function all(iterable) {
            var C = this;
            var capability = newPromiseCapability(C);
            var resolve = capability.resolve;
            var reject = capability.reject;
            var result = perform(function () {
              var $promiseResolve = aFunction(C.resolve);
              var values = [
              ];
              var counter = 0;
              var remaining = 1;
              iterate(iterable, function (promise) {
                var index = counter++;
                var alreadyCalled = false;
                values.push(undefined);
                remaining++;
                $promiseResolve.call(C, promise).then(function (value) {
                  if (alreadyCalled) return;
                  alreadyCalled = true;
                  values[index] = value;
                  --remaining || resolve(values);
                }, reject);
              });
              --remaining || resolve(values);
            });
            if (result.error) reject(result.value);
            return capability.promise;
          },
          // `Promise.race` method
          // https://tc39.github.io/ecma262/#sec-promise.race
          race: function race(iterable) {
            var C = this;
            var capability = newPromiseCapability(C);
            var reject = capability.reject;
            var result = perform(function () {
              var $promiseResolve = aFunction(C.resolve);
              iterate(iterable, function (promise) {
                $promiseResolve.call(C, promise).then(capability.resolve, reject);
              });
            });
            if (result.error) reject(result.value);
            return capability.promise;
          }
        });
      },
      {
        '../internals/a-function': 1,
        '../internals/an-instance': 4,
        '../internals/check-correctness-of-iteration': 15,
        '../internals/classof-raw': 16,
        '../internals/engine-v8-version': 34,
        '../internals/export': 36,
        '../internals/get-built-in': 40,
        '../internals/global': 42,
        '../internals/host-report-errors': 45,
        '../internals/inspect-source': 50,
        '../internals/internal-state': 52,
        '../internals/is-forced': 55,
        '../internals/is-object': 56,
        '../internals/is-pure': 57,
        '../internals/iterate': 59,
        '../internals/microtask': 62,
        '../internals/native-promise-constructor': 63,
        '../internals/new-promise-capability': 66,
        '../internals/perform': 84,
        '../internals/promise-resolve': 85,
        '../internals/redefine': 87,
        '../internals/redefine-all': 86,
        '../internals/set-species': 93,
        '../internals/set-to-string-tag': 94,
        '../internals/species-constructor': 98,
        '../internals/task': 102,
        '../internals/well-known-symbol': 113
      }
    ],
    129: [
      function (_dereq_, module, exports) {
        var DESCRIPTORS = _dereq_('../internals/descriptors');
        var global = _dereq_('../internals/global');
        var isForced = _dereq_('../internals/is-forced');
        var inheritIfRequired = _dereq_('../internals/inherit-if-required');
        var defineProperty = _dereq_('../internals/object-define-property').f;
        var getOwnPropertyNames = _dereq_('../internals/object-get-own-property-names').f;
        var isRegExp = _dereq_('../internals/is-regexp');
        var getFlags = _dereq_('../internals/regexp-flags');
        var stickyHelpers = _dereq_('../internals/regexp-sticky-helpers');
        var redefine = _dereq_('../internals/redefine');
        var fails = _dereq_('../internals/fails');
        var setInternalState = _dereq_('../internals/internal-state').set;
        var setSpecies = _dereq_('../internals/set-species');
        var wellKnownSymbol = _dereq_('../internals/well-known-symbol');
        var MATCH = wellKnownSymbol('match');
        var NativeRegExp = global.RegExp;
        var RegExpPrototype = NativeRegExp.prototype;
        var re1 = /a/g;
        var re2 = /a/g; // "new" should create a new object, old webkit bug
        var CORRECT_NEW = new NativeRegExp(re1) !== re1;
        var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;
        var FORCED = DESCRIPTORS && isForced('RegExp', !CORRECT_NEW || UNSUPPORTED_Y || fails(function () {
          re2[MATCH] = false; // RegExp constructor can alter flags and IsRegExp works correct with @@match
          return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';
        })); // `RegExp` constructor
        // https://tc39.github.io/ecma262/#sec-regexp-constructor
        if (FORCED) {
          var RegExpWrapper = function RegExp(pattern, flags) {
            var thisIsRegExp = this instanceof RegExpWrapper;
            var patternIsRegExp = isRegExp(pattern);
            var flagsAreUndefined = flags === undefined;
            var sticky;
            if (!thisIsRegExp && patternIsRegExp && pattern.constructor === RegExpWrapper && flagsAreUndefined) {
              return pattern;
            }
            if (CORRECT_NEW) {
              if (patternIsRegExp && !flagsAreUndefined) pattern = pattern.source;
            } else if (pattern instanceof RegExpWrapper) {
              if (flagsAreUndefined) flags = getFlags.call(pattern);
              pattern = pattern.source;
            }
            if (UNSUPPORTED_Y) {
              sticky = !!flags && flags.indexOf('y') > - 1;
              if (sticky) flags = flags.replace(/y/g, '');
            }
            var result = inheritIfRequired(CORRECT_NEW ? new NativeRegExp(pattern, flags) : NativeRegExp(pattern, flags), thisIsRegExp ? this : RegExpPrototype, RegExpWrapper);
            if (UNSUPPORTED_Y && sticky) setInternalState(result, {
              sticky: sticky
            });
            return result;
          };
          var proxy = function (key) {
            key in RegExpWrapper || defineProperty(RegExpWrapper, key, {
              configurable: true,
              get: function () {
                return NativeRegExp[key];
              },
              set: function (it) {
                NativeRegExp[key] = it;
              }
            });
          };
          var keys = getOwnPropertyNames(NativeRegExp);
          var index = 0;
          while (keys.length > index) proxy(keys[index++]);
          RegExpPrototype.constructor = RegExpWrapper;
          RegExpWrapper.prototype = RegExpPrototype;
          redefine(global, 'RegExp', RegExpWrapper);
        } // https://tc39.github.io/ecma262/#sec-get-regexp-@@species

        setSpecies('RegExp');
      },
      {
        '../internals/descriptors': 29,
        '../internals/fails': 37,
        '../internals/global': 42,
        '../internals/inherit-if-required': 49,
        '../internals/internal-state': 52,
        '../internals/is-forced': 55,
        '../internals/is-regexp': 58,
        '../internals/object-define-property': 71,
        '../internals/object-get-own-property-names': 74,
        '../internals/redefine': 87,
        '../internals/regexp-flags': 89,
        '../internals/regexp-sticky-helpers': 90,
        '../internals/set-species': 93,
        '../internals/well-known-symbol': 113
      }
    ],
    130: [
      function (_dereq_, module, exports) {
        'use strict';
        var $ = _dereq_('../internals/export');
        var exec = _dereq_('../internals/regexp-exec');
        $({
          target: 'RegExp',
          proto: true,
          forced: /./.exec !== exec
        }, {
          exec: exec
        });
      },
      {
        '../internals/export': 36,
        '../internals/regexp-exec': 88
      }
    ],
    131: [
      function (_dereq_, module, exports) {
        'use strict';
        var redefine = _dereq_('../internals/redefine');
        var anObject = _dereq_('../internals/an-object');
        var fails = _dereq_('../internals/fails');
        var flags = _dereq_('../internals/regexp-flags');
        var TO_STRING = 'toString';
        var RegExpPrototype = RegExp.prototype;
        var nativeToString = RegExpPrototype[TO_STRING];
        var NOT_GENERIC = fails(function () {
          return nativeToString.call({
            source: 'a',
            flags: 'b'
          }) != '/a/b';
        }); // FF44- RegExp#toString has a wrong name
        var INCORRECT_NAME = nativeToString.name != TO_STRING; // `RegExp.prototype.toString` method
        // https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring
        if (NOT_GENERIC || INCORRECT_NAME) {
          redefine(RegExp.prototype, TO_STRING, function toString() {
            var R = anObject(this);
            var p = String(R.source);
            var rf = R.flags;
            var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);
            return '/' + p + '/' + f;
          }, {
            unsafe: true
          });
        }
      },
      {
        '../internals/an-object': 5,
        '../internals/fails': 37,
        '../internals/redefine': 87,
        '../internals/regexp-flags': 89
      }
    ],
    132: [
      function (_dereq_, module, exports) {
        'use strict';
        var $ = _dereq_('../internals/export');
        var notARegExp = _dereq_('../internals/not-a-regexp');
        var requireObjectCoercible = _dereq_('../internals/require-object-coercible');
        var correctIsRegExpLogic = _dereq_('../internals/correct-is-regexp-logic'); // `String.prototype.includes` method
        // https://tc39.github.io/ecma262/#sec-string.prototype.includes
        $({
          target: 'String',
          proto: true,
          forced: !correctIsRegExpLogic('includes')
        }, {
          includes: function includes(searchString          /* , position = 0 */
          ) {
            return !!~String(requireObjectCoercible(this)).indexOf(notARegExp(searchString), arguments.length > 1 ? arguments[1] : undefined);
          }
        });
      },
      {
        '../internals/correct-is-regexp-logic': 21,
        '../internals/export': 36,
        '../internals/not-a-regexp': 67,
        '../internals/require-object-coercible': 91
      }
    ],
    133: [
      function (_dereq_, module, exports) {
        'use strict';
        var charAt = _dereq_('../internals/string-multibyte').charAt;
        var InternalStateModule = _dereq_('../internals/internal-state');
        var defineIterator = _dereq_('../internals/define-iterator');
        var STRING_ITERATOR = 'String Iterator';
        var setInternalState = InternalStateModule.set;
        var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR); // `String.prototype[@@iterator]` method
        // https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator
        defineIterator(String, 'String', function (iterated) {
          setInternalState(this, {
            type: STRING_ITERATOR,
            string: String(iterated),
            index: 0
          }); // `%StringIteratorPrototype%.next` method
          // https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next
        }, function next() {
          var state = getInternalState(this);
          var string = state.string;
          var index = state.index;
          var point;
          if (index >= string.length) return {
            value: undefined,
            done: true
          };
          point = charAt(string, index);
          state.index += point.length;
          return {
            value: point,
            done: false
          };
        });
      },
      {
        '../internals/define-iterator': 27,
        '../internals/internal-state': 52,
        '../internals/string-multibyte': 99
      }
    ],
    134: [
      function (_dereq_, module, exports) {
        'use strict';
        var $ = _dereq_('../internals/export');
        var $trim = _dereq_('../internals/string-trim').trim;
        var forcedStringTrimMethod = _dereq_('../internals/string-trim-forced'); // `String.prototype.trim` method
        // https://tc39.github.io/ecma262/#sec-string.prototype.trim
        $({
          target: 'String',
          proto: true,
          forced: forcedStringTrimMethod('trim')
        }, {
          trim: function trim() {
            return $trim(this);
          }
        });
      },
      {
        '../internals/export': 36,
        '../internals/string-trim': 101,
        '../internals/string-trim-forced': 100
      }
    ],
    135: [
      function (_dereq_, module, exports) {
        // `Symbol.prototype.description` getter
        // https://tc39.github.io/ecma262/#sec-symbol.prototype.description
        'use strict';
        var $ = _dereq_('../internals/export');
        var DESCRIPTORS = _dereq_('../internals/descriptors');
        var global = _dereq_('../internals/global');
        var has = _dereq_('../internals/has');
        var isObject = _dereq_('../internals/is-object');
        var defineProperty = _dereq_('../internals/object-define-property').f;
        var copyConstructorProperties = _dereq_('../internals/copy-constructor-properties');
        var NativeSymbol = global.Symbol;
        if (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) || // Safari 12 bug
        NativeSymbol().description !== undefined)) {
          var EmptyStringDescriptionStore = {
          }; // wrap Symbol constructor for correct work with undefined description
          var SymbolWrapper = function Symbol() {
            var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);
            var result = this instanceof SymbolWrapper ? new NativeSymbol(description) // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
             : description === undefined ? NativeSymbol() : NativeSymbol(description);
            if (description === '') EmptyStringDescriptionStore[result] = true;
            return result;
          };
          copyConstructorProperties(SymbolWrapper, NativeSymbol);
          var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;
          symbolPrototype.constructor = SymbolWrapper;
          var symbolToString = symbolPrototype.toString;
          var native = String(NativeSymbol('test')) == 'Symbol(test)';
          var regexp = /^Symbol\((.*)\)[^)]+$/;
          defineProperty(symbolPrototype, 'description', {
            configurable: true,
            get: function description() {
              var symbol = isObject(this) ? this.valueOf() : this;
              var string = symbolToString.call(symbol);
              if (has(EmptyStringDescriptionStore, symbol)) return '';
              var desc = native ? string.slice(7, - 1) : string.replace(regexp, '$1');
              return desc === '' ? undefined : desc;
            }
          });
          $({
            global: true,
            forced: true
          }, {
            Symbol: SymbolWrapper
          });
        }
      },
      {
        '../internals/copy-constructor-properties': 20,
        '../internals/descriptors': 29,
        '../internals/export': 36,
        '../internals/global': 42,
        '../internals/has': 43,
        '../internals/is-object': 56,
        '../internals/object-define-property': 71
      }
    ],
    136: [
      function (_dereq_, module, exports) {
        var defineWellKnownSymbol = _dereq_('../internals/define-well-known-symbol'); // `Symbol.iterator` well-known symbol
        // https://tc39.github.io/ecma262/#sec-symbol.iterator
        defineWellKnownSymbol('iterator');
      },
      {
        '../internals/define-well-known-symbol': 28
      }
    ],
    137: [
      function (_dereq_, module, exports) {
        'use strict';
        var $ = _dereq_('../internals/export');
        var global = _dereq_('../internals/global');
        var getBuiltIn = _dereq_('../internals/get-built-in');
        var IS_PURE = _dereq_('../internals/is-pure');
        var DESCRIPTORS = _dereq_('../internals/descriptors');
        var NATIVE_SYMBOL = _dereq_('../internals/native-symbol');
        var USE_SYMBOL_AS_UID = _dereq_('../internals/use-symbol-as-uid');
        var fails = _dereq_('../internals/fails');
        var has = _dereq_('../internals/has');
        var isArray = _dereq_('../internals/is-array');
        var isObject = _dereq_('../internals/is-object');
        var anObject = _dereq_('../internals/an-object');
        var toObject = _dereq_('../internals/to-object');
        var toIndexedObject = _dereq_('../internals/to-indexed-object');
        var toPrimitive = _dereq_('../internals/to-primitive');
        var createPropertyDescriptor = _dereq_('../internals/create-property-descriptor');
        var nativeObjectCreate = _dereq_('../internals/object-create');
        var objectKeys = _dereq_('../internals/object-keys');
        var getOwnPropertyNamesModule = _dereq_('../internals/object-get-own-property-names');
        var getOwnPropertyNamesExternal = _dereq_('../internals/object-get-own-property-names-external');
        var getOwnPropertySymbolsModule = _dereq_('../internals/object-get-own-property-symbols');
        var getOwnPropertyDescriptorModule = _dereq_('../internals/object-get-own-property-descriptor');
        var definePropertyModule = _dereq_('../internals/object-define-property');
        var propertyIsEnumerableModule = _dereq_('../internals/object-property-is-enumerable');
        var createNonEnumerableProperty = _dereq_('../internals/create-non-enumerable-property');
        var redefine = _dereq_('../internals/redefine');
        var shared = _dereq_('../internals/shared');
        var sharedKey = _dereq_('../internals/shared-key');
        var hiddenKeys = _dereq_('../internals/hidden-keys');
        var uid = _dereq_('../internals/uid');
        var wellKnownSymbol = _dereq_('../internals/well-known-symbol');
        var wrappedWellKnownSymbolModule = _dereq_('../internals/well-known-symbol-wrapped');
        var defineWellKnownSymbol = _dereq_('../internals/define-well-known-symbol');
        var setToStringTag = _dereq_('../internals/set-to-string-tag');
        var InternalStateModule = _dereq_('../internals/internal-state');
        var $forEach = _dereq_('../internals/array-iteration').forEach;
        var HIDDEN = sharedKey('hidden');
        var SYMBOL = 'Symbol';
        var PROTOTYPE = 'prototype';
        var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');
        var setInternalState = InternalStateModule.set;
        var getInternalState = InternalStateModule.getterFor(SYMBOL);
        var ObjectPrototype = Object[PROTOTYPE];
        var $Symbol = global.Symbol;
        var $stringify = getBuiltIn('JSON', 'stringify');
        var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
        var nativeDefineProperty = definePropertyModule.f;
        var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
        var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;
        var AllSymbols = shared('symbols');
        var ObjectPrototypeSymbols = shared('op-symbols');
        var StringToSymbolRegistry = shared('string-to-symbol-registry');
        var SymbolToStringRegistry = shared('symbol-to-string-registry');
        var WellKnownSymbolsStore = shared('wks');
        var QObject = global.QObject; // Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
        var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild; // fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
        var setSymbolDescriptor = DESCRIPTORS && fails(function () {
          return nativeObjectCreate(nativeDefineProperty({
          }, 'a', {
            get: function () {
              return nativeDefineProperty(this, 'a', {
                value: 7
              }).a;
            }
          })).a != 7;
        }) ? function (O, P, Attributes) {
          var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);
          if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];
          nativeDefineProperty(O, P, Attributes);
          if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {
            nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);
          }
        }
         : nativeDefineProperty;
        var wrap = function (tag, description) {
          var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);
          setInternalState(symbol, {
            type: SYMBOL,
            tag: tag,
            description: description
          });
          if (!DESCRIPTORS) symbol.description = description;
          return symbol;
        };
        var isSymbol = USE_SYMBOL_AS_UID ? function (it) {
          return typeof it == 'symbol';
        }
         : function (it) {
          return Object(it) instanceof $Symbol;
        };
        var $defineProperty = function defineProperty(O, P, Attributes) {
          if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);
          anObject(O);
          var key = toPrimitive(P, true);
          anObject(Attributes);
          if (has(AllSymbols, key)) {
            if (!Attributes.enumerable) {
              if (!has(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {
              }));
              O[HIDDEN][key] = true;
            } else {
              if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;
              Attributes = nativeObjectCreate(Attributes, {
                enumerable: createPropertyDescriptor(0, false)
              });
            }
            return setSymbolDescriptor(O, key, Attributes);
          }
          return nativeDefineProperty(O, key, Attributes);
        };
        var $defineProperties = function defineProperties(O, Properties) {
          anObject(O);
          var properties = toIndexedObject(Properties);
          var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));
          $forEach(keys, function (key) {
            if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);
          });
          return O;
        };
        var $create = function create(O, Properties) {
          return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);
        };
        var $propertyIsEnumerable = function propertyIsEnumerable(V) {
          var P = toPrimitive(V, true);
          var enumerable = nativePropertyIsEnumerable.call(this, P);
          if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;
          return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;
        };
        var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {
          var it = toIndexedObject(O);
          var key = toPrimitive(P, true);
          if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;
          var descriptor = nativeGetOwnPropertyDescriptor(it, key);
          if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {
            descriptor.enumerable = true;
          }
          return descriptor;
        };
        var $getOwnPropertyNames = function getOwnPropertyNames(O) {
          var names = nativeGetOwnPropertyNames(toIndexedObject(O));
          var result = [
          ];
          $forEach(names, function (key) {
            if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);
          });
          return result;
        };
        var $getOwnPropertySymbols = function getOwnPropertySymbols(O) {
          var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;
          var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));
          var result = [
          ];
          $forEach(names, function (key) {
            if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {
              result.push(AllSymbols[key]);
            }
          });
          return result;
        }; // `Symbol` constructor
        // https://tc39.github.io/ecma262/#sec-symbol-constructor
        if (!NATIVE_SYMBOL) {
          $Symbol = function Symbol() {
            if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');
            var description = !arguments.length || arguments[0] === undefined ? undefined : String(arguments[0]);
            var tag = uid(description);
            var setter = function (value) {
              if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);
              if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
              setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));
            };
            if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, {
              configurable: true,
              set: setter
            });
            return wrap(tag, description);
          };
          redefine($Symbol[PROTOTYPE], 'toString', function toString() {
            return getInternalState(this).tag;
          });
          redefine($Symbol, 'withoutSetter', function (description) {
            return wrap(uid(description), description);
          });
          propertyIsEnumerableModule.f = $propertyIsEnumerable;
          definePropertyModule.f = $defineProperty;
          getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;
          getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
          getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;
          wrappedWellKnownSymbolModule.f = function (name) {
            return wrap(wellKnownSymbol(name), name);
          };
          if (DESCRIPTORS) {
            // https://github.com/tc39/proposal-Symbol-description
            nativeDefineProperty($Symbol[PROTOTYPE], 'description', {
              configurable: true,
              get: function description() {
                return getInternalState(this).description;
              }
            });
            if (!IS_PURE) {
              redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, {
                unsafe: true
              });
            }
          }
        }
        $({
          global: true,
          wrap: true,
          forced: !NATIVE_SYMBOL,
          sham: !NATIVE_SYMBOL
        }, {
          Symbol: $Symbol
        });
        $forEach(objectKeys(WellKnownSymbolsStore), function (name) {
          defineWellKnownSymbol(name);
        });
        $({
          target: SYMBOL,
          stat: true,
          forced: !NATIVE_SYMBOL
        }, {
          // `Symbol.for` method
          // https://tc39.github.io/ecma262/#sec-symbol.for
          'for': function (key) {
            var string = String(key);
            if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];
            var symbol = $Symbol(string);
            StringToSymbolRegistry[string] = symbol;
            SymbolToStringRegistry[symbol] = string;
            return symbol;
          },
          // `Symbol.keyFor` method
          // https://tc39.github.io/ecma262/#sec-symbol.keyfor
          keyFor: function keyFor(sym) {
            if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');
            if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];
          },
          useSetter: function () {
            USE_SETTER = true;
          },
          useSimple: function () {
            USE_SETTER = false;
          }
        });
        $({
          target: 'Object',
          stat: true,
          forced: !NATIVE_SYMBOL,
          sham: !DESCRIPTORS
        }, {
          // `Object.create` method
          // https://tc39.github.io/ecma262/#sec-object.create
          create: $create,
          // `Object.defineProperty` method
          // https://tc39.github.io/ecma262/#sec-object.defineproperty
          defineProperty: $defineProperty,
          // `Object.defineProperties` method
          // https://tc39.github.io/ecma262/#sec-object.defineproperties
          defineProperties: $defineProperties,
          // `Object.getOwnPropertyDescriptor` method
          // https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors
          getOwnPropertyDescriptor: $getOwnPropertyDescriptor
        });
        $({
          target: 'Object',
          stat: true,
          forced: !NATIVE_SYMBOL
        }, {
          // `Object.getOwnPropertyNames` method
          // https://tc39.github.io/ecma262/#sec-object.getownpropertynames
          getOwnPropertyNames: $getOwnPropertyNames,
          // `Object.getOwnPropertySymbols` method
          // https://tc39.github.io/ecma262/#sec-object.getownpropertysymbols
          getOwnPropertySymbols: $getOwnPropertySymbols
        }); // Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
        // https://bugs.chromium.org/p/v8/issues/detail?id=3443
        $({
          target: 'Object',
          stat: true,
          forced: fails(function () {
            getOwnPropertySymbolsModule.f(1);
          })
        }, {
          getOwnPropertySymbols: function getOwnPropertySymbols(it) {
            return getOwnPropertySymbolsModule.f(toObject(it));
          }
        }); // `JSON.stringify` method behavior with symbols
        // https://tc39.github.io/ecma262/#sec-json.stringify
        if ($stringify) {
          var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {
            var symbol = $Symbol(); // MS Edge converts symbol values to JSON as {}
            return $stringify([symbol]) != '[null]' // WebKit converts symbol values to JSON as null
            || $stringify({
              a: symbol
            }) != '{}' // V8 throws on boxed symbols
            || $stringify(Object(symbol)) != '{}';
          });
          $({
            target: 'JSON',
            stat: true,
            forced: FORCED_JSON_STRINGIFY
          }, {
            // eslint-disable-next-line no-unused-vars
            stringify: function stringify(it, replacer, space) {
              var args = [
                it
              ];
              var index = 1;
              var $replacer;
              while (arguments.length > index) args.push(arguments[index++]);
              $replacer = replacer;
              if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
              if (!isArray(replacer)) replacer = function (key, value) {
                if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
                if (!isSymbol(value)) return value;
              };
              args[1] = replacer;
              return $stringify.apply(null, args);
            }
          });
        } // `Symbol.prototype[@@toPrimitive]` method
        // https://tc39.github.io/ecma262/#sec-symbol.prototype-@@toprimitive

        if (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {
          createNonEnumerableProperty($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
        } // `Symbol.prototype[@@toStringTag]` property
        // https://tc39.github.io/ecma262/#sec-symbol.prototype-@@tostringtag

        setToStringTag($Symbol, SYMBOL);
        hiddenKeys[HIDDEN] = true;
      },
      {
        '../internals/an-object': 5,
        '../internals/array-iteration': 9,
        '../internals/create-non-enumerable-property': 24,
        '../internals/create-property-descriptor': 25,
        '../internals/define-well-known-symbol': 28,
        '../internals/descriptors': 29,
        '../internals/export': 36,
        '../internals/fails': 37,
        '../internals/get-built-in': 40,
        '../internals/global': 42,
        '../internals/has': 43,
        '../internals/hidden-keys': 44,
        '../internals/internal-state': 52,
        '../internals/is-array': 54,
        '../internals/is-object': 56,
        '../internals/is-pure': 57,
        '../internals/native-symbol': 64,
        '../internals/object-create': 69,
        '../internals/object-define-property': 71,
        '../internals/object-get-own-property-descriptor': 72,
        '../internals/object-get-own-property-names': 74,
        '../internals/object-get-own-property-names-external': 73,
        '../internals/object-get-own-property-symbols': 75,
        '../internals/object-keys': 78,
        '../internals/object-property-is-enumerable': 79,
        '../internals/redefine': 87,
        '../internals/set-to-string-tag': 94,
        '../internals/shared': 97,
        '../internals/shared-key': 95,
        '../internals/to-indexed-object': 104,
        '../internals/to-object': 107,
        '../internals/to-primitive': 108,
        '../internals/uid': 110,
        '../internals/use-symbol-as-uid': 111,
        '../internals/well-known-symbol': 113,
        '../internals/well-known-symbol-wrapped': 112
      }
    ],
    138: [
      function (_dereq_, module, exports) {
        'use strict';
        var global = _dereq_('../internals/global');
        var redefineAll = _dereq_('../internals/redefine-all');
        var InternalMetadataModule = _dereq_('../internals/internal-metadata');
        var collection = _dereq_('../internals/collection');
        var collectionWeak = _dereq_('../internals/collection-weak');
        var isObject = _dereq_('../internals/is-object');
        var enforceIternalState = _dereq_('../internals/internal-state').enforce;
        var NATIVE_WEAK_MAP = _dereq_('../internals/native-weak-map');
        var IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;
        var isExtensible = Object.isExtensible;
        var InternalWeakMap;
        var wrapper = function (init) {
          return function WeakMap() {
            return init(this, arguments.length ? arguments[0] : undefined);
          };
        }; // `WeakMap` constructor
        // https://tc39.github.io/ecma262/#sec-weakmap-constructor
        var $WeakMap = module.exports = collection('WeakMap', wrapper, collectionWeak); // IE11 WeakMap frozen keys fix
        // We can't use feature detection because it crash some old IE builds
        // https://github.com/zloirock/core-js/issues/485
        if (NATIVE_WEAK_MAP && IS_IE11) {
          InternalWeakMap = collectionWeak.getConstructor(wrapper, 'WeakMap', true);
          InternalMetadataModule.REQUIRED = true;
          var WeakMapPrototype = $WeakMap.prototype;
          var nativeDelete = WeakMapPrototype['delete'];
          var nativeHas = WeakMapPrototype.has;
          var nativeGet = WeakMapPrototype.get;
          var nativeSet = WeakMapPrototype.set;
          redefineAll(WeakMapPrototype, {
            'delete': function (key) {
              if (isObject(key) && !isExtensible(key)) {
                var state = enforceIternalState(this);
                if (!state.frozen) state.frozen = new InternalWeakMap();
                return nativeDelete.call(this, key) || state.frozen['delete'](key);
              }
              return nativeDelete.call(this, key);
            },
            has: function has(key) {
              if (isObject(key) && !isExtensible(key)) {
                var state = enforceIternalState(this);
                if (!state.frozen) state.frozen = new InternalWeakMap();
                return nativeHas.call(this, key) || state.frozen.has(key);
              }
              return nativeHas.call(this, key);
            },
            get: function get(key) {
              if (isObject(key) && !isExtensible(key)) {
                var state = enforceIternalState(this);
                if (!state.frozen) state.frozen = new InternalWeakMap();
                return nativeHas.call(this, key) ? nativeGet.call(this, key) : state.frozen.get(key);
              }
              return nativeGet.call(this, key);
            },
            set: function set(key, value) {
              if (isObject(key) && !isExtensible(key)) {
                var state = enforceIternalState(this);
                if (!state.frozen) state.frozen = new InternalWeakMap();
                nativeHas.call(this, key) ? nativeSet.call(this, key, value) : state.frozen.set(key, value);
              } else nativeSet.call(this, key, value);
              return this;
            }
          });
        }
      },
      {
        '../internals/collection': 19,
        '../internals/collection-weak': 18,
        '../internals/global': 42,
        '../internals/internal-metadata': 51,
        '../internals/internal-state': 52,
        '../internals/is-object': 56,
        '../internals/native-weak-map': 65,
        '../internals/redefine-all': 86
      }
    ],
    139: [
      function (_dereq_, module, exports) {
        var global = _dereq_('../internals/global');
        var DOMIterables = _dereq_('../internals/dom-iterables');
        var forEach = _dereq_('../internals/array-for-each');
        var createNonEnumerableProperty = _dereq_('../internals/create-non-enumerable-property');
        for (var COLLECTION_NAME in DOMIterables) {
          var Collection = global[COLLECTION_NAME];
          var CollectionPrototype = Collection && Collection.prototype; // some Chrome versions have non-configurable methods on DOMTokenList
          if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {
            createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);
          } catch (error) {
            CollectionPrototype.forEach = forEach;
          }
        }
      },
      {
        '../internals/array-for-each': 7,
        '../internals/create-non-enumerable-property': 24,
        '../internals/dom-iterables': 31,
        '../internals/global': 42
      }
    ],
    140: [
      function (_dereq_, module, exports) {
        var global = _dereq_('../internals/global');
        var DOMIterables = _dereq_('../internals/dom-iterables');
        var ArrayIteratorMethods = _dereq_('../modules/es.array.iterator');
        var createNonEnumerableProperty = _dereq_('../internals/create-non-enumerable-property');
        var wellKnownSymbol = _dereq_('../internals/well-known-symbol');
        var ITERATOR = wellKnownSymbol('iterator');
        var TO_STRING_TAG = wellKnownSymbol('toStringTag');
        var ArrayValues = ArrayIteratorMethods.values;
        for (var COLLECTION_NAME in DOMIterables) {
          var Collection = global[COLLECTION_NAME];
          var CollectionPrototype = Collection && Collection.prototype;
          if (CollectionPrototype) {
            // some Chrome versions have non-configurable methods on DOMTokenList
            if (CollectionPrototype[ITERATOR] !== ArrayValues) try {
              createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);
            } catch (error) {
              CollectionPrototype[ITERATOR] = ArrayValues;
            }
            if (!CollectionPrototype[TO_STRING_TAG]) {
              createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
            }
            if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
              // some Chrome versions have non-configurable methods on DOMTokenList
              if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
                createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
              } catch (error) {
                CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
              }
            }
          }
        }
      },
      {
        '../internals/create-non-enumerable-property': 24,
        '../internals/dom-iterables': 31,
        '../internals/global': 42,
        '../internals/well-known-symbol': 113,
        '../modules/es.array.iterator': 120
      }
    ],
    141: [
      function (_dereq_, module, exports) {
        'use strict';
        var cov_2g9imce7zv = function () {
          var path = '/Users/montoyamoraga/github/processing/p5.sound.js/src/app.js';
          var hash = 'ca683c914ccc0348c0994888fc30acffbc79a0d7';
          var global = new Function('return this') ();
          var gcv = '__coverage__';
          var coverageData = {
            path: '/Users/montoyamoraga/github/processing/p5.sound.js/src/app.js',
            statementMap: {
              '0': {
                start: {
                  line: 3,
                  column: 12
                },
                end: {
                  line: 3,
                  column: 58
                }
              },
              '1': {
                start: {
                  line: 5,
                  column: 0
                },
                end: {
                  line: 5,
                  column: 28
                }
              },
              '2': {
                start: {
                  line: 7,
                  column: 0
                },
                end: {
                  line: 7,
                  column: 30
                }
              },
              '3': {
                start: {
                  line: 9,
                  column: 0
                },
                end: {
                  line: 9,
                  column: 26
                }
              },
              '4': {
                start: {
                  line: 11,
                  column: 0
                },
                end: {
                  line: 11,
                  column: 34
                }
              },
              '5': {
                start: {
                  line: 13,
                  column: 0
                },
                end: {
                  line: 13,
                  column: 35
                }
              },
              '6': {
                start: {
                  line: 15,
                  column: 0
                },
                end: {
                  line: 15,
                  column: 37
                }
              },
              '7': {
                start: {
                  line: 17,
                  column: 0
                },
                end: {
                  line: 17,
                  column: 28
                }
              },
              '8': {
                start: {
                  line: 19,
                  column: 0
                },
                end: {
                  line: 19,
                  column: 28
                }
              },
              '9': {
                start: {
                  line: 21,
                  column: 0
                },
                end: {
                  line: 21,
                  column: 38
                }
              },
              '10': {
                start: {
                  line: 23,
                  column: 0
                },
                end: {
                  line: 23,
                  column: 35
                }
              },
              '11': {
                start: {
                  line: 25,
                  column: 0
                },
                end: {
                  line: 25,
                  column: 36
                }
              },
              '12': {
                start: {
                  line: 27,
                  column: 0
                },
                end: {
                  line: 27,
                  column: 33
                }
              },
              '13': {
                start: {
                  line: 29,
                  column: 0
                },
                end: {
                  line: 29,
                  column: 27
                }
              },
              '14': {
                start: {
                  line: 31,
                  column: 20
                },
                end: {
                  line: 31,
                  column: 51
                }
              },
              '15': {
                start: {
                  line: 33,
                  column: 0
                },
                end: {
                  line: 33,
                  column: 24
                }
              },
              '16': {
                start: {
                  line: 35,
                  column: 16
                },
                end: {
                  line: 35,
                  column: 77
                }
              },
              '17': {
                start: {
                  line: 37,
                  column: 0
                },
                end: {
                  line: 37,
                  column: 37
                }
              },
              '18': {
                start: {
                  line: 39,
                  column: 0
                },
                end: {
                  line: 39,
                  column: 34
                }
              },
              '19': {
                start: {
                  line: 41,
                  column: 0
                },
                end: {
                  line: 41,
                  column: 23
                }
              },
              '20': {
                start: {
                  line: 43,
                  column: 39
                },
                end: {
                  line: 43,
                  column: 93
                }
              },
              '21': {
                start: {
                  line: 48,
                  column: 0
                },
                end: {
                  line: 48,
                  column: 72
                }
              },
              '22': {
                start: {
                  line: 49,
                  column: 0
                },
                end: {
                  line: 49,
                  column: 55
                }
              },
              '23': {
                start: {
                  line: 50,
                  column: 0
                },
                end: {
                  line: 50,
                  column: 31
                }
              }
            },
            fnMap: {
              '0': {
                name: '_interopRequireDefault',
                decl: {
                  start: {
                    line: 43,
                    column: 9
                  },
                  end: {
                    line: 43,
                    column: 31
                  }
                },
                loc: {
                  start: {
                    line: 43,
                    column: 37
                  },
                  end: {
                    line: 43,
                    column: 95
                  }
                },
                line: 43
              }
            },
            branchMap: {
              '0': {
                loc: {
                  start: {
                    line: 43,
                    column: 46
                  },
                  end: {
                    line: 43,
                    column: 92
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 43,
                      column: 70
                    },
                    end: {
                      line: 43,
                      column: 73
                    }
                  },
                  {
                    start: {
                      line: 43,
                      column: 76
                    },
                    end: {
                      line: 43,
                      column: 92
                    }
                  }
                ],
                line: 43
              },
              '1': {
                loc: {
                  start: {
                    line: 43,
                    column: 46
                  },
                  end: {
                    line: 43,
                    column: 67
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 43,
                      column: 46
                    },
                    end: {
                      line: 43,
                      column: 49
                    }
                  },
                  {
                    start: {
                      line: 43,
                      column: 53
                    },
                    end: {
                      line: 43,
                      column: 67
                    }
                  }
                ],
                line: 43
              }
            },
            s: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0,
              '10': 0,
              '11': 0,
              '12': 0,
              '13': 0,
              '14': 0,
              '15': 0,
              '16': 0,
              '17': 0,
              '18': 0,
              '19': 0,
              '20': 0,
              '21': 0,
              '22': 0,
              '23': 0
            },
            f: {
              '0': 0
            },
            b: {
              '0': [
                0,
                0
              ],
              '1': [
                0,
                0
              ]
            },
            _coverageSchema: '43e27e138ebf9cfc5966b082cf9a028302ed4184',
            hash: 'ca683c914ccc0348c0994888fc30acffbc79a0d7'
          };
          var coverage = global[gcv] || (global[gcv] = {
          });
          if (coverage[path] && coverage[path].hash === hash) {
            return coverage[path];
          }
          return coverage[path] = coverageData;
        }();
        var _main = (cov_2g9imce7zv.s[0]++, _interopRequireDefault(_dereq_('./core/main')));
        cov_2g9imce7zv.s[1]++;
        _dereq_('./core/constants');
        cov_2g9imce7zv.s[2]++;
        _dereq_('./core/environment');
        cov_2g9imce7zv.s[3]++;
        _dereq_('./core/preload');
        cov_2g9imce7zv.s[4]++;
        _dereq_('./core/p5sound.Element');
        cov_2g9imce7zv.s[5]++;
        _dereq_('./core/p5sound.Renderer');
        cov_2g9imce7zv.s[6]++;
        _dereq_('./core/p5sound.Renderer2D');
        cov_2g9imce7zv.s[7]++;
        _dereq_('./core/rendering');
        cov_2g9imce7zv.s[8]++;
        _dereq_('./core/structure');
        cov_2g9imce7zv.s[9]++;
        _dereq_('./core/shape/2d_primitives');
        cov_2g9imce7zv.s[10]++;
        _dereq_('./core/shape/attributes');
        cov_2g9imce7zv.s[11]++;
        _dereq_('./color/creating_reading');
        cov_2g9imce7zv.s[12]++;
        _dereq_('./color/p5sound.Color');
        cov_2g9imce7zv.s[13]++;
        _dereq_('./color/setting');
        var _audioContext = (cov_2g9imce7zv.s[14]++, _dereq_('./sound/audioContext'));
        cov_2g9imce7zv.s[15]++;
        _dereq_('./sound/main');
        var _p5sound5 = (cov_2g9imce7zv.s[16]++, _interopRequireDefault(_dereq_('./sound/p5sound.Oscillator')));
        cov_2g9imce7zv.s[17]++;
        _dereq_('./sound/p5sound.SoundFile');
        cov_2g9imce7zv.s[18]++;
        _dereq_('./utilities/conversion');
        cov_2g9imce7zv.s[19]++;
        _dereq_('./core/init');
        function _interopRequireDefault(obj) {
          cov_2g9imce7zv.f[0]++;
          cov_2g9imce7zv.s[20]++;
          return (cov_2g9imce7zv.b[1][0]++, obj) && (cov_2g9imce7zv.b[1][1]++, obj.__esModule) ? (cov_2g9imce7zv.b[0][0]++, obj) : (cov_2g9imce7zv.b[0][1]++, {
          default:
            obj
          });
        } // core
        // color
        // sound

        cov_2g9imce7zv.s[21]++;
        _main.default.prototype.getAudioContext = _audioContext.getAudioContext;
        cov_2g9imce7zv.s[22]++;
        _main.default.prototype.Oscillator = _p5sound5.default;
        cov_2g9imce7zv.s[23]++;
        module.exports = _main.default;
      },
      {
        './color/creating_reading': 142,
        './color/p5sound.Color': 143,
        './color/setting': 144,
        './core/constants': 145,
        './core/environment': 146,
        './core/init': 147,
        './core/main': 148,
        './core/p5sound.Element': 149,
        './core/p5sound.Renderer': 150,
        './core/p5sound.Renderer2D': 151,
        './core/preload': 152,
        './core/rendering': 153,
        './core/shape/2d_primitives': 154,
        './core/shape/attributes': 155,
        './core/structure': 156,
        './sound/audioContext': 157,
        './sound/main': 158,
        './sound/p5sound.Oscillator': 159,
        './sound/p5sound.SoundFile': 160,
        './utilities/conversion': 161
      }
    ],
    142: [
      function (_dereq_, module, exports) {
        'use strict';
        var cov_1gbd1wa8hu = function () {
          var path = '/Users/montoyamoraga/github/processing/p5.sound.js/src/color/creating_reading.js';
          var hash = '6ee722aac8746c3a06ddfa1bdf2a4f480523a760';
          var global = new Function('return this') ();
          var gcv = '__coverage__';
          var coverageData = {
            path: '/Users/montoyamoraga/github/processing/p5.sound.js/src/color/creating_reading.js',
            statementMap: {
              '0': {
                start: {
                  line: 3,
                  column: 0
                },
                end: {
                  line: 5,
                  column: 3
                }
              },
              '1': {
                start: {
                  line: 6,
                  column: 0
                },
                end: {
                  line: 6,
                  column: 25
                }
              },
              '2': {
                start: {
                  line: 8,
                  column: 12
                },
                end: {
                  line: 8,
                  column: 59
                }
              },
              '3': {
                start: {
                  line: 10,
                  column: 0
                },
                end: {
                  line: 10,
                  column: 27
                }
              },
              '4': {
                start: {
                  line: 12,
                  column: 39
                },
                end: {
                  line: 12,
                  column: 93
                }
              },
              '5': {
                start: {
                  line: 21,
                  column: 0
                },
                end: {
                  line: 28,
                  column: 2
                }
              },
              '6': {
                start: {
                  line: 22,
                  column: 2
                },
                end: {
                  line: 24,
                  column: 3
                }
              },
              '7': {
                start: {
                  line: 23,
                  column: 4
                },
                end: {
                  line: 23,
                  column: 24
                }
              },
              '8': {
                start: {
                  line: 26,
                  column: 13
                },
                end: {
                  line: 26,
                  column: 69
                }
              },
              '9': {
                start: {
                  line: 27,
                  column: 2
                },
                end: {
                  line: 27,
                  column: 45
                }
              },
              '10': {
                start: {
                  line: 30,
                  column: 15
                },
                end: {
                  line: 30,
                  column: 28
                }
              },
              '11': {
                start: {
                  line: 31,
                  column: 0
                },
                end: {
                  line: 31,
                  column: 27
                }
              }
            },
            fnMap: {
              '0': {
                name: '_interopRequireDefault',
                decl: {
                  start: {
                    line: 12,
                    column: 9
                  },
                  end: {
                    line: 12,
                    column: 31
                  }
                },
                loc: {
                  start: {
                    line: 12,
                    column: 37
                  },
                  end: {
                    line: 12,
                    column: 95
                  }
                },
                line: 12
              },
              '1': {
                name: '(anonymous_1)',
                decl: {
                  start: {
                    line: 21,
                    column: 32
                  },
                  end: {
                    line: 21,
                    column: 33
                  }
                },
                loc: {
                  start: {
                    line: 21,
                    column: 44
                  },
                  end: {
                    line: 28,
                    column: 1
                  }
                },
                line: 21
              }
            },
            branchMap: {
              '0': {
                loc: {
                  start: {
                    line: 12,
                    column: 46
                  },
                  end: {
                    line: 12,
                    column: 92
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 12,
                      column: 70
                    },
                    end: {
                      line: 12,
                      column: 73
                    }
                  },
                  {
                    start: {
                      line: 12,
                      column: 76
                    },
                    end: {
                      line: 12,
                      column: 92
                    }
                  }
                ],
                line: 12
              },
              '1': {
                loc: {
                  start: {
                    line: 12,
                    column: 46
                  },
                  end: {
                    line: 12,
                    column: 67
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 12,
                      column: 46
                    },
                    end: {
                      line: 12,
                      column: 49
                    }
                  },
                  {
                    start: {
                      line: 12,
                      column: 53
                    },
                    end: {
                      line: 12,
                      column: 67
                    }
                  }
                ],
                line: 12
              },
              '2': {
                loc: {
                  start: {
                    line: 22,
                    column: 2
                  },
                  end: {
                    line: 24,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 22,
                      column: 2
                    },
                    end: {
                      line: 24,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 22,
                      column: 2
                    },
                    end: {
                      line: 24,
                      column: 3
                    }
                  }
                ],
                line: 22
              },
              '3': {
                loc: {
                  start: {
                    line: 26,
                    column: 13
                  },
                  end: {
                    line: 26,
                    column: 69
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 26,
                      column: 45
                    },
                    end: {
                      line: 26,
                      column: 57
                    }
                  },
                  {
                    start: {
                      line: 26,
                      column: 60
                    },
                    end: {
                      line: 26,
                      column: 69
                    }
                  }
                ],
                line: 26
              }
            },
            s: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0,
              '10': 0,
              '11': 0
            },
            f: {
              '0': 0,
              '1': 0
            },
            b: {
              '0': [
                0,
                0
              ],
              '1': [
                0,
                0
              ],
              '2': [
                0,
                0
              ],
              '3': [
                0,
                0
              ]
            },
            _coverageSchema: '43e27e138ebf9cfc5966b082cf9a028302ed4184',
            hash: '6ee722aac8746c3a06ddfa1bdf2a4f480523a760'
          };
          var coverage = global[gcv] || (global[gcv] = {
          });
          if (coverage[path] && coverage[path].hash === hash) {
            return coverage[path];
          }
          return coverage[path] = coverageData;
        }();
        cov_1gbd1wa8hu.s[0]++;
        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        cov_1gbd1wa8hu.s[1]++;
        exports.default = void 0;
        var _main = (cov_1gbd1wa8hu.s[2]++, _interopRequireDefault(_dereq_('../core/main')));
        cov_1gbd1wa8hu.s[3]++;
        _dereq_('./p5sound.Color');
        function _interopRequireDefault(obj) {
          cov_1gbd1wa8hu.f[0]++;
          cov_1gbd1wa8hu.s[4]++;
          return (cov_1gbd1wa8hu.b[1][0]++, obj) && (cov_1gbd1wa8hu.b[1][1]++, obj.__esModule) ? (cov_1gbd1wa8hu.b[0][0]++, obj) : (cov_1gbd1wa8hu.b[0][1]++, {
          default:
            obj
          });
        }        /**
 * @module Color
 * @submodule Creating & Reading
 * @for p5
 * @requires core
 * @requires constants
 */

        cov_1gbd1wa8hu.s[5]++;
        _main.default.prototype.color = function () {
          cov_1gbd1wa8hu.f[1]++;
          cov_1gbd1wa8hu.s[6]++;
          if (arguments[0] instanceof _main.default.Color) {
            cov_1gbd1wa8hu.b[2][0]++;
            cov_1gbd1wa8hu.s[7]++;
            return arguments[0]; // Do nothing if argument is already a color object.
          } else {
            cov_1gbd1wa8hu.b[2][1]++;
          }
          var args = (cov_1gbd1wa8hu.s[8]++, arguments[0] instanceof Array ? (cov_1gbd1wa8hu.b[3][0]++, arguments[0]) : (cov_1gbd1wa8hu.b[3][1]++, arguments));
          cov_1gbd1wa8hu.s[9]++;
          return new _main.default.Color(this, args);
        };
        var _default = (cov_1gbd1wa8hu.s[10]++, _main.default);
        cov_1gbd1wa8hu.s[11]++;
        exports.default = _default;
      },
      {
        '../core/main': 148,
        './p5sound.Color': 143
      }
    ],
    143: [
      function (_dereq_, module, exports) {
        'use strict';
        var cov_1rav9uxsik = function () {
          var path = '/Users/montoyamoraga/github/processing/p5.sound.js/src/color/p5sound.Color.js';
          var hash = '9009962f07d01878de4f729f368a28e9784e1e24';
          var global = new Function('return this') ();
          var gcv = '__coverage__';
          var coverageData = {
            path: '/Users/montoyamoraga/github/processing/p5.sound.js/src/color/p5sound.Color.js',
            statementMap: {
              '0': {
                start: {
                  line: 3,
                  column: 24
                },
                end: {
                  line: 3,
                  column: 328
                }
              },
              '1': {
                start: {
                  line: 3,
                  column: 99
                },
                end: {
                  line: 3,
                  column: 154
                }
              },
              '2': {
                start: {
                  line: 3,
                  column: 133
                },
                end: {
                  line: 3,
                  column: 151
                }
              },
              '3': {
                start: {
                  line: 3,
                  column: 164
                },
                end: {
                  line: 3,
                  column: 326
                }
              },
              '4': {
                start: {
                  line: 3,
                  column: 198
                },
                end: {
                  line: 3,
                  column: 323
                }
              },
              '5': {
                start: {
                  line: 3,
                  column: 329
                },
                end: {
                  line: 3,
                  column: 349
                }
              },
              '6': {
                start: {
                  line: 5,
                  column: 0
                },
                end: {
                  line: 5,
                  column: 45
                }
              },
              '7': {
                start: {
                  line: 7,
                  column: 0
                },
                end: {
                  line: 7,
                  column: 41
                }
              },
              '8': {
                start: {
                  line: 9,
                  column: 0
                },
                end: {
                  line: 9,
                  column: 40
                }
              },
              '9': {
                start: {
                  line: 11,
                  column: 0
                },
                end: {
                  line: 11,
                  column: 42
                }
              },
              '10': {
                start: {
                  line: 13,
                  column: 0
                },
                end: {
                  line: 13,
                  column: 49
                }
              },
              '11': {
                start: {
                  line: 15,
                  column: 0
                },
                end: {
                  line: 15,
                  column: 42
                }
              },
              '12': {
                start: {
                  line: 17,
                  column: 0
                },
                end: {
                  line: 17,
                  column: 47
                }
              },
              '13': {
                start: {
                  line: 19,
                  column: 0
                },
                end: {
                  line: 19,
                  column: 46
                }
              },
              '14': {
                start: {
                  line: 21,
                  column: 0
                },
                end: {
                  line: 21,
                  column: 42
                }
              },
              '15': {
                start: {
                  line: 23,
                  column: 0
                },
                end: {
                  line: 25,
                  column: 3
                }
              },
              '16': {
                start: {
                  line: 26,
                  column: 0
                },
                end: {
                  line: 26,
                  column: 25
                }
              },
              '17': {
                start: {
                  line: 28,
                  column: 12
                },
                end: {
                  line: 28,
                  column: 59
                }
              },
              '18': {
                start: {
                  line: 30,
                  column: 16
                },
                end: {
                  line: 30,
                  column: 69
                }
              },
              '19': {
                start: {
                  line: 32,
                  column: 38
                },
                end: {
                  line: 32,
                  column: 85
                }
              },
              '20': {
                start: {
                  line: 32,
                  column: 73
                },
                end: {
                  line: 32,
                  column: 85
                }
              },
              '21': {
                start: {
                  line: 32,
                  column: 98
                },
                end: {
                  line: 32,
                  column: 111
                }
              },
              '22': {
                start: {
                  line: 32,
                  column: 113
                },
                end: {
                  line: 32,
                  column: 194
                }
              },
              '23': {
                start: {
                  line: 32,
                  column: 178
                },
                end: {
                  line: 32,
                  column: 191
                }
              },
              '24': {
                start: {
                  line: 32,
                  column: 195
                },
                end: {
                  line: 32,
                  column: 208
                }
              },
              '25': {
                start: {
                  line: 34,
                  column: 40
                },
                end: {
                  line: 34,
                  column: 82
                }
              },
              '26': {
                start: {
                  line: 34,
                  column: 69
                },
                end: {
                  line: 34,
                  column: 80
                }
              },
              '27': {
                start: {
                  line: 34,
                  column: 83
                },
                end: {
                  line: 34,
                  column: 187
                }
              },
              '28': {
                start: {
                  line: 34,
                  column: 161
                },
                end: {
                  line: 34,
                  column: 185
                }
              },
              '29': {
                start: {
                  line: 34,
                  column: 200
                },
                end: {
                  line: 34,
                  column: 226
                }
              },
              '30': {
                start: {
                  line: 34,
                  column: 228
                },
                end: {
                  line: 34,
                  column: 283
                }
              },
              '31': {
                start: {
                  line: 34,
                  column: 259
                },
                end: {
                  line: 34,
                  column: 281
                }
              },
              '32': {
                start: {
                  line: 34,
                  column: 297
                },
                end: {
                  line: 34,
                  column: 299
                }
              },
              '33': {
                start: {
                  line: 34,
                  column: 329
                },
                end: {
                  line: 34,
                  column: 385
                }
              },
              '34': {
                start: {
                  line: 34,
                  column: 387
                },
                end: {
                  line: 34,
                  column: 667
                }
              },
              '35': {
                start: {
                  line: 34,
                  column: 410
                },
                end: {
                  line: 34,
                  column: 665
                }
              },
              '36': {
                start: {
                  line: 34,
                  column: 475
                },
                end: {
                  line: 34,
                  column: 547
                }
              },
              '37': {
                start: {
                  line: 34,
                  column: 549
                },
                end: {
                  line: 34,
                  column: 663
                }
              },
              '38': {
                start: {
                  line: 34,
                  column: 587
                },
                end: {
                  line: 34,
                  column: 628
                }
              },
              '39': {
                start: {
                  line: 34,
                  column: 638
                },
                end: {
                  line: 34,
                  column: 661
                }
              },
              '40': {
                start: {
                  line: 34,
                  column: 668
                },
                end: {
                  line: 34,
                  column: 689
                }
              },
              '41': {
                start: {
                  line: 34,
                  column: 690
                },
                end: {
                  line: 34,
                  column: 728
                }
              },
              '42': {
                start: {
                  line: 34,
                  column: 703
                },
                end: {
                  line: 34,
                  column: 726
                }
              },
              '43': {
                start: {
                  line: 34,
                  column: 729
                },
                end: {
                  line: 34,
                  column: 743
                }
              },
              '44': {
                start: {
                  line: 36,
                  column: 39
                },
                end: {
                  line: 36,
                  column: 93
                }
              },
              '45': {
                start: {
                  line: 38,
                  column: 50
                },
                end: {
                  line: 38,
                  column: 151
                }
              },
              '46': {
                start: {
                  line: 38,
                  column: 92
                },
                end: {
                  line: 38,
                  column: 149
                }
              },
              '47': {
                start: {
                  line: 40,
                  column: 44
                },
                end: {
                  line: 40,
                  column: 315
                }
              },
              '48': {
                start: {
                  line: 40,
                  column: 57
                },
                end: {
                  line: 40,
                  column: 58
                }
              },
              '49': {
                start: {
                  line: 40,
                  column: 102
                },
                end: {
                  line: 40,
                  column: 110
                }
              },
              '50': {
                start: {
                  line: 40,
                  column: 112
                },
                end: {
                  line: 40,
                  column: 167
                }
              },
              '51': {
                start: {
                  line: 40,
                  column: 168
                },
                end: {
                  line: 40,
                  column: 199
                }
              },
              '52': {
                start: {
                  line: 40,
                  column: 200
                },
                end: {
                  line: 40,
                  column: 254
                }
              },
              '53': {
                start: {
                  line: 40,
                  column: 227
                },
                end: {
                  line: 40,
                  column: 254
                }
              },
              '54': {
                start: {
                  line: 40,
                  column: 255
                },
                end: {
                  line: 40,
                  column: 313
                }
              },
              '55': {
                start: {
                  line: 42,
                  column: 62
                },
                end: {
                  line: 42,
                  column: 131
                }
              },
              '56': {
                start: {
                  line: 42,
                  column: 78
                },
                end: {
                  line: 42,
                  column: 131
                }
              },
              '57': {
                start: {
                  line: 42,
                  column: 132
                },
                end: {
                  line: 42,
                  column: 193
                }
              },
              '58': {
                start: {
                  line: 42,
                  column: 149
                },
                end: {
                  line: 42,
                  column: 193
                }
              },
              '59': {
                start: {
                  line: 42,
                  column: 194
                },
                end: {
                  line: 42,
                  column: 213
                }
              },
              '60': {
                start: {
                  line: 47,
                  column: 18
                },
                end: {
                  line: 196,
                  column: 1
                }
              },
              '61': {
                start: {
                  line: 206,
                  column: 17
                },
                end: {
                  line: 206,
                  column: 22
                }
              },
              '62': {
                start: {
                  line: 208,
                  column: 14
                },
                end: {
                  line: 208,
                  column: 25
                }
              },
              '63': {
                start: {
                  line: 214,
                  column: 20
                },
                end: {
                  line: 217,
                  column: 1
                }
              },
              '64': {
                start: {
                  line: 245,
                  column: 0
                },
                end: {
                  line: 399,
                  column: 4
                }
              },
              '65': {
                start: {
                  line: 249,
                  column: 4
                },
                end: {
                  line: 249,
                  column: 33
                }
              },
              '66': {
                start: {
                  line: 252,
                  column: 4
                },
                end: {
                  line: 252,
                  column: 65
                }
              },
              '67': {
                start: {
                  line: 255,
                  column: 4
                },
                end: {
                  line: 259,
                  column: 5
                }
              },
              '68': {
                start: {
                  line: 256,
                  column: 6
                },
                end: {
                  line: 256,
                  column: 73
                }
              },
              '69': {
                start: {
                  line: 258,
                  column: 6
                },
                end: {
                  line: 258,
                  column: 57
                }
              },
              '70': {
                start: {
                  line: 262,
                  column: 4
                },
                end: {
                  line: 262,
                  column: 28
                }
              },
              '71': {
                start: {
                  line: 266,
                  column: 2
                },
                end: {
                  line: 396,
                  column: 6
                }
              },
              '72': {
                start: {
                  line: 269,
                  column: 18
                },
                end: {
                  line: 269,
                  column: 29
                }
              },
              '73': {
                start: {
                  line: 271,
                  column: 19
                },
                end: {
                  line: 271,
                  column: 56
                }
              },
              '74': {
                start: {
                  line: 273,
                  column: 6
                },
                end: {
                  line: 275,
                  column: 7
                }
              },
              '75': {
                start: {
                  line: 273,
                  column: 19
                },
                end: {
                  line: 273,
                  column: 35
                }
              },
              '76': {
                start: {
                  line: 274,
                  column: 8
                },
                end: {
                  line: 274,
                  column: 47
                }
              },
              '77': {
                start: {
                  line: 282,
                  column: 6
                },
                end: {
                  line: 282,
                  column: 27
                }
              },
              '78': {
                start: {
                  line: 283,
                  column: 6
                },
                end: {
                  line: 283,
                  column: 29
                }
              },
              '79': {
                start: {
                  line: 288,
                  column: 6
                },
                end: {
                  line: 288,
                  column: 24
                }
              },
              '80': {
                start: {
                  line: 321,
                  column: 20
                },
                end: {
                  line: 321,
                  column: 36
                }
              },
              '81': {
                start: {
                  line: 322,
                  column: 17
                },
                end: {
                  line: 322,
                  column: 26
                }
              },
              '82': {
                start: {
                  line: 323,
                  column: 18
                },
                end: {
                  line: 323,
                  column: 34
                }
              },
              '83': {
                start: {
                  line: 324,
                  column: 20
                },
                end: {
                  line: 324,
                  column: 22
                }
              },
              '84': {
                start: {
                  line: 327,
                  column: 6
                },
                end: {
                  line: 392,
                  column: 7
                }
              },
              '85': {
                start: {
                  line: 329,
                  column: 8
                },
                end: {
                  line: 329,
                  column: 34
                }
              },
              '86': {
                start: {
                  line: 330,
                  column: 8
                },
                end: {
                  line: 330,
                  column: 34
                }
              },
              '87': {
                start: {
                  line: 331,
                  column: 8
                },
                end: {
                  line: 331,
                  column: 34
                }
              },
              '88': {
                start: {
                  line: 333,
                  column: 8
                },
                end: {
                  line: 337,
                  column: 9
                }
              },
              '89': {
                start: {
                  line: 334,
                  column: 10
                },
                end: {
                  line: 334,
                  column: 36
                }
              },
              '90': {
                start: {
                  line: 336,
                  column: 10
                },
                end: {
                  line: 336,
                  column: 25
                }
              },
              '91': {
                start: {
                  line: 341,
                  column: 8
                },
                end: {
                  line: 349,
                  column: 9
                }
              },
              '92': {
                start: {
                  line: 342,
                  column: 23
                },
                end: {
                  line: 342,
                  column: 33
                }
              },
              '93': {
                start: {
                  line: 344,
                  column: 10
                },
                end: {
                  line: 348,
                  column: 11
                }
              },
              '94': {
                start: {
                  line: 345,
                  column: 12
                },
                end: {
                  line: 345,
                  column: 27
                }
              },
              '95': {
                start: {
                  line: 346,
                  column: 17
                },
                end: {
                  line: 348,
                  column: 11
                }
              },
              '96': {
                start: {
                  line: 347,
                  column: 12
                },
                end: {
                  line: 347,
                  column: 27
                }
              },
              '97': {
                start: {
                  line: 350,
                  column: 13
                },
                end: {
                  line: 392,
                  column: 7
                }
              },
              '98': {
                start: {
                  line: 351,
                  column: 18
                },
                end: {
                  line: 351,
                  column: 40
                }
              },
              '99': {
                start: {
                  line: 353,
                  column: 8
                },
                end: {
                  line: 355,
                  column: 9
                }
              },
              '100': {
                start: {
                  line: 354,
                  column: 10
                },
                end: {
                  line: 354,
                  column: 65
                }
              },
              '101': {
                start: {
                  line: 357,
                  column: 8
                },
                end: {
                  line: 364,
                  column: 9
                }
              },
              '102': {
                start: {
                  line: 359,
                  column: 10
                },
                end: {
                  line: 361,
                  column: 13
                }
              },
              '103': {
                start: {
                  line: 360,
                  column: 12
                },
                end: {
                  line: 360,
                  column: 31
                }
              },
              '104': {
                start: {
                  line: 362,
                  column: 10
                },
                end: {
                  line: 362,
                  column: 25
                }
              },
              '105': {
                start: {
                  line: 363,
                  column: 10
                },
                end: {
                  line: 363,
                  column: 25
                }
              },
              '106': {
                start: {
                  line: 367,
                  column: 8
                },
                end: {
                  line: 367,
                  column: 31
                }
              },
              '107': {
                start: {
                  line: 368,
                  column: 13
                },
                end: {
                  line: 392,
                  column: 7
                }
              },
              '108': {
                start: {
                  line: 376,
                  column: 8
                },
                end: {
                  line: 376,
                  column: 34
                }
              },
              '109': {
                start: {
                  line: 377,
                  column: 8
                },
                end: {
                  line: 377,
                  column: 34
                }
              },
              '110': {
                start: {
                  line: 378,
                  column: 8
                },
                end: {
                  line: 378,
                  column: 34
                }
              },
              '111': {
                start: {
                  line: 380,
                  column: 8
                },
                end: {
                  line: 384,
                  column: 9
                }
              },
              '112': {
                start: {
                  line: 381,
                  column: 10
                },
                end: {
                  line: 381,
                  column: 36
                }
              },
              '113': {
                start: {
                  line: 383,
                  column: 10
                },
                end: {
                  line: 383,
                  column: 25
                }
              },
              '114': {
                start: {
                  line: 387,
                  column: 8
                },
                end: {
                  line: 389,
                  column: 11
                }
              },
              '115': {
                start: {
                  line: 388,
                  column: 10
                },
                end: {
                  line: 388,
                  column: 49
                }
              },
              '116': {
                start: {
                  line: 391,
                  column: 8
                },
                end: {
                  line: 391,
                  column: 86
                }
              },
              '117': {
                start: {
                  line: 394,
                  column: 6
                },
                end: {
                  line: 394,
                  column: 21
                }
              },
              '118': {
                start: {
                  line: 398,
                  column: 2
                },
                end: {
                  line: 398,
                  column: 15
                }
              },
              '119': {
                start: {
                  line: 401,
                  column: 15
                },
                end: {
                  line: 401,
                  column: 34
                }
              },
              '120': {
                start: {
                  line: 402,
                  column: 0
                },
                end: {
                  line: 402,
                  column: 27
                }
              }
            },
            fnMap: {
              '0': {
                name: '_typeof',
                decl: {
                  start: {
                    line: 3,
                    column: 9
                  },
                  end: {
                    line: 3,
                    column: 16
                  }
                },
                loc: {
                  start: {
                    line: 3,
                    column: 22
                  },
                  end: {
                    line: 3,
                    column: 351
                  }
                },
                line: 3
              },
              '1': {
                name: '_typeof',
                decl: {
                  start: {
                    line: 3,
                    column: 118
                  },
                  end: {
                    line: 3,
                    column: 125
                  }
                },
                loc: {
                  start: {
                    line: 3,
                    column: 131
                  },
                  end: {
                    line: 3,
                    column: 153
                  }
                },
                line: 3
              },
              '2': {
                name: '_typeof',
                decl: {
                  start: {
                    line: 3,
                    column: 183
                  },
                  end: {
                    line: 3,
                    column: 190
                  }
                },
                loc: {
                  start: {
                    line: 3,
                    column: 196
                  },
                  end: {
                    line: 3,
                    column: 325
                  }
                },
                line: 3
              },
              '3': {
                name: '_getRequireWildcardCache',
                decl: {
                  start: {
                    line: 32,
                    column: 9
                  },
                  end: {
                    line: 32,
                    column: 33
                  }
                },
                loc: {
                  start: {
                    line: 32,
                    column: 36
                  },
                  end: {
                    line: 32,
                    column: 210
                  }
                },
                line: 32
              },
              '4': {
                name: '_getRequireWildcardCache',
                decl: {
                  start: {
                    line: 32,
                    column: 149
                  },
                  end: {
                    line: 32,
                    column: 173
                  }
                },
                loc: {
                  start: {
                    line: 32,
                    column: 176
                  },
                  end: {
                    line: 32,
                    column: 193
                  }
                },
                line: 32
              },
              '5': {
                name: '_interopRequireWildcard',
                decl: {
                  start: {
                    line: 34,
                    column: 9
                  },
                  end: {
                    line: 34,
                    column: 32
                  }
                },
                loc: {
                  start: {
                    line: 34,
                    column: 38
                  },
                  end: {
                    line: 34,
                    column: 745
                  }
                },
                line: 34
              },
              '6': {
                name: '_interopRequireDefault',
                decl: {
                  start: {
                    line: 36,
                    column: 9
                  },
                  end: {
                    line: 36,
                    column: 31
                  }
                },
                loc: {
                  start: {
                    line: 36,
                    column: 37
                  },
                  end: {
                    line: 36,
                    column: 95
                  }
                },
                line: 36
              },
              '7': {
                name: '_classCallCheck',
                decl: {
                  start: {
                    line: 38,
                    column: 9
                  },
                  end: {
                    line: 38,
                    column: 24
                  }
                },
                loc: {
                  start: {
                    line: 38,
                    column: 48
                  },
                  end: {
                    line: 38,
                    column: 153
                  }
                },
                line: 38
              },
              '8': {
                name: '_defineProperties',
                decl: {
                  start: {
                    line: 40,
                    column: 9
                  },
                  end: {
                    line: 40,
                    column: 26
                  }
                },
                loc: {
                  start: {
                    line: 40,
                    column: 42
                  },
                  end: {
                    line: 40,
                    column: 317
                  }
                },
                line: 40
              },
              '9': {
                name: '_createClass',
                decl: {
                  start: {
                    line: 42,
                    column: 9
                  },
                  end: {
                    line: 42,
                    column: 21
                  }
                },
                loc: {
                  start: {
                    line: 42,
                    column: 60
                  },
                  end: {
                    line: 42,
                    column: 215
                  }
                },
                line: 42
              },
              '10': {
                name: '(anonymous_10)',
                decl: {
                  start: {
                    line: 247,
                    column: 0
                  },
                  end: {
                    line: 247,
                    column: 1
                  }
                },
                loc: {
                  start: {
                    line: 247,
                    column: 12
                  },
                  end: {
                    line: 399,
                    column: 1
                  }
                },
                line: 247
              },
              '11': {
                name: 'Color',
                decl: {
                  start: {
                    line: 248,
                    column: 11
                  },
                  end: {
                    line: 248,
                    column: 16
                  }
                },
                loc: {
                  start: {
                    line: 248,
                    column: 30
                  },
                  end: {
                    line: 263,
                    column: 3
                  }
                },
                line: 248
              },
              '12': {
                name: '_calculateLevels',
                decl: {
                  start: {
                    line: 268,
                    column: 20
                  },
                  end: {
                    line: 268,
                    column: 36
                  }
                },
                loc: {
                  start: {
                    line: 268,
                    column: 39
                  },
                  end: {
                    line: 276,
                    column: 5
                  }
                },
                line: 268
              },
              '13': {
                name: '_storeModeAndMaxes',
                decl: {
                  start: {
                    line: 281,
                    column: 20
                  },
                  end: {
                    line: 281,
                    column: 38
                  }
                },
                loc: {
                  start: {
                    line: 281,
                    column: 60
                  },
                  end: {
                    line: 284,
                    column: 5
                  }
                },
                line: 281
              },
              '14': {
                name: '_getMaxes',
                decl: {
                  start: {
                    line: 287,
                    column: 20
                  },
                  end: {
                    line: 287,
                    column: 29
                  }
                },
                loc: {
                  start: {
                    line: 287,
                    column: 32
                  },
                  end: {
                    line: 289,
                    column: 5
                  }
                },
                line: 287
              },
              '15': {
                name: '_parseInputs',
                decl: {
                  start: {
                    line: 320,
                    column: 20
                  },
                  end: {
                    line: 320,
                    column: 32
                  }
                },
                loc: {
                  start: {
                    line: 320,
                    column: 45
                  },
                  end: {
                    line: 395,
                    column: 5
                  }
                },
                line: 320
              },
              '16': {
                name: '(anonymous_16)',
                decl: {
                  start: {
                    line: 359,
                    column: 61
                  },
                  end: {
                    line: 359,
                    column: 62
                  }
                },
                loc: {
                  start: {
                    line: 359,
                    column: 78
                  },
                  end: {
                    line: 361,
                    column: 11
                  }
                },
                line: 359
              },
              '17': {
                name: '(anonymous_17)',
                decl: {
                  start: {
                    line: 387,
                    column: 30
                  },
                  end: {
                    line: 387,
                    column: 31
                  }
                },
                loc: {
                  start: {
                    line: 387,
                    column: 47
                  },
                  end: {
                    line: 389,
                    column: 9
                  }
                },
                line: 387
              }
            },
            branchMap: {
              '0': {
                loc: {
                  start: {
                    line: 3,
                    column: 24
                  },
                  end: {
                    line: 3,
                    column: 328
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 3,
                      column: 24
                    },
                    end: {
                      line: 3,
                      column: 328
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 24
                    },
                    end: {
                      line: 3,
                      column: 328
                    }
                  }
                ],
                line: 3
              },
              '1': {
                loc: {
                  start: {
                    line: 3,
                    column: 28
                  },
                  end: {
                    line: 3,
                    column: 95
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 3,
                      column: 28
                    },
                    end: {
                      line: 3,
                      column: 56
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 60
                    },
                    end: {
                      line: 3,
                      column: 95
                    }
                  }
                ],
                line: 3
              },
              '2': {
                loc: {
                  start: {
                    line: 3,
                    column: 205
                  },
                  end: {
                    line: 3,
                    column: 322
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 3,
                      column: 301
                    },
                    end: {
                      line: 3,
                      column: 309
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 312
                    },
                    end: {
                      line: 3,
                      column: 322
                    }
                  }
                ],
                line: 3
              },
              '3': {
                loc: {
                  start: {
                    line: 3,
                    column: 205
                  },
                  end: {
                    line: 3,
                    column: 298
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 3,
                      column: 205
                    },
                    end: {
                      line: 3,
                      column: 208
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 212
                    },
                    end: {
                      line: 3,
                      column: 240
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 244
                    },
                    end: {
                      line: 3,
                      column: 270
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 274
                    },
                    end: {
                      line: 3,
                      column: 298
                    }
                  }
                ],
                line: 3
              },
              '4': {
                loc: {
                  start: {
                    line: 32,
                    column: 38
                  },
                  end: {
                    line: 32,
                    column: 85
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 32,
                      column: 38
                    },
                    end: {
                      line: 32,
                      column: 85
                    }
                  },
                  {
                    start: {
                      line: 32,
                      column: 38
                    },
                    end: {
                      line: 32,
                      column: 85
                    }
                  }
                ],
                line: 32
              },
              '5': {
                loc: {
                  start: {
                    line: 34,
                    column: 40
                  },
                  end: {
                    line: 34,
                    column: 82
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 34,
                      column: 40
                    },
                    end: {
                      line: 34,
                      column: 82
                    }
                  },
                  {
                    start: {
                      line: 34,
                      column: 40
                    },
                    end: {
                      line: 34,
                      column: 82
                    }
                  }
                ],
                line: 34
              },
              '6': {
                loc: {
                  start: {
                    line: 34,
                    column: 44
                  },
                  end: {
                    line: 34,
                    column: 65
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 34,
                      column: 44
                    },
                    end: {
                      line: 34,
                      column: 47
                    }
                  },
                  {
                    start: {
                      line: 34,
                      column: 51
                    },
                    end: {
                      line: 34,
                      column: 65
                    }
                  }
                ],
                line: 34
              },
              '7': {
                loc: {
                  start: {
                    line: 34,
                    column: 83
                  },
                  end: {
                    line: 34,
                    column: 187
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 34,
                      column: 83
                    },
                    end: {
                      line: 34,
                      column: 187
                    }
                  },
                  {
                    start: {
                      line: 34,
                      column: 83
                    },
                    end: {
                      line: 34,
                      column: 187
                    }
                  }
                ],
                line: 34
              },
              '8': {
                loc: {
                  start: {
                    line: 34,
                    column: 87
                  },
                  end: {
                    line: 34,
                    column: 157
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 34,
                      column: 87
                    },
                    end: {
                      line: 34,
                      column: 99
                    }
                  },
                  {
                    start: {
                      line: 34,
                      column: 103
                    },
                    end: {
                      line: 34,
                      column: 128
                    }
                  },
                  {
                    start: {
                      line: 34,
                      column: 132
                    },
                    end: {
                      line: 34,
                      column: 157
                    }
                  }
                ],
                line: 34
              },
              '9': {
                loc: {
                  start: {
                    line: 34,
                    column: 228
                  },
                  end: {
                    line: 34,
                    column: 283
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 34,
                      column: 228
                    },
                    end: {
                      line: 34,
                      column: 283
                    }
                  },
                  {
                    start: {
                      line: 34,
                      column: 228
                    },
                    end: {
                      line: 34,
                      column: 283
                    }
                  }
                ],
                line: 34
              },
              '10': {
                loc: {
                  start: {
                    line: 34,
                    column: 232
                  },
                  end: {
                    line: 34,
                    column: 255
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 34,
                      column: 232
                    },
                    end: {
                      line: 34,
                      column: 237
                    }
                  },
                  {
                    start: {
                      line: 34,
                      column: 241
                    },
                    end: {
                      line: 34,
                      column: 255
                    }
                  }
                ],
                line: 34
              },
              '11': {
                loc: {
                  start: {
                    line: 34,
                    column: 329
                  },
                  end: {
                    line: 34,
                    column: 385
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 34,
                      column: 329
                    },
                    end: {
                      line: 34,
                      column: 350
                    }
                  },
                  {
                    start: {
                      line: 34,
                      column: 354
                    },
                    end: {
                      line: 34,
                      column: 385
                    }
                  }
                ],
                line: 34
              },
              '12': {
                loc: {
                  start: {
                    line: 34,
                    column: 410
                  },
                  end: {
                    line: 34,
                    column: 665
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 34,
                      column: 410
                    },
                    end: {
                      line: 34,
                      column: 665
                    }
                  },
                  {
                    start: {
                      line: 34,
                      column: 410
                    },
                    end: {
                      line: 34,
                      column: 665
                    }
                  }
                ],
                line: 34
              },
              '13': {
                loc: {
                  start: {
                    line: 34,
                    column: 475
                  },
                  end: {
                    line: 34,
                    column: 547
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 34,
                      column: 499
                    },
                    end: {
                      line: 34,
                      column: 540
                    }
                  },
                  {
                    start: {
                      line: 34,
                      column: 543
                    },
                    end: {
                      line: 34,
                      column: 547
                    }
                  }
                ],
                line: 34
              },
              '14': {
                loc: {
                  start: {
                    line: 34,
                    column: 549
                  },
                  end: {
                    line: 34,
                    column: 663
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 34,
                      column: 549
                    },
                    end: {
                      line: 34,
                      column: 663
                    }
                  },
                  {
                    start: {
                      line: 34,
                      column: 549
                    },
                    end: {
                      line: 34,
                      column: 663
                    }
                  }
                ],
                line: 34
              },
              '15': {
                loc: {
                  start: {
                    line: 34,
                    column: 553
                  },
                  end: {
                    line: 34,
                    column: 583
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 34,
                      column: 553
                    },
                    end: {
                      line: 34,
                      column: 557
                    }
                  },
                  {
                    start: {
                      line: 34,
                      column: 562
                    },
                    end: {
                      line: 34,
                      column: 570
                    }
                  },
                  {
                    start: {
                      line: 34,
                      column: 574
                    },
                    end: {
                      line: 34,
                      column: 582
                    }
                  }
                ],
                line: 34
              },
              '16': {
                loc: {
                  start: {
                    line: 34,
                    column: 690
                  },
                  end: {
                    line: 34,
                    column: 728
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 34,
                      column: 690
                    },
                    end: {
                      line: 34,
                      column: 728
                    }
                  },
                  {
                    start: {
                      line: 34,
                      column: 690
                    },
                    end: {
                      line: 34,
                      column: 728
                    }
                  }
                ],
                line: 34
              },
              '17': {
                loc: {
                  start: {
                    line: 36,
                    column: 46
                  },
                  end: {
                    line: 36,
                    column: 92
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 36,
                      column: 70
                    },
                    end: {
                      line: 36,
                      column: 73
                    }
                  },
                  {
                    start: {
                      line: 36,
                      column: 76
                    },
                    end: {
                      line: 36,
                      column: 92
                    }
                  }
                ],
                line: 36
              },
              '18': {
                loc: {
                  start: {
                    line: 36,
                    column: 46
                  },
                  end: {
                    line: 36,
                    column: 67
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 36,
                      column: 46
                    },
                    end: {
                      line: 36,
                      column: 49
                    }
                  },
                  {
                    start: {
                      line: 36,
                      column: 53
                    },
                    end: {
                      line: 36,
                      column: 67
                    }
                  }
                ],
                line: 36
              },
              '19': {
                loc: {
                  start: {
                    line: 38,
                    column: 50
                  },
                  end: {
                    line: 38,
                    column: 151
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 38,
                      column: 50
                    },
                    end: {
                      line: 38,
                      column: 151
                    }
                  },
                  {
                    start: {
                      line: 38,
                      column: 50
                    },
                    end: {
                      line: 38,
                      column: 151
                    }
                  }
                ],
                line: 38
              },
              '20': {
                loc: {
                  start: {
                    line: 40,
                    column: 136
                  },
                  end: {
                    line: 40,
                    column: 166
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 40,
                      column: 136
                    },
                    end: {
                      line: 40,
                      column: 157
                    }
                  },
                  {
                    start: {
                      line: 40,
                      column: 161
                    },
                    end: {
                      line: 40,
                      column: 166
                    }
                  }
                ],
                line: 40
              },
              '21': {
                loc: {
                  start: {
                    line: 40,
                    column: 200
                  },
                  end: {
                    line: 40,
                    column: 254
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 40,
                      column: 200
                    },
                    end: {
                      line: 40,
                      column: 254
                    }
                  },
                  {
                    start: {
                      line: 40,
                      column: 200
                    },
                    end: {
                      line: 40,
                      column: 254
                    }
                  }
                ],
                line: 40
              },
              '22': {
                loc: {
                  start: {
                    line: 42,
                    column: 62
                  },
                  end: {
                    line: 42,
                    column: 131
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 42,
                      column: 62
                    },
                    end: {
                      line: 42,
                      column: 131
                    }
                  },
                  {
                    start: {
                      line: 42,
                      column: 62
                    },
                    end: {
                      line: 42,
                      column: 131
                    }
                  }
                ],
                line: 42
              },
              '23': {
                loc: {
                  start: {
                    line: 42,
                    column: 132
                  },
                  end: {
                    line: 42,
                    column: 193
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 42,
                      column: 132
                    },
                    end: {
                      line: 42,
                      column: 193
                    }
                  },
                  {
                    start: {
                      line: 42,
                      column: 132
                    },
                    end: {
                      line: 42,
                      column: 193
                    }
                  }
                ],
                line: 42
              },
              '24': {
                loc: {
                  start: {
                    line: 255,
                    column: 4
                  },
                  end: {
                    line: 259,
                    column: 5
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 255,
                      column: 4
                    },
                    end: {
                      line: 259,
                      column: 5
                    }
                  },
                  {
                    start: {
                      line: 255,
                      column: 4
                    },
                    end: {
                      line: 259,
                      column: 5
                    }
                  }
                ],
                line: 255
              },
              '25': {
                loc: {
                  start: {
                    line: 327,
                    column: 6
                  },
                  end: {
                    line: 392,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 327,
                      column: 6
                    },
                    end: {
                      line: 392,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 327,
                      column: 6
                    },
                    end: {
                      line: 392,
                      column: 7
                    }
                  }
                ],
                line: 327
              },
              '26': {
                loc: {
                  start: {
                    line: 333,
                    column: 8
                  },
                  end: {
                    line: 337,
                    column: 9
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 333,
                      column: 8
                    },
                    end: {
                      line: 337,
                      column: 9
                    }
                  },
                  {
                    start: {
                      line: 333,
                      column: 8
                    },
                    end: {
                      line: 337,
                      column: 9
                    }
                  }
                ],
                line: 333
              },
              '27': {
                loc: {
                  start: {
                    line: 344,
                    column: 10
                  },
                  end: {
                    line: 348,
                    column: 11
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 344,
                      column: 10
                    },
                    end: {
                      line: 348,
                      column: 11
                    }
                  },
                  {
                    start: {
                      line: 344,
                      column: 10
                    },
                    end: {
                      line: 348,
                      column: 11
                    }
                  }
                ],
                line: 344
              },
              '28': {
                loc: {
                  start: {
                    line: 346,
                    column: 17
                  },
                  end: {
                    line: 348,
                    column: 11
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 346,
                      column: 17
                    },
                    end: {
                      line: 348,
                      column: 11
                    }
                  },
                  {
                    start: {
                      line: 346,
                      column: 17
                    },
                    end: {
                      line: 348,
                      column: 11
                    }
                  }
                ],
                line: 346
              },
              '29': {
                loc: {
                  start: {
                    line: 350,
                    column: 13
                  },
                  end: {
                    line: 392,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 350,
                      column: 13
                    },
                    end: {
                      line: 392,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 350,
                      column: 13
                    },
                    end: {
                      line: 392,
                      column: 7
                    }
                  }
                ],
                line: 350
              },
              '30': {
                loc: {
                  start: {
                    line: 350,
                    column: 17
                  },
                  end: {
                    line: 350,
                    column: 55
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 350,
                      column: 17
                    },
                    end: {
                      line: 350,
                      column: 30
                    }
                  },
                  {
                    start: {
                      line: 350,
                      column: 34
                    },
                    end: {
                      line: 350,
                      column: 55
                    }
                  }
                ],
                line: 350
              },
              '31': {
                loc: {
                  start: {
                    line: 353,
                    column: 8
                  },
                  end: {
                    line: 355,
                    column: 9
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 353,
                      column: 8
                    },
                    end: {
                      line: 355,
                      column: 9
                    }
                  },
                  {
                    start: {
                      line: 353,
                      column: 8
                    },
                    end: {
                      line: 355,
                      column: 9
                    }
                  }
                ],
                line: 353
              },
              '32': {
                loc: {
                  start: {
                    line: 357,
                    column: 8
                  },
                  end: {
                    line: 364,
                    column: 9
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 357,
                      column: 8
                    },
                    end: {
                      line: 364,
                      column: 9
                    }
                  },
                  {
                    start: {
                      line: 357,
                      column: 8
                    },
                    end: {
                      line: 364,
                      column: 9
                    }
                  }
                ],
                line: 357
              },
              '33': {
                loc: {
                  start: {
                    line: 368,
                    column: 13
                  },
                  end: {
                    line: 392,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 368,
                      column: 13
                    },
                    end: {
                      line: 392,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 368,
                      column: 13
                    },
                    end: {
                      line: 392,
                      column: 7
                    }
                  }
                ],
                line: 368
              },
              '34': {
                loc: {
                  start: {
                    line: 368,
                    column: 17
                  },
                  end: {
                    line: 368,
                    column: 74
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 368,
                      column: 18
                    },
                    end: {
                      line: 368,
                      column: 31
                    }
                  },
                  {
                    start: {
                      line: 368,
                      column: 35
                    },
                    end: {
                      line: 368,
                      column: 48
                    }
                  },
                  {
                    start: {
                      line: 368,
                      column: 53
                    },
                    end: {
                      line: 368,
                      column: 74
                    }
                  }
                ],
                line: 368
              },
              '35': {
                loc: {
                  start: {
                    line: 380,
                    column: 8
                  },
                  end: {
                    line: 384,
                    column: 9
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 380,
                      column: 8
                    },
                    end: {
                      line: 384,
                      column: 9
                    }
                  },
                  {
                    start: {
                      line: 380,
                      column: 8
                    },
                    end: {
                      line: 384,
                      column: 9
                    }
                  }
                ],
                line: 380
              }
            },
            s: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0,
              '10': 0,
              '11': 0,
              '12': 0,
              '13': 0,
              '14': 0,
              '15': 0,
              '16': 0,
              '17': 0,
              '18': 0,
              '19': 0,
              '20': 0,
              '21': 0,
              '22': 0,
              '23': 0,
              '24': 0,
              '25': 0,
              '26': 0,
              '27': 0,
              '28': 0,
              '29': 0,
              '30': 0,
              '31': 0,
              '32': 0,
              '33': 0,
              '34': 0,
              '35': 0,
              '36': 0,
              '37': 0,
              '38': 0,
              '39': 0,
              '40': 0,
              '41': 0,
              '42': 0,
              '43': 0,
              '44': 0,
              '45': 0,
              '46': 0,
              '47': 0,
              '48': 0,
              '49': 0,
              '50': 0,
              '51': 0,
              '52': 0,
              '53': 0,
              '54': 0,
              '55': 0,
              '56': 0,
              '57': 0,
              '58': 0,
              '59': 0,
              '60': 0,
              '61': 0,
              '62': 0,
              '63': 0,
              '64': 0,
              '65': 0,
              '66': 0,
              '67': 0,
              '68': 0,
              '69': 0,
              '70': 0,
              '71': 0,
              '72': 0,
              '73': 0,
              '74': 0,
              '75': 0,
              '76': 0,
              '77': 0,
              '78': 0,
              '79': 0,
              '80': 0,
              '81': 0,
              '82': 0,
              '83': 0,
              '84': 0,
              '85': 0,
              '86': 0,
              '87': 0,
              '88': 0,
              '89': 0,
              '90': 0,
              '91': 0,
              '92': 0,
              '93': 0,
              '94': 0,
              '95': 0,
              '96': 0,
              '97': 0,
              '98': 0,
              '99': 0,
              '100': 0,
              '101': 0,
              '102': 0,
              '103': 0,
              '104': 0,
              '105': 0,
              '106': 0,
              '107': 0,
              '108': 0,
              '109': 0,
              '110': 0,
              '111': 0,
              '112': 0,
              '113': 0,
              '114': 0,
              '115': 0,
              '116': 0,
              '117': 0,
              '118': 0,
              '119': 0,
              '120': 0
            },
            f: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0,
              '10': 0,
              '11': 0,
              '12': 0,
              '13': 0,
              '14': 0,
              '15': 0,
              '16': 0,
              '17': 0
            },
            b: {
              '0': [
                0,
                0
              ],
              '1': [
                0,
                0
              ],
              '2': [
                0,
                0
              ],
              '3': [
                0,
                0,
                0,
                0
              ],
              '4': [
                0,
                0
              ],
              '5': [
                0,
                0
              ],
              '6': [
                0,
                0
              ],
              '7': [
                0,
                0
              ],
              '8': [
                0,
                0,
                0
              ],
              '9': [
                0,
                0
              ],
              '10': [
                0,
                0
              ],
              '11': [
                0,
                0
              ],
              '12': [
                0,
                0
              ],
              '13': [
                0,
                0
              ],
              '14': [
                0,
                0
              ],
              '15': [
                0,
                0,
                0
              ],
              '16': [
                0,
                0
              ],
              '17': [
                0,
                0
              ],
              '18': [
                0,
                0
              ],
              '19': [
                0,
                0
              ],
              '20': [
                0,
                0
              ],
              '21': [
                0,
                0
              ],
              '22': [
                0,
                0
              ],
              '23': [
                0,
                0
              ],
              '24': [
                0,
                0
              ],
              '25': [
                0,
                0
              ],
              '26': [
                0,
                0
              ],
              '27': [
                0,
                0
              ],
              '28': [
                0,
                0
              ],
              '29': [
                0,
                0
              ],
              '30': [
                0,
                0
              ],
              '31': [
                0,
                0
              ],
              '32': [
                0,
                0
              ],
              '33': [
                0,
                0
              ],
              '34': [
                0,
                0,
                0
              ],
              '35': [
                0,
                0
              ]
            },
            _coverageSchema: '43e27e138ebf9cfc5966b082cf9a028302ed4184',
            hash: '9009962f07d01878de4f729f368a28e9784e1e24'
          };
          var coverage = global[gcv] || (global[gcv] = {
          });
          if (coverage[path] && coverage[path].hash === hash) {
            return coverage[path];
          }
          return coverage[path] = coverageData;
        }();
        _dereq_('core-js/modules/es.symbol');
        _dereq_('core-js/modules/es.symbol.description');
        _dereq_('core-js/modules/es.symbol.iterator');
        _dereq_('core-js/modules/es.array.includes');
        _dereq_('core-js/modules/es.array.iterator');
        _dereq_('core-js/modules/es.array.join');
        _dereq_('core-js/modules/es.array.map');
        _dereq_('core-js/modules/es.array.slice');
        _dereq_('core-js/modules/es.object.get-own-property-descriptor');
        _dereq_('core-js/modules/es.object.to-string');
        _dereq_('core-js/modules/es.regexp.constructor');
        _dereq_('core-js/modules/es.regexp.exec');
        _dereq_('core-js/modules/es.regexp.to-string');
        _dereq_('core-js/modules/es.string.includes');
        _dereq_('core-js/modules/es.string.iterator');
        _dereq_('core-js/modules/es.string.trim');
        _dereq_('core-js/modules/es.weak-map');
        _dereq_('core-js/modules/web.dom-collections.iterator');
        function _typeof2(obj) {
          if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {
            _typeof2 = function _typeof2(obj) {
              return typeof obj;
            };
          } else {
            _typeof2 = function _typeof2(obj) {
              return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;
            };
          }
          return _typeof2(obj);
        }
        function _typeof(obj) {
          cov_1rav9uxsik.f[0]++;
          cov_1rav9uxsik.s[0]++;
          if ((cov_1rav9uxsik.b[1][0]++, typeof Symbol === 'function') && (cov_1rav9uxsik.b[1][1]++, _typeof2(Symbol.iterator) === 'symbol')) {
            cov_1rav9uxsik.b[0][0]++;
            cov_1rav9uxsik.s[1]++;
            _typeof = function _typeof(obj) {
              cov_1rav9uxsik.f[1]++;
              cov_1rav9uxsik.s[2]++;
              return _typeof2(obj);
            };
          } else {
            cov_1rav9uxsik.b[0][1]++;
            cov_1rav9uxsik.s[3]++;
            _typeof = function _typeof(obj) {
              cov_1rav9uxsik.f[2]++;
              cov_1rav9uxsik.s[4]++;
              return (cov_1rav9uxsik.b[3][0]++, obj) && (cov_1rav9uxsik.b[3][1]++, typeof Symbol === 'function') && (cov_1rav9uxsik.b[3][2]++, obj.constructor === Symbol) && (cov_1rav9uxsik.b[3][3]++, obj !== Symbol.prototype) ? (cov_1rav9uxsik.b[2][0]++, 'symbol') : (cov_1rav9uxsik.b[2][1]++, _typeof2(obj));
            };
          }
          cov_1rav9uxsik.s[5]++;
          return _typeof(obj);
        }
        cov_1rav9uxsik.s[6]++;
        _dereq_('core-js/modules/es.array.includes');
        cov_1rav9uxsik.s[7]++;
        _dereq_('core-js/modules/es.array.join');
        cov_1rav9uxsik.s[8]++;
        _dereq_('core-js/modules/es.array.map');
        cov_1rav9uxsik.s[9]++;
        _dereq_('core-js/modules/es.array.slice');
        cov_1rav9uxsik.s[10]++;
        _dereq_('core-js/modules/es.regexp.constructor');
        cov_1rav9uxsik.s[11]++;
        _dereq_('core-js/modules/es.regexp.exec');
        cov_1rav9uxsik.s[12]++;
        _dereq_('core-js/modules/es.regexp.to-string');
        cov_1rav9uxsik.s[13]++;
        _dereq_('core-js/modules/es.string.includes');
        cov_1rav9uxsik.s[14]++;
        _dereq_('core-js/modules/es.string.trim');
        cov_1rav9uxsik.s[15]++;
        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        cov_1rav9uxsik.s[16]++;
        exports.default = void 0;
        var _main = (cov_1rav9uxsik.s[17]++, _interopRequireDefault(_dereq_('../core/main')));
        var constants = (cov_1rav9uxsik.s[18]++, _interopRequireWildcard(_dereq_('../core/constants')));
        function _getRequireWildcardCache() {
          cov_1rav9uxsik.f[3]++;
          cov_1rav9uxsik.s[19]++;
          if (typeof WeakMap !== 'function') {
            cov_1rav9uxsik.b[4][0]++;
            cov_1rav9uxsik.s[20]++;
            return null;
          } else {
            cov_1rav9uxsik.b[4][1]++;
          }
          var cache = (cov_1rav9uxsik.s[21]++, new WeakMap());
          cov_1rav9uxsik.s[22]++;
          _getRequireWildcardCache = function _getRequireWildcardCache() {
            cov_1rav9uxsik.f[4]++;
            cov_1rav9uxsik.s[23]++;
            return cache;
          };
          cov_1rav9uxsik.s[24]++;
          return cache;
        }
        function _interopRequireWildcard(obj) {
          cov_1rav9uxsik.f[5]++;
          cov_1rav9uxsik.s[25]++;
          if ((cov_1rav9uxsik.b[6][0]++, obj) && (cov_1rav9uxsik.b[6][1]++, obj.__esModule)) {
            cov_1rav9uxsik.b[5][0]++;
            cov_1rav9uxsik.s[26]++;
            return obj;
          } else {
            cov_1rav9uxsik.b[5][1]++;
          }
          cov_1rav9uxsik.s[27]++;
          if ((cov_1rav9uxsik.b[8][0]++, obj === null) || (cov_1rav9uxsik.b[8][1]++, _typeof(obj) !== 'object') && (cov_1rav9uxsik.b[8][2]++, typeof obj !== 'function')) {
            cov_1rav9uxsik.b[7][0]++;
            cov_1rav9uxsik.s[28]++;
            return {
            default:
              obj
            };
          } else {
            cov_1rav9uxsik.b[7][1]++;
          }
          var cache = (cov_1rav9uxsik.s[29]++, _getRequireWildcardCache());
          cov_1rav9uxsik.s[30]++;
          if ((cov_1rav9uxsik.b[10][0]++, cache) && (cov_1rav9uxsik.b[10][1]++, cache.has(obj))) {
            cov_1rav9uxsik.b[9][0]++;
            cov_1rav9uxsik.s[31]++;
            return cache.get(obj);
          } else {
            cov_1rav9uxsik.b[9][1]++;
          }
          var newObj = (cov_1rav9uxsik.s[32]++, {
          });
          var hasPropertyDescriptor = (cov_1rav9uxsik.s[33]++, (cov_1rav9uxsik.b[11][0]++, Object.defineProperty) && (cov_1rav9uxsik.b[11][1]++, Object.getOwnPropertyDescriptor));
          cov_1rav9uxsik.s[34]++;
          for (var key in obj) {
            cov_1rav9uxsik.s[35]++;
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              cov_1rav9uxsik.b[12][0]++;
              var desc = (cov_1rav9uxsik.s[36]++, hasPropertyDescriptor ? (cov_1rav9uxsik.b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) : (cov_1rav9uxsik.b[13][1]++, null));
              cov_1rav9uxsik.s[37]++;
              if ((cov_1rav9uxsik.b[15][0]++, desc) && ((cov_1rav9uxsik.b[15][1]++, desc.get) || (cov_1rav9uxsik.b[15][2]++, desc.set))) {
                cov_1rav9uxsik.b[14][0]++;
                cov_1rav9uxsik.s[38]++;
                Object.defineProperty(newObj, key, desc);
              } else {
                cov_1rav9uxsik.b[14][1]++;
                cov_1rav9uxsik.s[39]++;
                newObj[key] = obj[key];
              }
            } else {
              cov_1rav9uxsik.b[12][1]++;
            }
          }
          cov_1rav9uxsik.s[40]++;
          newObj.default = obj;
          cov_1rav9uxsik.s[41]++;
          if (cache) {
            cov_1rav9uxsik.b[16][0]++;
            cov_1rav9uxsik.s[42]++;
            cache.set(obj, newObj);
          } else {
            cov_1rav9uxsik.b[16][1]++;
          }
          cov_1rav9uxsik.s[43]++;
          return newObj;
        }
        function _interopRequireDefault(obj) {
          cov_1rav9uxsik.f[6]++;
          cov_1rav9uxsik.s[44]++;
          return (cov_1rav9uxsik.b[18][0]++, obj) && (cov_1rav9uxsik.b[18][1]++, obj.__esModule) ? (cov_1rav9uxsik.b[17][0]++, obj) : (cov_1rav9uxsik.b[17][1]++, {
          default:
            obj
          });
        }
        function _classCallCheck(instance, Constructor) {
          cov_1rav9uxsik.f[7]++;
          cov_1rav9uxsik.s[45]++;
          if (!(instance instanceof Constructor)) {
            cov_1rav9uxsik.b[19][0]++;
            cov_1rav9uxsik.s[46]++;
            throw new TypeError('Cannot call a class as a function');
          } else {
            cov_1rav9uxsik.b[19][1]++;
          }
        }
        function _defineProperties(target, props) {
          cov_1rav9uxsik.f[8]++;
          cov_1rav9uxsik.s[47]++;
          for (var i = (cov_1rav9uxsik.s[48]++, 0); i < props.length; i++) {
            var descriptor = (cov_1rav9uxsik.s[49]++, props[i]);
            cov_1rav9uxsik.s[50]++;
            descriptor.enumerable = (cov_1rav9uxsik.b[20][0]++, descriptor.enumerable) || (cov_1rav9uxsik.b[20][1]++, false);
            cov_1rav9uxsik.s[51]++;
            descriptor.configurable = true;
            cov_1rav9uxsik.s[52]++;
            if ('value' in descriptor) {
              cov_1rav9uxsik.b[21][0]++;
              cov_1rav9uxsik.s[53]++;
              descriptor.writable = true;
            } else {
              cov_1rav9uxsik.b[21][1]++;
            }
            cov_1rav9uxsik.s[54]++;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        function _createClass(Constructor, protoProps, staticProps) {
          cov_1rav9uxsik.f[9]++;
          cov_1rav9uxsik.s[55]++;
          if (protoProps) {
            cov_1rav9uxsik.b[22][0]++;
            cov_1rav9uxsik.s[56]++;
            _defineProperties(Constructor.prototype, protoProps);
          } else {
            cov_1rav9uxsik.b[22][1]++;
          }
          cov_1rav9uxsik.s[57]++;
          if (staticProps) {
            cov_1rav9uxsik.b[23][0]++;
            cov_1rav9uxsik.s[58]++;
            _defineProperties(Constructor, staticProps);
          } else {
            cov_1rav9uxsik.b[23][1]++;
          }
          cov_1rav9uxsik.s[59]++;
          return Constructor;
        }        /**
 * CSS named colors.
 */

        var namedColors = (cov_1rav9uxsik.s[60]++, {
          aliceblue: '#f0f8ff',
          antiquewhite: '#faebd7',
          aqua: '#00ffff',
          aquamarine: '#7fffd4',
          azure: '#f0ffff',
          beige: '#f5f5dc',
          bisque: '#ffe4c4',
          black: '#000000',
          blanchedalmond: '#ffebcd',
          blue: '#0000ff',
          blueviolet: '#8a2be2',
          brown: '#a52a2a',
          burlywood: '#deb887',
          cadetblue: '#5f9ea0',
          chartreuse: '#7fff00',
          chocolate: '#d2691e',
          coral: '#ff7f50',
          cornflowerblue: '#6495ed',
          cornsilk: '#fff8dc',
          crimson: '#dc143c',
          cyan: '#00ffff',
          darkblue: '#00008b',
          darkcyan: '#008b8b',
          darkgoldenrod: '#b8860b',
          darkgray: '#a9a9a9',
          darkgreen: '#006400',
          darkgrey: '#a9a9a9',
          darkkhaki: '#bdb76b',
          darkmagenta: '#8b008b',
          darkolivegreen: '#556b2f',
          darkorange: '#ff8c00',
          darkorchid: '#9932cc',
          darkred: '#8b0000',
          darksalmon: '#e9967a',
          darkseagreen: '#8fbc8f',
          darkslateblue: '#483d8b',
          darkslategray: '#2f4f4f',
          darkslategrey: '#2f4f4f',
          darkturquoise: '#00ced1',
          darkviolet: '#9400d3',
          deeppink: '#ff1493',
          deepskyblue: '#00bfff',
          dimgray: '#696969',
          dimgrey: '#696969',
          dodgerblue: '#1e90ff',
          firebrick: '#b22222',
          floralwhite: '#fffaf0',
          forestgreen: '#228b22',
          fuchsia: '#ff00ff',
          gainsboro: '#dcdcdc',
          ghostwhite: '#f8f8ff',
          gold: '#ffd700',
          goldenrod: '#daa520',
          gray: '#808080',
          green: '#008000',
          greenyellow: '#adff2f',
          grey: '#808080',
          honeydew: '#f0fff0',
          hotpink: '#ff69b4',
          indianred: '#cd5c5c',
          indigo: '#4b0082',
          ivory: '#fffff0',
          khaki: '#f0e68c',
          lavender: '#e6e6fa',
          lavenderblush: '#fff0f5',
          lawngreen: '#7cfc00',
          lemonchiffon: '#fffacd',
          lightblue: '#add8e6',
          lightcoral: '#f08080',
          lightcyan: '#e0ffff',
          lightgoldenrodyellow: '#fafad2',
          lightgray: '#d3d3d3',
          lightgreen: '#90ee90',
          lightgrey: '#d3d3d3',
          lightpink: '#ffb6c1',
          lightsalmon: '#ffa07a',
          lightseagreen: '#20b2aa',
          lightskyblue: '#87cefa',
          lightslategray: '#778899',
          lightslategrey: '#778899',
          lightsteelblue: '#b0c4de',
          lightyellow: '#ffffe0',
          lime: '#00ff00',
          limegreen: '#32cd32',
          linen: '#faf0e6',
          magenta: '#ff00ff',
          maroon: '#800000',
          mediumaquamarine: '#66cdaa',
          mediumblue: '#0000cd',
          mediumorchid: '#ba55d3',
          mediumpurple: '#9370db',
          mediumseagreen: '#3cb371',
          mediumslateblue: '#7b68ee',
          mediumspringgreen: '#00fa9a',
          mediumturquoise: '#48d1cc',
          mediumvioletred: '#c71585',
          midnightblue: '#191970',
          mintcream: '#f5fffa',
          mistyrose: '#ffe4e1',
          moccasin: '#ffe4b5',
          navajowhite: '#ffdead',
          navy: '#000080',
          oldlace: '#fdf5e6',
          olive: '#808000',
          olivedrab: '#6b8e23',
          orange: '#ffa500',
          orangered: '#ff4500',
          orchid: '#da70d6',
          palegoldenrod: '#eee8aa',
          palegreen: '#98fb98',
          paleturquoise: '#afeeee',
          palevioletred: '#db7093',
          papayawhip: '#ffefd5',
          peachpuff: '#ffdab9',
          peru: '#cd853f',
          pink: '#ffc0cb',
          plum: '#dda0dd',
          powderblue: '#b0e0e6',
          purple: '#800080',
          rebeccapurple: '#663399',
          red: '#ff0000',
          rosybrown: '#bc8f8f',
          royalblue: '#4169e1',
          saddlebrown: '#8b4513',
          salmon: '#fa8072',
          sandybrown: '#f4a460',
          seagreen: '#2e8b57',
          seashell: '#fff5ee',
          sienna: '#a0522d',
          silver: '#c0c0c0',
          skyblue: '#87ceeb',
          slateblue: '#6a5acd',
          slategray: '#708090',
          slategrey: '#708090',
          snow: '#fffafa',
          springgreen: '#00ff7f',
          steelblue: '#4682b4',
          tan: '#d2b48c',
          teal: '#008080',
          thistle: '#d8bfd8',
          tomato: '#ff6347',
          turquoise: '#40e0d0',
          violet: '#ee82ee',
          wheat: '#f5deb3',
          white: '#ffffff',
          whitesmoke: '#f5f5f5',
          yellow: '#ffff00',
          yellowgreen: '#9acd32'
        });
        /**
 * These regular expressions are used to build up the patterns for matching
 * viable CSS color strings: fragmenting the regexes in this way increases the
 * legibility and comprehensibility of the code.
 *
 * Note that RGB values of .9 are not parsed by IE, but are supported here for
 * color string consistency.
 */
        var WHITESPACE = (cov_1rav9uxsik.s[61]++, /\s*/); // Match zero or more whitespace characters.
        var INTEGER = (cov_1rav9uxsik.s[62]++, /(\d{1,3})/); // Match integers: 79, 255, etc.
        /**
 * Full color string patterns. The capture groups are necessary.
 */
        var colorPatterns = (cov_1rav9uxsik.s[63]++, {
          // Match colors in format rgb(R, G, B), e.g. rgb(255, 0, 128).
          RGB: new RegExp(['^rgb\\(',
          INTEGER.source,
          ',',
          INTEGER.source,
          ',',
          INTEGER.source,
          '\\)$'].join(WHITESPACE.source), 'i')
        });
        /**
 * Each color stores the color mode and level maxes that were applied at the
 * time of its construction. These are used to interpret the input arguments
 * (at construction and later for that instance of color) and to format the
 * output e.g. when <a href="#/p5/saturation">saturation()</a> is requested.
 *
 * Internally, we store an array representing the ideal RGBA values in floating
 * point form, normalized from 0 to 1. From this we calculate the closest
 * screen color (RGBA levels from 0 to 255) and expose this to the renderer.
 *
 * We also cache normalized, floating-point components of the color in various
 * representations as they are calculated. This is done to prevent repeating a
 * conversion that has already been performed.
 *
 * <a href="#/p5/color">color()</a> is the recommended way to create an instance
 * of this class. However, one can also create a color instace from the constructor
 * using the parameters below.
 *
 * @class p5sound.Color
 * @constructor
 * @param {p5sound} [pInst]                      pointer to p5sound instance.
 *
 * @param {Number[]|String} vals            an array containing the color values
 *                                          for red, green, blue and alpha channel
 *                                          or CSS color.
 */
        cov_1rav9uxsik.s[64]++;
        _main.default.Color =        /*#__PURE__*/
        function () {
          cov_1rav9uxsik.f[10]++;
          function Color(pInst, vals) {
            cov_1rav9uxsik.f[11]++;
            cov_1rav9uxsik.s[65]++;
            _classCallCheck(this, Color); // Record color mode and maxes at time of construction.
            cov_1rav9uxsik.s[66]++;
            this._storeModeAndMaxes(pInst._colorMode, pInst._colorMaxes); // Calculate normalized RGBA values.
            cov_1rav9uxsik.s[67]++;
            if (![constants.RGB].includes(this.mode)) {
              cov_1rav9uxsik.b[24][0]++;
              cov_1rav9uxsik.s[68]++;
              throw new Error(''.concat(this.mode, ' is an invalid colorMode.'));
            } else {
              cov_1rav9uxsik.b[24][1]++;
              cov_1rav9uxsik.s[69]++;
              this._array = Color._parseInputs.apply(this, vals);
            } // Expose closest screen color.

            cov_1rav9uxsik.s[70]++;
            this._calculateLevels();
          } // calculates and stores the closest screen levels

          cov_1rav9uxsik.s[71]++;
          _createClass(Color, [
            {
              key: '_calculateLevels',
              value: function _calculateLevels() {
                cov_1rav9uxsik.f[12]++;
                var array = (cov_1rav9uxsik.s[72]++, this._array); // (loop backwards for performance)
                var levels = (cov_1rav9uxsik.s[73]++, this.levels = new Array(array.length));
                cov_1rav9uxsik.s[74]++;
                for (var i = (cov_1rav9uxsik.s[75]++, array.length - 1); i >= 0; --i) {
                  cov_1rav9uxsik.s[76]++;
                  levels[i] = Math.round(array[i] * 255);
                }
              } // stores the color mode and maxes in this instance of Color
              // for later use (by _parseInputs())

            },
            {
              key: '_storeModeAndMaxes',
              value: function _storeModeAndMaxes(new_mode, new_maxes) {
                cov_1rav9uxsik.f[13]++;
                cov_1rav9uxsik.s[77]++;
                this.mode = new_mode;
                cov_1rav9uxsik.s[78]++;
                this.maxes = new_maxes;
              }
            },
            {
              key: '_getMaxes',
              value: function _getMaxes() {
                cov_1rav9uxsik.f[14]++;
                cov_1rav9uxsik.s[79]++;
                return this.maxes;
              }              /**
    * For a number of different inputs, returns a color formatted as [r, g, b, a]
    * arrays, with each component normalized between 0 and 1.
    *
    * @private
    * @param {Array} [...args] An 'array-like' object that represents a list of
    *                          arguments
    * @return {Number[]}       a color formatted as [r, g, b, a]
    *                          Example:
    *                          input        ==> output
    *                          g            ==> [g, g, g, 255]
    *                          g,a          ==> [g, g, g, a]
    *                          r, g, b      ==> [r, g, b, 255]
    *                          r, g, b, a   ==> [r, g, b, a]
    *                          [g]          ==> [g, g, g, 255]
    *                          [g, a]       ==> [g, g, g, a]
    *                          [r, g, b]    ==> [r, g, b, 255]
    *                          [r, g, b, a] ==> [r, g, b, a]
    * @example
    * <div>
    * <code>
    * // todo
    * //
    * // describe('');
    * </code>
    * </div>
    */

            }
          ], [
            {
              key: '_parseInputs',
              value: function _parseInputs(r, g, b, a) {
                cov_1rav9uxsik.f[15]++;
                var numArgs = (cov_1rav9uxsik.s[80]++, arguments.length);
                var mode = (cov_1rav9uxsik.s[81]++, this.mode);
                var maxes = (cov_1rav9uxsik.s[82]++, this.maxes[mode]);
                var results = (cov_1rav9uxsik.s[83]++, [
                ]);
                var i;
                cov_1rav9uxsik.s[84]++;
                if (numArgs >= 3) {
                  cov_1rav9uxsik.b[25][0]++;
                  cov_1rav9uxsik.s[85]++;
                  // Argument is a list of component values.
                  results[0] = r / maxes[0];
                  cov_1rav9uxsik.s[86]++;
                  results[1] = g / maxes[1];
                  cov_1rav9uxsik.s[87]++;
                  results[2] = b / maxes[2]; // Alpha may be undefined, so default it to 100%.
                  cov_1rav9uxsik.s[88]++;
                  if (typeof a === 'number') {
                    cov_1rav9uxsik.b[26][0]++;
                    cov_1rav9uxsik.s[89]++;
                    results[3] = a / maxes[3];
                  } else {
                    cov_1rav9uxsik.b[26][1]++;
                    cov_1rav9uxsik.s[90]++;
                    results[3] = 1;
                  } // Constrain components to the range [0,1].
                  // (loop backwards for performance)

                  cov_1rav9uxsik.s[91]++;
                  for (i = results.length - 1; i >= 0; --i) {
                    var result = (cov_1rav9uxsik.s[92]++, results[i]);
                    cov_1rav9uxsik.s[93]++;
                    if (result < 0) {
                      cov_1rav9uxsik.b[27][0]++;
                      cov_1rav9uxsik.s[94]++;
                      results[i] = 0;
                    } else {
                      cov_1rav9uxsik.b[27][1]++;
                      cov_1rav9uxsik.s[95]++;
                      if (result > 1) {
                        cov_1rav9uxsik.b[28][0]++;
                        cov_1rav9uxsik.s[96]++;
                        results[i] = 1;
                      } else {
                        cov_1rav9uxsik.b[28][1]++;
                      }
                    }
                  }
                } else {
                  cov_1rav9uxsik.b[25][1]++;
                  cov_1rav9uxsik.s[97]++;
                  if ((cov_1rav9uxsik.b[30][0]++, numArgs === 1) && (cov_1rav9uxsik.b[30][1]++, typeof r === 'string')) {
                    cov_1rav9uxsik.b[29][0]++;
                    var str = (cov_1rav9uxsik.s[98]++, r.trim().toLowerCase()); // Return if string is a named colour.
                    cov_1rav9uxsik.s[99]++;
                    if (namedColors[str]) {
                      cov_1rav9uxsik.b[31][0]++;
                      cov_1rav9uxsik.s[100]++;
                      return Color._parseInputs.call(this, namedColors[str]);
                    } else {
                      cov_1rav9uxsik.b[31][1]++;
                    }
                    cov_1rav9uxsik.s[101]++;
                    if (colorPatterns.RGB.test(str)) {
                      cov_1rav9uxsik.b[32][0]++;
                      cov_1rav9uxsik.s[102]++;
                      // rgb(R,G,B)
                      results = colorPatterns.RGB.exec(str).slice(1).map(function (color) {
                        cov_1rav9uxsik.f[16]++;
                        cov_1rav9uxsik.s[103]++;
                        return color / 255;
                      });
                      cov_1rav9uxsik.s[104]++;
                      results[3] = 1;
                      cov_1rav9uxsik.s[105]++;
                      return results;
                    } else {
                      cov_1rav9uxsik.b[32][1]++;
                    } // Input did not match any CSS color pattern: default to white.

                    cov_1rav9uxsik.s[106]++;
                    results = [
                      1,
                      1,
                      1,
                      1
                    ];
                  } else {
                    cov_1rav9uxsik.b[29][1]++;
                    cov_1rav9uxsik.s[107]++;
                    if (((cov_1rav9uxsik.b[34][0]++, numArgs === 1) || (cov_1rav9uxsik.b[34][1]++, numArgs === 2)) && (cov_1rav9uxsik.b[34][2]++, typeof r === 'number')) {
                      cov_1rav9uxsik.b[33][0]++;
                      cov_1rav9uxsik.s[108]++;
                      // 'Grayscale' mode.
                      /**
             * For HSB and HSL, interpret the gray level as a brightness/lightness
             * value (they are equivalent when chroma is zero). For RGB, normalize the
             * gray level according to the blue maximum.
             */
                      results[0] = r / maxes[2];
                      cov_1rav9uxsik.s[109]++;
                      results[1] = r / maxes[2];
                      cov_1rav9uxsik.s[110]++;
                      results[2] = r / maxes[2]; // Alpha may be undefined, so default it to 100%.
                      cov_1rav9uxsik.s[111]++;
                      if (typeof g === 'number') {
                        cov_1rav9uxsik.b[35][0]++;
                        cov_1rav9uxsik.s[112]++;
                        results[3] = g / maxes[3];
                      } else {
                        cov_1rav9uxsik.b[35][1]++;
                        cov_1rav9uxsik.s[113]++;
                        results[3] = 1;
                      } // Constrain components to the range [0,1].

                      cov_1rav9uxsik.s[114]++;
                      results = results.map(function (value) {
                        cov_1rav9uxsik.f[17]++;
                        cov_1rav9uxsik.s[115]++;
                        return Math.max(Math.min(value, 1), 0);
                      });
                    } else {
                      cov_1rav9uxsik.b[33][1]++;
                      cov_1rav9uxsik.s[116]++;
                      throw new Error(''.concat(arguments, 'is not a valid color representation.'));
                    }
                  }
                }
                cov_1rav9uxsik.s[117]++;
                return results;
              }
            }
          ]);
          cov_1rav9uxsik.s[118]++;
          return Color;
        }();
        var _default = (cov_1rav9uxsik.s[119]++, _main.default.Color);
        cov_1rav9uxsik.s[120]++;
        exports.default = _default;
      },
      {
        '../core/constants': 145,
        '../core/main': 148,
        'core-js/modules/es.array.includes': 119,
        'core-js/modules/es.array.iterator': 120,
        'core-js/modules/es.array.join': 121,
        'core-js/modules/es.array.map': 122,
        'core-js/modules/es.array.slice': 123,
        'core-js/modules/es.object.get-own-property-descriptor': 125,
        'core-js/modules/es.object.to-string': 127,
        'core-js/modules/es.regexp.constructor': 129,
        'core-js/modules/es.regexp.exec': 130,
        'core-js/modules/es.regexp.to-string': 131,
        'core-js/modules/es.string.includes': 132,
        'core-js/modules/es.string.iterator': 133,
        'core-js/modules/es.string.trim': 134,
        'core-js/modules/es.symbol': 137,
        'core-js/modules/es.symbol.description': 135,
        'core-js/modules/es.symbol.iterator': 136,
        'core-js/modules/es.weak-map': 138,
        'core-js/modules/web.dom-collections.iterator': 140
      }
    ],
    144: [
      function (_dereq_, module, exports) {
        'use strict';
        var cov_1dncj9n6we = function () {
          var path = '/Users/montoyamoraga/github/processing/p5.sound.js/src/color/setting.js';
          var hash = 'f5085d3c23b5fbaf35efcb7498a15d52ce9d4ae9';
          var global = new Function('return this') ();
          var gcv = '__coverage__';
          var coverageData = {
            path: '/Users/montoyamoraga/github/processing/p5.sound.js/src/color/setting.js',
            statementMap: {
              '0': {
                start: {
                  line: 3,
                  column: 0
                },
                end: {
                  line: 3,
                  column: 41
                }
              },
              '1': {
                start: {
                  line: 5,
                  column: 0
                },
                end: {
                  line: 7,
                  column: 3
                }
              },
              '2': {
                start: {
                  line: 8,
                  column: 0
                },
                end: {
                  line: 8,
                  column: 25
                }
              },
              '3': {
                start: {
                  line: 10,
                  column: 12
                },
                end: {
                  line: 10,
                  column: 59
                }
              },
              '4': {
                start: {
                  line: 12,
                  column: 0
                },
                end: {
                  line: 12,
                  column: 27
                }
              },
              '5': {
                start: {
                  line: 14,
                  column: 39
                },
                end: {
                  line: 14,
                  column: 93
                }
              },
              '6': {
                start: {
                  line: 181,
                  column: 0
                },
                end: {
                  line: 187,
                  column: 2
                }
              },
              '7': {
                start: {
                  line: 184,
                  column: 2
                },
                end: {
                  line: 184,
                  column: 82
                }
              },
              '8': {
                start: {
                  line: 186,
                  column: 2
                },
                end: {
                  line: 186,
                  column: 14
                }
              },
              '9': {
                start: {
                  line: 189,
                  column: 0
                },
                end: {
                  line: 201,
                  column: 2
                }
              },
              '10': {
                start: {
                  line: 190,
                  column: 11
                },
                end: {
                  line: 190,
                  column: 66
                }
              },
              '11': {
                start: {
                  line: 192,
                  column: 11
                },
                end: {
                  line: 192,
                  column: 66
                }
              },
              '12': {
                start: {
                  line: 194,
                  column: 11
                },
                end: {
                  line: 194,
                  column: 66
                }
              },
              '13': {
                start: {
                  line: 196,
                  column: 11
                },
                end: {
                  line: 196,
                  column: 66
                }
              },
              '14': {
                start: {
                  line: 198,
                  column: 2
                },
                end: {
                  line: 198,
                  column: 39
                }
              },
              '15': {
                start: {
                  line: 200,
                  column: 2
                },
                end: {
                  line: 200,
                  column: 14
                }
              },
              '16': {
                start: {
                  line: 291,
                  column: 0
                },
                end: {
                  line: 301,
                  column: 2
                }
              },
              '17': {
                start: {
                  line: 294,
                  column: 2
                },
                end: {
                  line: 294,
                  column: 48
                }
              },
              '18': {
                start: {
                  line: 296,
                  column: 2
                },
                end: {
                  line: 296,
                  column: 47
                }
              },
              '19': {
                start: {
                  line: 298,
                  column: 2
                },
                end: {
                  line: 298,
                  column: 78
                }
              },
              '20': {
                start: {
                  line: 300,
                  column: 2
                },
                end: {
                  line: 300,
                  column: 14
                }
              },
              '21': {
                start: {
                  line: 386,
                  column: 0
                },
                end: {
                  line: 396,
                  column: 2
                }
              },
              '22': {
                start: {
                  line: 389,
                  column: 2
                },
                end: {
                  line: 389,
                  column: 50
                }
              },
              '23': {
                start: {
                  line: 391,
                  column: 2
                },
                end: {
                  line: 391,
                  column: 49
                }
              },
              '24': {
                start: {
                  line: 393,
                  column: 2
                },
                end: {
                  line: 393,
                  column: 80
                }
              },
              '25': {
                start: {
                  line: 395,
                  column: 2
                },
                end: {
                  line: 395,
                  column: 14
                }
              },
              '26': {
                start: {
                  line: 398,
                  column: 15
                },
                end: {
                  line: 398,
                  column: 28
                }
              },
              '27': {
                start: {
                  line: 399,
                  column: 0
                },
                end: {
                  line: 399,
                  column: 27
                }
              }
            },
            fnMap: {
              '0': {
                name: '_interopRequireDefault',
                decl: {
                  start: {
                    line: 14,
                    column: 9
                  },
                  end: {
                    line: 14,
                    column: 31
                  }
                },
                loc: {
                  start: {
                    line: 14,
                    column: 37
                  },
                  end: {
                    line: 14,
                    column: 95
                  }
                },
                line: 14
              },
              '1': {
                name: '(anonymous_1)',
                decl: {
                  start: {
                    line: 181,
                    column: 37
                  },
                  end: {
                    line: 181,
                    column: 38
                  }
                },
                loc: {
                  start: {
                    line: 181,
                    column: 49
                  },
                  end: {
                    line: 187,
                    column: 1
                  }
                },
                line: 181
              },
              '2': {
                name: '(anonymous_2)',
                decl: {
                  start: {
                    line: 189,
                    column: 32
                  },
                  end: {
                    line: 189,
                    column: 33
                  }
                },
                loc: {
                  start: {
                    line: 189,
                    column: 44
                  },
                  end: {
                    line: 201,
                    column: 1
                  }
                },
                line: 189
              },
              '3': {
                name: '(anonymous_3)',
                decl: {
                  start: {
                    line: 291,
                    column: 31
                  },
                  end: {
                    line: 291,
                    column: 32
                  }
                },
                loc: {
                  start: {
                    line: 291,
                    column: 43
                  },
                  end: {
                    line: 301,
                    column: 1
                  }
                },
                line: 291
              },
              '4': {
                name: '(anonymous_4)',
                decl: {
                  start: {
                    line: 386,
                    column: 33
                  },
                  end: {
                    line: 386,
                    column: 34
                  }
                },
                loc: {
                  start: {
                    line: 386,
                    column: 45
                  },
                  end: {
                    line: 396,
                    column: 1
                  }
                },
                line: 386
              }
            },
            branchMap: {
              '0': {
                loc: {
                  start: {
                    line: 14,
                    column: 46
                  },
                  end: {
                    line: 14,
                    column: 92
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 14,
                      column: 70
                    },
                    end: {
                      line: 14,
                      column: 73
                    }
                  },
                  {
                    start: {
                      line: 14,
                      column: 76
                    },
                    end: {
                      line: 14,
                      column: 92
                    }
                  }
                ],
                line: 14
              },
              '1': {
                loc: {
                  start: {
                    line: 14,
                    column: 46
                  },
                  end: {
                    line: 14,
                    column: 67
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 14,
                      column: 46
                    },
                    end: {
                      line: 14,
                      column: 49
                    }
                  },
                  {
                    start: {
                      line: 14,
                      column: 53
                    },
                    end: {
                      line: 14,
                      column: 67
                    }
                  }
                ],
                line: 14
              },
              '2': {
                loc: {
                  start: {
                    line: 190,
                    column: 11
                  },
                  end: {
                    line: 190,
                    column: 66
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 190,
                      column: 12
                    },
                    end: {
                      line: 190,
                      column: 60
                    }
                  },
                  {
                    start: {
                      line: 190,
                      column: 65
                    },
                    end: {
                      line: 190,
                      column: 66
                    }
                  }
                ],
                line: 190
              },
              '3': {
                loc: {
                  start: {
                    line: 190,
                    column: 12
                  },
                  end: {
                    line: 190,
                    column: 60
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 190,
                      column: 36
                    },
                    end: {
                      line: 190,
                      column: 45
                    }
                  },
                  {
                    start: {
                      line: 190,
                      column: 48
                    },
                    end: {
                      line: 190,
                      column: 60
                    }
                  }
                ],
                line: 190
              },
              '4': {
                loc: {
                  start: {
                    line: 192,
                    column: 11
                  },
                  end: {
                    line: 192,
                    column: 66
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 192,
                      column: 12
                    },
                    end: {
                      line: 192,
                      column: 60
                    }
                  },
                  {
                    start: {
                      line: 192,
                      column: 65
                    },
                    end: {
                      line: 192,
                      column: 66
                    }
                  }
                ],
                line: 192
              },
              '5': {
                loc: {
                  start: {
                    line: 192,
                    column: 12
                  },
                  end: {
                    line: 192,
                    column: 60
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 192,
                      column: 36
                    },
                    end: {
                      line: 192,
                      column: 45
                    }
                  },
                  {
                    start: {
                      line: 192,
                      column: 48
                    },
                    end: {
                      line: 192,
                      column: 60
                    }
                  }
                ],
                line: 192
              },
              '6': {
                loc: {
                  start: {
                    line: 194,
                    column: 11
                  },
                  end: {
                    line: 194,
                    column: 66
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 194,
                      column: 12
                    },
                    end: {
                      line: 194,
                      column: 60
                    }
                  },
                  {
                    start: {
                      line: 194,
                      column: 65
                    },
                    end: {
                      line: 194,
                      column: 66
                    }
                  }
                ],
                line: 194
              },
              '7': {
                loc: {
                  start: {
                    line: 194,
                    column: 12
                  },
                  end: {
                    line: 194,
                    column: 60
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 194,
                      column: 36
                    },
                    end: {
                      line: 194,
                      column: 45
                    }
                  },
                  {
                    start: {
                      line: 194,
                      column: 48
                    },
                    end: {
                      line: 194,
                      column: 60
                    }
                  }
                ],
                line: 194
              },
              '8': {
                loc: {
                  start: {
                    line: 196,
                    column: 11
                  },
                  end: {
                    line: 196,
                    column: 66
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 196,
                      column: 12
                    },
                    end: {
                      line: 196,
                      column: 60
                    }
                  },
                  {
                    start: {
                      line: 196,
                      column: 65
                    },
                    end: {
                      line: 196,
                      column: 66
                    }
                  }
                ],
                line: 196
              },
              '9': {
                loc: {
                  start: {
                    line: 196,
                    column: 12
                  },
                  end: {
                    line: 196,
                    column: 60
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 196,
                      column: 36
                    },
                    end: {
                      line: 196,
                      column: 45
                    }
                  },
                  {
                    start: {
                      line: 196,
                      column: 48
                    },
                    end: {
                      line: 196,
                      column: 60
                    }
                  }
                ],
                line: 196
              }
            },
            s: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0,
              '10': 0,
              '11': 0,
              '12': 0,
              '13': 0,
              '14': 0,
              '15': 0,
              '16': 0,
              '17': 0,
              '18': 0,
              '19': 0,
              '20': 0,
              '21': 0,
              '22': 0,
              '23': 0,
              '24': 0,
              '25': 0,
              '26': 0,
              '27': 0
            },
            f: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0
            },
            b: {
              '0': [
                0,
                0
              ],
              '1': [
                0,
                0
              ],
              '2': [
                0,
                0
              ],
              '3': [
                0,
                0
              ],
              '4': [
                0,
                0
              ],
              '5': [
                0,
                0
              ],
              '6': [
                0,
                0
              ],
              '7': [
                0,
                0
              ],
              '8': [
                0,
                0
              ],
              '9': [
                0,
                0
              ]
            },
            _coverageSchema: '43e27e138ebf9cfc5966b082cf9a028302ed4184',
            hash: 'f5085d3c23b5fbaf35efcb7498a15d52ce9d4ae9'
          };
          var coverage = global[gcv] || (global[gcv] = {
          });
          if (coverage[path] && coverage[path].hash === hash) {
            return coverage[path];
          }
          return coverage[path] = coverageData;
        }();
        _dereq_('core-js/modules/es.array.fill');
        cov_1dncj9n6we.s[0]++;
        _dereq_('core-js/modules/es.array.fill');
        cov_1dncj9n6we.s[1]++;
        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        cov_1dncj9n6we.s[2]++;
        exports.default = void 0;
        var _main = (cov_1dncj9n6we.s[3]++, _interopRequireDefault(_dereq_('../core/main')));
        cov_1dncj9n6we.s[4]++;
        _dereq_('./p5sound.Color');
        function _interopRequireDefault(obj) {
          cov_1dncj9n6we.f[0]++;
          cov_1dncj9n6we.s[5]++;
          return (cov_1dncj9n6we.b[1][0]++, obj) && (cov_1dncj9n6we.b[1][1]++, obj.__esModule) ? (cov_1dncj9n6we.b[0][0]++, obj) : (cov_1dncj9n6we.b[0][1]++, {
          default:
            obj
          });
        }        /**
 * @module Color
 * @submodule Setting
 * @for p5
 * @requires core
 * @requires constants
 */
        /**
 * The <a href="#/p5/background">background()</a> function sets the color used
 * for the background of the p5sound.js canvas. The default background is transparent.
 * This function is typically used within <a href="#/p5/draw">draw()</a> to clear
 * the display window at the beginning of each frame, but it can be used inside
 * <a href="#/p5/setup">setup()</a> to set the background on the first frame of
 * animation or if the background need only be set once.
 *
 * The color is either specified in terms of the RGB, HSB, or HSL color depending
 * on the current <a href="#/p5/colorMode">colorMode</a>. (The default color space
 * is RGB, with each value in the range from 0 to 255). The alpha range by default
 * is also 0 to 255.<br><br>
 *
 * If a single string argument is provided, RGB, RGBA and Hex CSS color strings
 * and all named color strings are supported. In this case, an alpha number
 * value as a second argument is not supported, the RGBA form should be used.
 *
 * A <a href="#/p5sound.Color">p5sound.Color</a> object can also be provided to set the background color.
 *
 *
 * @method background
 * @param {p5sound.Color} color  any value created by the <a href="#/p5/color">color()</a> function
 * @chainable
 *
 * @example
 * <div>
 * <code>
 * // Grayscale integer value
 * background(51);
 * describe('canvas with darkest charcoal grey background');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // R, G & B integer values
 * background(255, 204, 0);
 * describe('canvas with yellow background');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // H, S & B integer values
 * colorMode(HSB);
 * background(255, 204, 100);
 * describe('canvas with royal blue background');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // Named SVG/CSS color string
 * background('red');
 * describe('canvas with red background');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // three-digit hexadecimal RGB notation
 * background('#fae');
 * describe('canvas with pink background');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // six-digit hexadecimal RGB notation
 * background('#222222');
 * describe('canvas with black background');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // integer RGB notation
 * background('rgb(0,255,0)');
 * describe('canvas with bright green background');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // integer RGBA notation
 * background('rgba(0,255,0, 0.25)');
 * describe('canvas with soft green background');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // percentage RGB notation
 * background('rgb(100%,0%,10%)');
 * describe('canvas with red background');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // percentage RGBA notation
 * background('rgba(100%,0%,100%,0.5)');
 * describe('canvas with light purple background');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // p5sound Color object
 * background(color(0, 0, 255));
 * describe('canvas with blue background');
 * </code>
 * </div>
 *
 */
        /**
 * @method background
 * @param {String} colorstring color string, possible formats include: integer
 *                         rgb() or rgba(), percentage rgb() or rgba(),
 *                         3-digit hex, 6-digit hex
 * @param {Number} [a]         opacity of the background relative to current
 *                             color range (default is 0-255)
 * @chainable
 */
        /**
 * @method background
 * @param {Number} gray   specifies a value between white and black
 * @param {Number} [a]
 * @chainable
 */
        /**
 * @method background
 * @param {Number} v1     red or hue value (depending on the current color
 *                        mode)
 * @param {Number} v2     green or saturation value (depending on the current
 *                        color mode)
 * @param {Number} v3     blue or brightness value (depending on the current
 *                        color mode)
 * @param  {Number} [a]
 * @chainable
 */
        /**
 * @method background
 * @param  {Number[]}      values  an array containing the red, green, blue
 *                                 and alpha components of the color
 * @chainable
 */
        /**
 * @method background
 * @param  {Number}  [a]
 * @chainable
 */

        cov_1dncj9n6we.s[6]++;
        _main.default.prototype.background = function () {
          cov_1dncj9n6we.f[1]++;
          var _this$_renderer;
          cov_1dncj9n6we.s[7]++;
          (_this$_renderer = this._renderer).background.apply(_this$_renderer, arguments);
          cov_1dncj9n6we.s[8]++;
          return this;
        };
        cov_1dncj9n6we.s[9]++;
        _main.default.prototype.clear = function () {
          cov_1dncj9n6we.f[2]++;
          var _r = (cov_1dncj9n6we.s[10]++, (cov_1dncj9n6we.b[2][0]++, arguments.length <= 0 ? (cov_1dncj9n6we.b[3][0]++, undefined) : (cov_1dncj9n6we.b[3][1]++, arguments[0])) || (cov_1dncj9n6we.b[2][1]++, 0));
          var _g = (cov_1dncj9n6we.s[11]++, (cov_1dncj9n6we.b[4][0]++, arguments.length <= 1 ? (cov_1dncj9n6we.b[5][0]++, undefined) : (cov_1dncj9n6we.b[5][1]++, arguments[1])) || (cov_1dncj9n6we.b[4][1]++, 0));
          var _b = (cov_1dncj9n6we.s[12]++, (cov_1dncj9n6we.b[6][0]++, arguments.length <= 2 ? (cov_1dncj9n6we.b[7][0]++, undefined) : (cov_1dncj9n6we.b[7][1]++, arguments[2])) || (cov_1dncj9n6we.b[6][1]++, 0));
          var _a = (cov_1dncj9n6we.s[13]++, (cov_1dncj9n6we.b[8][0]++, arguments.length <= 3 ? (cov_1dncj9n6we.b[9][0]++, undefined) : (cov_1dncj9n6we.b[9][1]++, arguments[3])) || (cov_1dncj9n6we.b[8][1]++, 0));
          cov_1dncj9n6we.s[14]++;
          this._renderer.clear(_r, _g, _b, _a);
          cov_1dncj9n6we.s[15]++;
          return this;
        };
        /**
 * Sets the color used to fill shapes. For example, if you run fill(204, 102, 0),
 * all shapes drawn after the fill command will be filled with the color orange.
 * This color is either specified in terms of the RGB or HSB color depending on
 * the current <a href="#/p5/colorMode">colorMode()</a>. (The default color space
 * is RGB, with each value in the range from 0 to 255). The alpha range by default
 * is also 0 to 255.
 *
 * If a single string argument is provided, RGB, RGBA and Hex CSS color strings
 * and all named color strings are supported. In this case, an alpha number
 * value as a second argument is not supported, the RGBA form should be used.
 *
 * A <a href="#/p5sound.Color">p5sound.Color</a> object can also be provided to set the fill color.
 *
 * @method fill
 * @param  {Number}        v1      red or hue value relative to
 *                                 the current color range
 * @param  {Number}        v2      green or saturation value
 *                                 relative to the current color range
 * @param  {Number}        v3      blue or brightness value
 *                                 relative to the current color range
 * @param  {Number}        [alpha]
 * @chainable
 * @example
 * <div>
 * <code>
 * // Grayscale integer value
 * fill(51);
 * rect(20, 20, 60, 60);
 * describe('dark charcoal grey rect with black outline in center of canvas');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // R, G & B integer values
 * fill(255, 204, 0);
 * rect(20, 20, 60, 60);
 * describe('yellow rect with black outline in center of canvas');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // integer RGB notation
 * fill('rgb(0,255,0)');
 * rect(20, 20, 60, 60);
 * describe('bright green rect with black outline in center of canvas');
 * </code>
 * </div>
 *
 *
 * <div>
 * <code>
 * // p5sound Color object
 * fill(color(0, 0, 255));
 * rect(20, 20, 60, 60);
 * describe('blue rect with black outline in center of canvas');
 * </code>
 * </div>
 */
        /**
 * @method fill
 * @param  {String}        value   a color string
 * @chainable
 */
        /**
 * @method fill
 * @param  {Number}        gray   a gray value
 * @param  {Number}        [alpha]
 * @chainable
 */
        /**
 * @method fill
 * @param  {Number[]}      values  an array containing the red,green,blue &
 *                                 and alpha components of the color
 * @chainable
 */
        /**
 * @method fill
 * @param  {p5sound.Color}      color   the fill color
 * @chainable
 */
        cov_1dncj9n6we.s[16]++;
        _main.default.prototype.fill = function () {
          cov_1dncj9n6we.f[3]++;
          var _this$_renderer2;
          cov_1dncj9n6we.s[17]++;
          this._renderer._setProperty('_fillSet', true);
          cov_1dncj9n6we.s[18]++;
          this._renderer._setProperty('_doFill', true);
          cov_1dncj9n6we.s[19]++;
          (_this$_renderer2 = this._renderer).fill.apply(_this$_renderer2, arguments);
          cov_1dncj9n6we.s[20]++;
          return this;
        };
        /**
 * Sets the color used to draw lines and borders around shapes. This color
 * is either specified in terms of the RGB or HSB color depending on the
 * current <a href="#/p5/colorMode">colorMode()</a> (the default color space
 * is RGB, with each value in the range from 0 to 255). The alpha range by
 * default is also 0 to 255.
 *
 * If a single string argument is provided, RGB, RGBA and Hex CSS color
 * strings and all named color strings are supported. In this case, an alpha
 * number value as a second argument is not supported, the RGBA form should be
 * used.
 *
 * A <a href="#/p5sound.Color">p5sound.Color</a> object can also be provided to set the stroke color.
 *
 * @method stroke
 * @param  {Number}        v1      red or hue value relative to
 *                                 the current color range
 * @param  {Number}        v2      green or saturation value
 *                                 relative to the current color range
 * @param  {Number}        v3      blue or brightness value
 *                                 relative to the current color range
 * @param  {Number}        [alpha]
 * @chainable
 *
 * @example
 * <div>
 * <code>
 * // Grayscale integer value
 * strokeWeight(4);
 * stroke(51);
 * rect(20, 20, 60, 60);
 * describe('White rect at center with dark charcoal grey outline.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // R, G & B integer values
 * stroke(255, 204, 0);
 * strokeWeight(4);
 * rect(20, 20, 60, 60);
 * describe('White rect at center with yellow outline.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // integer RGB notation
 * stroke('rgb(0,255,0)');
 * strokeWeight(4);
 * rect(20, 20, 60, 60);
 * describe('White rect at center with bright green outline.');
 * </code>
 * </div>
 *
 */
        /**
 * @method stroke
 * @param  {String}        value   a color string
 * @chainable
 */
        /**
 * @method stroke
 * @param  {Number}        gray   a gray value
 * @param  {Number}        [alpha]
 * @chainable
 */
        /**
 * @method stroke
 * @param  {Number[]}      values  an array containing the red,green,blue &
 *                                 and alpha components of the color
 * @chainable
 */
        /**
 * @method stroke
 * @param  {p5sound.Color}      color   the stroke color
 * @chainable
 */
        cov_1dncj9n6we.s[21]++;
        _main.default.prototype.stroke = function () {
          cov_1dncj9n6we.f[4]++;
          var _this$_renderer3;
          cov_1dncj9n6we.s[22]++;
          this._renderer._setProperty('_strokeSet', true);
          cov_1dncj9n6we.s[23]++;
          this._renderer._setProperty('_doStroke', true);
          cov_1dncj9n6we.s[24]++;
          (_this$_renderer3 = this._renderer).stroke.apply(_this$_renderer3, arguments);
          cov_1dncj9n6we.s[25]++;
          return this;
        };
        var _default = (cov_1dncj9n6we.s[26]++, _main.default);
        cov_1dncj9n6we.s[27]++;
        exports.default = _default;
      },
      {
        '../core/main': 148,
        './p5sound.Color': 143,
        'core-js/modules/es.array.fill': 116
      }
    ],
    145: [
      function (_dereq_, module, exports) {
        'use strict';
        var cov_ntybqlnsd = function () {
          var path = '/Users/montoyamoraga/github/processing/p5.sound.js/src/core/constants.js';
          var hash = '1809d5e53007275424393347c4f274d189d67f7e';
          var global = new Function('return this') ();
          var gcv = '__coverage__';
          var coverageData = {
            path: '/Users/montoyamoraga/github/processing/p5.sound.js/src/core/constants.js',
            statementMap: {
              '0': {
                start: {
                  line: 3,
                  column: 0
                },
                end: {
                  line: 5,
                  column: 3
                }
              },
              '1': {
                start: {
                  line: 6,
                  column: 0
                },
                end: {
                  line: 6,
                  column: 366
                }
              },
              '2': {
                start: {
                  line: 19,
                  column: 14
                },
                end: {
                  line: 19,
                  column: 74
                }
              },
              '3': {
                start: {
                  line: 27,
                  column: 0
                },
                end: {
                  line: 27,
                  column: 26
                }
              },
              '4': {
                start: {
                  line: 28,
                  column: 10
                },
                end: {
                  line: 28,
                  column: 15
                }
              },
              '5': {
                start: {
                  line: 35,
                  column: 0
                },
                end: {
                  line: 35,
                  column: 18
                }
              },
              '6': {
                start: {
                  line: 36,
                  column: 10
                },
                end: {
                  line: 36,
                  column: 15
                }
              },
              '7': {
                start: {
                  line: 44,
                  column: 0
                },
                end: {
                  line: 44,
                  column: 18
                }
              },
              '8': {
                start: {
                  line: 45,
                  column: 13
                },
                end: {
                  line: 45,
                  column: 21
                }
              },
              '9': {
                start: {
                  line: 51,
                  column: 0
                },
                end: {
                  line: 51,
                  column: 24
                }
              },
              '10': {
                start: {
                  line: 52,
                  column: 16
                },
                end: {
                  line: 52,
                  column: 27
                }
              },
              '11': {
                start: {
                  line: 58,
                  column: 0
                },
                end: {
                  line: 58,
                  column: 30
                }
              },
              '12': {
                start: {
                  line: 59,
                  column: 13
                },
                end: {
                  line: 59,
                  column: 21
                }
              },
              '13': {
                start: {
                  line: 65,
                  column: 0
                },
                end: {
                  line: 65,
                  column: 24
                }
              },
              '14': {
                start: {
                  line: 66,
                  column: 12
                },
                end: {
                  line: 66,
                  column: 19
                }
              },
              '15': {
                start: {
                  line: 73,
                  column: 0
                },
                end: {
                  line: 73,
                  column: 22
                }
              },
              '16': {
                start: {
                  line: 74,
                  column: 13
                },
                end: {
                  line: 74,
                  column: 21
                }
              },
              '17': {
                start: {
                  line: 80,
                  column: 0
                },
                end: {
                  line: 80,
                  column: 24
                }
              },
              '18': {
                start: {
                  line: 81,
                  column: 11
                },
                end: {
                  line: 81,
                  column: 17
                }
              },
              '19': {
                start: {
                  line: 87,
                  column: 0
                },
                end: {
                  line: 87,
                  column: 20
                }
              },
              '20': {
                start: {
                  line: 88,
                  column: 14
                },
                end: {
                  line: 88,
                  column: 23
                }
              },
              '21': {
                start: {
                  line: 94,
                  column: 0
                },
                end: {
                  line: 94,
                  column: 26
                }
              },
              '22': {
                start: {
                  line: 95,
                  column: 16
                },
                end: {
                  line: 95,
                  column: 27
                }
              },
              '23': {
                start: {
                  line: 103,
                  column: 0
                },
                end: {
                  line: 103,
                  column: 30
                }
              },
              '24': {
                start: {
                  line: 104,
                  column: 12
                },
                end: {
                  line: 104,
                  column: 19
                }
              },
              '25': {
                start: {
                  line: 112,
                  column: 0
                },
                end: {
                  line: 112,
                  column: 22
                }
              },
              '26': {
                start: {
                  line: 113,
                  column: 14
                },
                end: {
                  line: 113,
                  column: 23
                }
              },
              '27': {
                start: {
                  line: 119,
                  column: 0
                },
                end: {
                  line: 119,
                  column: 26
                }
              },
              '28': {
                start: {
                  line: 120,
                  column: 13
                },
                end: {
                  line: 120,
                  column: 21
                }
              },
              '29': {
                start: {
                  line: 126,
                  column: 0
                },
                end: {
                  line: 126,
                  column: 24
                }
              },
              '30': {
                start: {
                  line: 127,
                  column: 12
                },
                end: {
                  line: 127,
                  column: 19
                }
              },
              '31': {
                start: {
                  line: 133,
                  column: 0
                },
                end: {
                  line: 133,
                  column: 22
                }
              },
              '32': {
                start: {
                  line: 134,
                  column: 13
                },
                end: {
                  line: 134,
                  column: 21
                }
              },
              '33': {
                start: {
                  line: 141,
                  column: 0
                },
                end: {
                  line: 141,
                  column: 24
                }
              },
              '34': {
                start: {
                  line: 142,
                  column: 16
                },
                end: {
                  line: 142,
                  column: 27
                }
              },
              '35': {
                start: {
                  line: 148,
                  column: 0
                },
                end: {
                  line: 148,
                  column: 30
                }
              },
              '36': {
                start: {
                  line: 149,
                  column: 15
                },
                end: {
                  line: 149,
                  column: 25
                }
              },
              '37': {
                start: {
                  line: 151,
                  column: 0
                },
                end: {
                  line: 151,
                  column: 28
                }
              },
              '38': {
                start: {
                  line: 152,
                  column: 22
                },
                end: {
                  line: 152,
                  column: 31
                }
              },
              '39': {
                start: {
                  line: 153,
                  column: 0
                },
                end: {
                  line: 153,
                  column: 42
                }
              },
              '40': {
                start: {
                  line: 154,
                  column: 20
                },
                end: {
                  line: 154,
                  column: 29
                }
              },
              '41': {
                start: {
                  line: 155,
                  column: 0
                },
                end: {
                  line: 155,
                  column: 38
                }
              }
            },
            fnMap: {
            },
            branchMap: {
            },
            s: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0,
              '10': 0,
              '11': 0,
              '12': 0,
              '13': 0,
              '14': 0,
              '15': 0,
              '16': 0,
              '17': 0,
              '18': 0,
              '19': 0,
              '20': 0,
              '21': 0,
              '22': 0,
              '23': 0,
              '24': 0,
              '25': 0,
              '26': 0,
              '27': 0,
              '28': 0,
              '29': 0,
              '30': 0,
              '31': 0,
              '32': 0,
              '33': 0,
              '34': 0,
              '35': 0,
              '36': 0,
              '37': 0,
              '38': 0,
              '39': 0,
              '40': 0,
              '41': 0
            },
            f: {
            },
            b: {
            },
            _coverageSchema: '43e27e138ebf9cfc5966b082cf9a028302ed4184',
            hash: '1809d5e53007275424393347c4f274d189d67f7e'
          };
          var coverage = global[gcv] || (global[gcv] = {
          });
          if (coverage[path] && coverage[path].hash === hash) {
            return coverage[path];
          }
          return coverage[path] = coverageData;
        }();
        cov_ntybqlnsd.s[0]++;
        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        cov_ntybqlnsd.s[1]++;
        exports._DEFAULT_FILL = exports._DEFAULT_STROKE = exports.PORTRAIT = exports.LANDSCAPE = exports.MIRROR = exports.CLAMP = exports.REPEAT = exports.NEAREST = exports.IMAGE = exports.IMMEDIATE = exports.TEXTURE = exports.FILL = exports.STROKE = exports.CURVE = exports.BEZIER = exports.QUADRATIC = exports.LINEAR = exports.RGB = exports.P2D = exports.VERSION = void 0;
        /**
 * @module Constants
 * @submodule Constants
 * @for p5
 */
        /**
 * Version of this p5sound.js.
 * @property {String} VERSION
 * @final
 */
        var VERSION = (cov_ntybqlnsd.s[2]++, '0.0.1'); // RENDERER
        /**
 * The default, two-dimensional renderer.
 * @property {String} P2D
 * @final
 */
        cov_ntybqlnsd.s[3]++;
        exports.VERSION = VERSION;
        var P2D = (cov_ntybqlnsd.s[4]++, 'p2d'); // COLOR
        /**
 * @property {String} RGB
 * @final
 */
        cov_ntybqlnsd.s[5]++;
        exports.P2D = P2D;
        var RGB = (cov_ntybqlnsd.s[6]++, 'rgb'); // DOM EXTENSION
        // VERTICES
        /**
 * @property {String} LINEAR
 * @final
 */
        cov_ntybqlnsd.s[7]++;
        exports.RGB = RGB;
        var LINEAR = (cov_ntybqlnsd.s[8]++, 'linear');
        /**
 * @property {String} QUADRATIC
 * @final
 */
        cov_ntybqlnsd.s[9]++;
        exports.LINEAR = LINEAR;
        var QUADRATIC = (cov_ntybqlnsd.s[10]++, 'quadratic');
        /**
 * @property {String} BEZIER
 * @final
 */
        cov_ntybqlnsd.s[11]++;
        exports.QUADRATIC = QUADRATIC;
        var BEZIER = (cov_ntybqlnsd.s[12]++, 'bezier');
        /**
 * @property {String} CURVE
 * @final
 */
        cov_ntybqlnsd.s[13]++;
        exports.BEZIER = BEZIER;
        var CURVE = (cov_ntybqlnsd.s[14]++, 'curve'); // WEBGL DRAWMODES
        /**
 * @property {String} STROKE
 * @final
 */
        cov_ntybqlnsd.s[15]++;
        exports.CURVE = CURVE;
        var STROKE = (cov_ntybqlnsd.s[16]++, 'stroke');
        /**
 * @property {String} FILL
 * @final
 */
        cov_ntybqlnsd.s[17]++;
        exports.STROKE = STROKE;
        var FILL = (cov_ntybqlnsd.s[18]++, 'fill');
        /**
 * @property {String} TEXTURE
 * @final
 */
        cov_ntybqlnsd.s[19]++;
        exports.FILL = FILL;
        var TEXTURE = (cov_ntybqlnsd.s[20]++, 'texture');
        /**
 * @property {String} IMMEDIATE
 * @final
 */
        cov_ntybqlnsd.s[21]++;
        exports.TEXTURE = TEXTURE;
        var IMMEDIATE = (cov_ntybqlnsd.s[22]++, 'immediate'); // WEBGL TEXTURE MODE
        // NORMAL already exists for typography
        /**
 * @property {String} IMAGE
 * @final
 */
        cov_ntybqlnsd.s[23]++;
        exports.IMMEDIATE = IMMEDIATE;
        var IMAGE = (cov_ntybqlnsd.s[24]++, 'image'); // WEBGL TEXTURE WRAP AND FILTERING
        // LINEAR already exists above
        /**
 * @property {String} NEAREST
 * @final
 */
        cov_ntybqlnsd.s[25]++;
        exports.IMAGE = IMAGE;
        var NEAREST = (cov_ntybqlnsd.s[26]++, 'nearest');
        /**
 * @property {String} REPEAT
 * @final
 */
        cov_ntybqlnsd.s[27]++;
        exports.NEAREST = NEAREST;
        var REPEAT = (cov_ntybqlnsd.s[28]++, 'repeat');
        /**
 * @property {String} CLAMP
 * @final
 */
        cov_ntybqlnsd.s[29]++;
        exports.REPEAT = REPEAT;
        var CLAMP = (cov_ntybqlnsd.s[30]++, 'clamp');
        /**
 * @property {String} MIRROR
 * @final
 */
        cov_ntybqlnsd.s[31]++;
        exports.CLAMP = CLAMP;
        var MIRROR = (cov_ntybqlnsd.s[32]++, 'mirror'); // DEVICE-ORIENTATION
        /**
 * @property {String} LANDSCAPE
 * @final
 */
        cov_ntybqlnsd.s[33]++;
        exports.MIRROR = MIRROR;
        var LANDSCAPE = (cov_ntybqlnsd.s[34]++, 'landscape');
        /**
 * @property {String} PORTRAIT
 * @final
 */
        cov_ntybqlnsd.s[35]++;
        exports.LANDSCAPE = LANDSCAPE;
        var PORTRAIT = (cov_ntybqlnsd.s[36]++, 'portrait'); // DEFAULTS
        cov_ntybqlnsd.s[37]++;
        exports.PORTRAIT = PORTRAIT;
        var _DEFAULT_STROKE = (cov_ntybqlnsd.s[38]++, '#000000');
        cov_ntybqlnsd.s[39]++;
        exports._DEFAULT_STROKE = _DEFAULT_STROKE;
        var _DEFAULT_FILL = (cov_ntybqlnsd.s[40]++, '#FFFFFF');
        cov_ntybqlnsd.s[41]++;
        exports._DEFAULT_FILL = _DEFAULT_FILL;
      },
      {
      }
    ],
    146: [
      function (_dereq_, module, exports) {
        'use strict';
        var cov_2nj1dx0f7r = function () {
          var path = '/Users/montoyamoraga/github/processing/p5.sound.js/src/core/environment.js';
          var hash = 'c3cb61164f02054a802ca74661dc31aef5e6d790';
          var global = new Function('return this') ();
          var gcv = '__coverage__';
          var coverageData = {
            path: '/Users/montoyamoraga/github/processing/p5.sound.js/src/core/environment.js',
            statementMap: {
              '0': {
                start: {
                  line: 3,
                  column: 24
                },
                end: {
                  line: 3,
                  column: 328
                }
              },
              '1': {
                start: {
                  line: 3,
                  column: 99
                },
                end: {
                  line: 3,
                  column: 154
                }
              },
              '2': {
                start: {
                  line: 3,
                  column: 133
                },
                end: {
                  line: 3,
                  column: 151
                }
              },
              '3': {
                start: {
                  line: 3,
                  column: 164
                },
                end: {
                  line: 3,
                  column: 326
                }
              },
              '4': {
                start: {
                  line: 3,
                  column: 198
                },
                end: {
                  line: 3,
                  column: 323
                }
              },
              '5': {
                start: {
                  line: 3,
                  column: 329
                },
                end: {
                  line: 3,
                  column: 349
                }
              },
              '6': {
                start: {
                  line: 5,
                  column: 0
                },
                end: {
                  line: 5,
                  column: 43
                }
              },
              '7': {
                start: {
                  line: 7,
                  column: 0
                },
                end: {
                  line: 7,
                  column: 45
                }
              },
              '8': {
                start: {
                  line: 9,
                  column: 0
                },
                end: {
                  line: 9,
                  column: 46
                }
              },
              '9': {
                start: {
                  line: 11,
                  column: 0
                },
                end: {
                  line: 13,
                  column: 3
                }
              },
              '10': {
                start: {
                  line: 14,
                  column: 0
                },
                end: {
                  line: 14,
                  column: 25
                }
              },
              '11': {
                start: {
                  line: 16,
                  column: 12
                },
                end: {
                  line: 16,
                  column: 53
                }
              },
              '12': {
                start: {
                  line: 18,
                  column: 8
                },
                end: {
                  line: 18,
                  column: 55
                }
              },
              '13': {
                start: {
                  line: 20,
                  column: 38
                },
                end: {
                  line: 20,
                  column: 85
                }
              },
              '14': {
                start: {
                  line: 20,
                  column: 73
                },
                end: {
                  line: 20,
                  column: 85
                }
              },
              '15': {
                start: {
                  line: 20,
                  column: 98
                },
                end: {
                  line: 20,
                  column: 111
                }
              },
              '16': {
                start: {
                  line: 20,
                  column: 113
                },
                end: {
                  line: 20,
                  column: 194
                }
              },
              '17': {
                start: {
                  line: 20,
                  column: 178
                },
                end: {
                  line: 20,
                  column: 191
                }
              },
              '18': {
                start: {
                  line: 20,
                  column: 195
                },
                end: {
                  line: 20,
                  column: 208
                }
              },
              '19': {
                start: {
                  line: 22,
                  column: 40
                },
                end: {
                  line: 22,
                  column: 82
                }
              },
              '20': {
                start: {
                  line: 22,
                  column: 69
                },
                end: {
                  line: 22,
                  column: 80
                }
              },
              '21': {
                start: {
                  line: 22,
                  column: 83
                },
                end: {
                  line: 22,
                  column: 187
                }
              },
              '22': {
                start: {
                  line: 22,
                  column: 161
                },
                end: {
                  line: 22,
                  column: 185
                }
              },
              '23': {
                start: {
                  line: 22,
                  column: 200
                },
                end: {
                  line: 22,
                  column: 226
                }
              },
              '24': {
                start: {
                  line: 22,
                  column: 228
                },
                end: {
                  line: 22,
                  column: 283
                }
              },
              '25': {
                start: {
                  line: 22,
                  column: 259
                },
                end: {
                  line: 22,
                  column: 281
                }
              },
              '26': {
                start: {
                  line: 22,
                  column: 297
                },
                end: {
                  line: 22,
                  column: 299
                }
              },
              '27': {
                start: {
                  line: 22,
                  column: 329
                },
                end: {
                  line: 22,
                  column: 385
                }
              },
              '28': {
                start: {
                  line: 22,
                  column: 387
                },
                end: {
                  line: 22,
                  column: 667
                }
              },
              '29': {
                start: {
                  line: 22,
                  column: 410
                },
                end: {
                  line: 22,
                  column: 665
                }
              },
              '30': {
                start: {
                  line: 22,
                  column: 475
                },
                end: {
                  line: 22,
                  column: 547
                }
              },
              '31': {
                start: {
                  line: 22,
                  column: 549
                },
                end: {
                  line: 22,
                  column: 663
                }
              },
              '32': {
                start: {
                  line: 22,
                  column: 587
                },
                end: {
                  line: 22,
                  column: 628
                }
              },
              '33': {
                start: {
                  line: 22,
                  column: 638
                },
                end: {
                  line: 22,
                  column: 661
                }
              },
              '34': {
                start: {
                  line: 22,
                  column: 668
                },
                end: {
                  line: 22,
                  column: 689
                }
              },
              '35': {
                start: {
                  line: 22,
                  column: 690
                },
                end: {
                  line: 22,
                  column: 728
                }
              },
              '36': {
                start: {
                  line: 22,
                  column: 703
                },
                end: {
                  line: 22,
                  column: 726
                }
              },
              '37': {
                start: {
                  line: 22,
                  column: 729
                },
                end: {
                  line: 22,
                  column: 743
                }
              },
              '38': {
                start: {
                  line: 24,
                  column: 39
                },
                end: {
                  line: 24,
                  column: 93
                }
              },
              '39': {
                start: {
                  line: 33,
                  column: 22
                },
                end: {
                  line: 33,
                  column: 72
                }
              },
              '40': {
                start: {
                  line: 34,
                  column: 0
                },
                end: {
                  line: 34,
                  column: 39
                }
              },
              '41': {
                start: {
                  line: 35,
                  column: 0
                },
                end: {
                  line: 35,
                  column: 66
                }
              },
              '42': {
                start: {
                  line: 36,
                  column: 0
                },
                end: {
                  line: 36,
                  column: 46
                }
              },
              '43': {
                start: {
                  line: 63,
                  column: 0
                },
                end: {
                  line: 63,
                  column: 39
                }
              },
              '44': {
                start: {
                  line: 113,
                  column: 0
                },
                end: {
                  line: 113,
                  column: 38
                }
              },
              '45': {
                start: {
                  line: 144,
                  column: 0
                },
                end: {
                  line: 144,
                  column: 54
                }
              },
              '46': {
                start: {
                  line: 184,
                  column: 0
                },
                end: {
                  line: 213,
                  column: 2
                }
              },
              '47': {
                start: {
                  line: 185,
                  column: 15
                },
                end: {
                  line: 185,
                  column: 21
                }
              },
              '48': {
                start: {
                  line: 186,
                  column: 15
                },
                end: {
                  line: 186,
                  column: 35
                }
              },
              '49': {
                start: {
                  line: 188,
                  column: 2
                },
                end: {
                  line: 210,
                  column: 3
                }
              },
              '50': {
                start: {
                  line: 190,
                  column: 4
                },
                end: {
                  line: 190,
                  column: 18
                }
              },
              '51': {
                start: {
                  line: 191,
                  column: 9
                },
                end: {
                  line: 210,
                  column: 3
                }
              },
              '52': {
                start: {
                  line: 192,
                  column: 17
                },
                end: {
                  line: 192,
                  column: 19
                }
              },
              '53': {
                start: {
                  line: 194,
                  column: 4
                },
                end: {
                  line: 198,
                  column: 5
                }
              },
              '54': {
                start: {
                  line: 197,
                  column: 6
                },
                end: {
                  line: 197,
                  column: 43
                }
              },
              '55': {
                start: {
                  line: 200,
                  column: 4
                },
                end: {
                  line: 209,
                  column: 5
                }
              },
              '56': {
                start: {
                  line: 202,
                  column: 6
                },
                end: {
                  line: 202,
                  column: 66
                }
              },
              '57': {
                start: {
                  line: 203,
                  column: 11
                },
                end: {
                  line: 209,
                  column: 5
                }
              },
              '58': {
                start: {
                  line: 205,
                  column: 6
                },
                end: {
                  line: 205,
                  column: 66
                }
              },
              '59': {
                start: {
                  line: 208,
                  column: 6
                },
                end: {
                  line: 208,
                  column: 20
                }
              },
              '60': {
                start: {
                  line: 212,
                  column: 2
                },
                end: {
                  line: 212,
                  column: 31
                }
              },
              '61': {
                start: {
                  line: 281,
                  column: 0
                },
                end: {
                  line: 293,
                  column: 2
                }
              },
              '62': {
                start: {
                  line: 282,
                  column: 2
                },
                end: {
                  line: 292,
                  column: 3
                }
              },
              '63': {
                start: {
                  line: 283,
                  column: 4
                },
                end: {
                  line: 283,
                  column: 27
                }
              },
              '64': {
                start: {
                  line: 285,
                  column: 4
                },
                end: {
                  line: 285,
                  column: 47
                }
              },
              '65': {
                start: {
                  line: 287,
                  column: 4
                },
                end: {
                  line: 289,
                  column: 5
                }
              },
              '66': {
                start: {
                  line: 288,
                  column: 6
                },
                end: {
                  line: 288,
                  column: 43
                }
              },
              '67': {
                start: {
                  line: 291,
                  column: 4
                },
                end: {
                  line: 291,
                  column: 16
                }
              },
              '68': {
                start: {
                  line: 302,
                  column: 0
                },
                end: {
                  line: 304,
                  column: 2
                }
              },
              '69': {
                start: {
                  line: 303,
                  column: 2
                },
                end: {
                  line: 303,
                  column: 26
                }
              },
              '70': {
                start: {
                  line: 319,
                  column: 0
                },
                end: {
                  line: 321,
                  column: 2
                }
              },
              '71': {
                start: {
                  line: 320,
                  column: 2
                },
                end: {
                  line: 320,
                  column: 29
                }
              },
              '72': {
                start: {
                  line: 338,
                  column: 0
                },
                end: {
                  line: 340,
                  column: 2
                }
              },
              '73': {
                start: {
                  line: 339,
                  column: 2
                },
                end: {
                  line: 339,
                  column: 31
                }
              },
              '74': {
                start: {
                  line: 359,
                  column: 0
                },
                end: {
                  line: 359,
                  column: 52
                }
              },
              '75': {
                start: {
                  line: 377,
                  column: 0
                },
                end: {
                  line: 377,
                  column: 54
                }
              },
              '76': {
                start: {
                  line: 393,
                  column: 0
                },
                end: {
                  line: 393,
                  column: 55
                }
              },
              '77': {
                start: {
                  line: 409,
                  column: 0
                },
                end: {
                  line: 409,
                  column: 57
                }
              },
              '78': {
                start: {
                  line: 412,
                  column: 2
                },
                end: {
                  line: 412,
                  column: 146
                }
              },
              '79': {
                start: {
                  line: 416,
                  column: 2
                },
                end: {
                  line: 416,
                  column: 149
                }
              },
              '80': {
                start: {
                  line: 430,
                  column: 0
                },
                end: {
                  line: 430,
                  column: 34
                }
              },
              '81': {
                start: {
                  line: 442,
                  column: 0
                },
                end: {
                  line: 442,
                  column: 35
                }
              },
              '82': {
                start: {
                  line: 443,
                  column: 15
                },
                end: {
                  line: 443,
                  column: 28
                }
              },
              '83': {
                start: {
                  line: 444,
                  column: 0
                },
                end: {
                  line: 444,
                  column: 27
                }
              }
            },
            fnMap: {
              '0': {
                name: '_typeof',
                decl: {
                  start: {
                    line: 3,
                    column: 9
                  },
                  end: {
                    line: 3,
                    column: 16
                  }
                },
                loc: {
                  start: {
                    line: 3,
                    column: 22
                  },
                  end: {
                    line: 3,
                    column: 351
                  }
                },
                line: 3
              },
              '1': {
                name: '_typeof',
                decl: {
                  start: {
                    line: 3,
                    column: 118
                  },
                  end: {
                    line: 3,
                    column: 125
                  }
                },
                loc: {
                  start: {
                    line: 3,
                    column: 131
                  },
                  end: {
                    line: 3,
                    column: 153
                  }
                },
                line: 3
              },
              '2': {
                name: '_typeof',
                decl: {
                  start: {
                    line: 3,
                    column: 183
                  },
                  end: {
                    line: 3,
                    column: 190
                  }
                },
                loc: {
                  start: {
                    line: 3,
                    column: 196
                  },
                  end: {
                    line: 3,
                    column: 325
                  }
                },
                line: 3
              },
              '3': {
                name: '_getRequireWildcardCache',
                decl: {
                  start: {
                    line: 20,
                    column: 9
                  },
                  end: {
                    line: 20,
                    column: 33
                  }
                },
                loc: {
                  start: {
                    line: 20,
                    column: 36
                  },
                  end: {
                    line: 20,
                    column: 210
                  }
                },
                line: 20
              },
              '4': {
                name: '_getRequireWildcardCache',
                decl: {
                  start: {
                    line: 20,
                    column: 149
                  },
                  end: {
                    line: 20,
                    column: 173
                  }
                },
                loc: {
                  start: {
                    line: 20,
                    column: 176
                  },
                  end: {
                    line: 20,
                    column: 193
                  }
                },
                line: 20
              },
              '5': {
                name: '_interopRequireWildcard',
                decl: {
                  start: {
                    line: 22,
                    column: 9
                  },
                  end: {
                    line: 22,
                    column: 32
                  }
                },
                loc: {
                  start: {
                    line: 22,
                    column: 38
                  },
                  end: {
                    line: 22,
                    column: 745
                  }
                },
                line: 22
              },
              '6': {
                name: '_interopRequireDefault',
                decl: {
                  start: {
                    line: 24,
                    column: 9
                  },
                  end: {
                    line: 24,
                    column: 31
                  }
                },
                loc: {
                  start: {
                    line: 24,
                    column: 37
                  },
                  end: {
                    line: 24,
                    column: 95
                  }
                },
                line: 24
              },
              '7': {
                name: '(anonymous_7)',
                decl: {
                  start: {
                    line: 184,
                    column: 33
                  },
                  end: {
                    line: 184,
                    column: 34
                  }
                },
                loc: {
                  start: {
                    line: 184,
                    column: 55
                  },
                  end: {
                    line: 213,
                    column: 1
                  }
                },
                line: 184
              },
              '8': {
                name: '(anonymous_8)',
                decl: {
                  start: {
                    line: 281,
                    column: 36
                  },
                  end: {
                    line: 281,
                    column: 37
                  }
                },
                loc: {
                  start: {
                    line: 281,
                    column: 51
                  },
                  end: {
                    line: 293,
                    column: 1
                  }
                },
                line: 281
              },
              '9': {
                name: '(anonymous_9)',
                decl: {
                  start: {
                    line: 302,
                    column: 39
                  },
                  end: {
                    line: 302,
                    column: 40
                  }
                },
                loc: {
                  start: {
                    line: 302,
                    column: 51
                  },
                  end: {
                    line: 304,
                    column: 1
                  }
                },
                line: 302
              },
              '10': {
                name: '(anonymous_10)',
                decl: {
                  start: {
                    line: 319,
                    column: 39
                  },
                  end: {
                    line: 319,
                    column: 40
                  }
                },
                loc: {
                  start: {
                    line: 319,
                    column: 54
                  },
                  end: {
                    line: 321,
                    column: 1
                  }
                },
                line: 319
              },
              '11': {
                name: '(anonymous_11)',
                decl: {
                  start: {
                    line: 338,
                    column: 45
                  },
                  end: {
                    line: 338,
                    column: 46
                  }
                },
                loc: {
                  start: {
                    line: 338,
                    column: 57
                  },
                  end: {
                    line: 340,
                    column: 1
                  }
                },
                line: 338
              },
              '12': {
                name: 'getWindowWidth',
                decl: {
                  start: {
                    line: 411,
                    column: 9
                  },
                  end: {
                    line: 411,
                    column: 23
                  }
                },
                loc: {
                  start: {
                    line: 411,
                    column: 26
                  },
                  end: {
                    line: 413,
                    column: 1
                  }
                },
                line: 411
              },
              '13': {
                name: 'getWindowHeight',
                decl: {
                  start: {
                    line: 415,
                    column: 9
                  },
                  end: {
                    line: 415,
                    column: 24
                  }
                },
                loc: {
                  start: {
                    line: 415,
                    column: 27
                  },
                  end: {
                    line: 417,
                    column: 1
                  }
                },
                line: 415
              }
            },
            branchMap: {
              '0': {
                loc: {
                  start: {
                    line: 3,
                    column: 24
                  },
                  end: {
                    line: 3,
                    column: 328
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 3,
                      column: 24
                    },
                    end: {
                      line: 3,
                      column: 328
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 24
                    },
                    end: {
                      line: 3,
                      column: 328
                    }
                  }
                ],
                line: 3
              },
              '1': {
                loc: {
                  start: {
                    line: 3,
                    column: 28
                  },
                  end: {
                    line: 3,
                    column: 95
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 3,
                      column: 28
                    },
                    end: {
                      line: 3,
                      column: 56
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 60
                    },
                    end: {
                      line: 3,
                      column: 95
                    }
                  }
                ],
                line: 3
              },
              '2': {
                loc: {
                  start: {
                    line: 3,
                    column: 205
                  },
                  end: {
                    line: 3,
                    column: 322
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 3,
                      column: 301
                    },
                    end: {
                      line: 3,
                      column: 309
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 312
                    },
                    end: {
                      line: 3,
                      column: 322
                    }
                  }
                ],
                line: 3
              },
              '3': {
                loc: {
                  start: {
                    line: 3,
                    column: 205
                  },
                  end: {
                    line: 3,
                    column: 298
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 3,
                      column: 205
                    },
                    end: {
                      line: 3,
                      column: 208
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 212
                    },
                    end: {
                      line: 3,
                      column: 240
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 244
                    },
                    end: {
                      line: 3,
                      column: 270
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 274
                    },
                    end: {
                      line: 3,
                      column: 298
                    }
                  }
                ],
                line: 3
              },
              '4': {
                loc: {
                  start: {
                    line: 20,
                    column: 38
                  },
                  end: {
                    line: 20,
                    column: 85
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 20,
                      column: 38
                    },
                    end: {
                      line: 20,
                      column: 85
                    }
                  },
                  {
                    start: {
                      line: 20,
                      column: 38
                    },
                    end: {
                      line: 20,
                      column: 85
                    }
                  }
                ],
                line: 20
              },
              '5': {
                loc: {
                  start: {
                    line: 22,
                    column: 40
                  },
                  end: {
                    line: 22,
                    column: 82
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 22,
                      column: 40
                    },
                    end: {
                      line: 22,
                      column: 82
                    }
                  },
                  {
                    start: {
                      line: 22,
                      column: 40
                    },
                    end: {
                      line: 22,
                      column: 82
                    }
                  }
                ],
                line: 22
              },
              '6': {
                loc: {
                  start: {
                    line: 22,
                    column: 44
                  },
                  end: {
                    line: 22,
                    column: 65
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 22,
                      column: 44
                    },
                    end: {
                      line: 22,
                      column: 47
                    }
                  },
                  {
                    start: {
                      line: 22,
                      column: 51
                    },
                    end: {
                      line: 22,
                      column: 65
                    }
                  }
                ],
                line: 22
              },
              '7': {
                loc: {
                  start: {
                    line: 22,
                    column: 83
                  },
                  end: {
                    line: 22,
                    column: 187
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 22,
                      column: 83
                    },
                    end: {
                      line: 22,
                      column: 187
                    }
                  },
                  {
                    start: {
                      line: 22,
                      column: 83
                    },
                    end: {
                      line: 22,
                      column: 187
                    }
                  }
                ],
                line: 22
              },
              '8': {
                loc: {
                  start: {
                    line: 22,
                    column: 87
                  },
                  end: {
                    line: 22,
                    column: 157
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 22,
                      column: 87
                    },
                    end: {
                      line: 22,
                      column: 99
                    }
                  },
                  {
                    start: {
                      line: 22,
                      column: 103
                    },
                    end: {
                      line: 22,
                      column: 128
                    }
                  },
                  {
                    start: {
                      line: 22,
                      column: 132
                    },
                    end: {
                      line: 22,
                      column: 157
                    }
                  }
                ],
                line: 22
              },
              '9': {
                loc: {
                  start: {
                    line: 22,
                    column: 228
                  },
                  end: {
                    line: 22,
                    column: 283
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 22,
                      column: 228
                    },
                    end: {
                      line: 22,
                      column: 283
                    }
                  },
                  {
                    start: {
                      line: 22,
                      column: 228
                    },
                    end: {
                      line: 22,
                      column: 283
                    }
                  }
                ],
                line: 22
              },
              '10': {
                loc: {
                  start: {
                    line: 22,
                    column: 232
                  },
                  end: {
                    line: 22,
                    column: 255
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 22,
                      column: 232
                    },
                    end: {
                      line: 22,
                      column: 237
                    }
                  },
                  {
                    start: {
                      line: 22,
                      column: 241
                    },
                    end: {
                      line: 22,
                      column: 255
                    }
                  }
                ],
                line: 22
              },
              '11': {
                loc: {
                  start: {
                    line: 22,
                    column: 329
                  },
                  end: {
                    line: 22,
                    column: 385
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 22,
                      column: 329
                    },
                    end: {
                      line: 22,
                      column: 350
                    }
                  },
                  {
                    start: {
                      line: 22,
                      column: 354
                    },
                    end: {
                      line: 22,
                      column: 385
                    }
                  }
                ],
                line: 22
              },
              '12': {
                loc: {
                  start: {
                    line: 22,
                    column: 410
                  },
                  end: {
                    line: 22,
                    column: 665
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 22,
                      column: 410
                    },
                    end: {
                      line: 22,
                      column: 665
                    }
                  },
                  {
                    start: {
                      line: 22,
                      column: 410
                    },
                    end: {
                      line: 22,
                      column: 665
                    }
                  }
                ],
                line: 22
              },
              '13': {
                loc: {
                  start: {
                    line: 22,
                    column: 475
                  },
                  end: {
                    line: 22,
                    column: 547
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 22,
                      column: 499
                    },
                    end: {
                      line: 22,
                      column: 540
                    }
                  },
                  {
                    start: {
                      line: 22,
                      column: 543
                    },
                    end: {
                      line: 22,
                      column: 547
                    }
                  }
                ],
                line: 22
              },
              '14': {
                loc: {
                  start: {
                    line: 22,
                    column: 549
                  },
                  end: {
                    line: 22,
                    column: 663
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 22,
                      column: 549
                    },
                    end: {
                      line: 22,
                      column: 663
                    }
                  },
                  {
                    start: {
                      line: 22,
                      column: 549
                    },
                    end: {
                      line: 22,
                      column: 663
                    }
                  }
                ],
                line: 22
              },
              '15': {
                loc: {
                  start: {
                    line: 22,
                    column: 553
                  },
                  end: {
                    line: 22,
                    column: 583
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 22,
                      column: 553
                    },
                    end: {
                      line: 22,
                      column: 557
                    }
                  },
                  {
                    start: {
                      line: 22,
                      column: 562
                    },
                    end: {
                      line: 22,
                      column: 570
                    }
                  },
                  {
                    start: {
                      line: 22,
                      column: 574
                    },
                    end: {
                      line: 22,
                      column: 582
                    }
                  }
                ],
                line: 22
              },
              '16': {
                loc: {
                  start: {
                    line: 22,
                    column: 690
                  },
                  end: {
                    line: 22,
                    column: 728
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 22,
                      column: 690
                    },
                    end: {
                      line: 22,
                      column: 728
                    }
                  },
                  {
                    start: {
                      line: 22,
                      column: 690
                    },
                    end: {
                      line: 22,
                      column: 728
                    }
                  }
                ],
                line: 22
              },
              '17': {
                loc: {
                  start: {
                    line: 24,
                    column: 46
                  },
                  end: {
                    line: 24,
                    column: 92
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 24,
                      column: 70
                    },
                    end: {
                      line: 24,
                      column: 73
                    }
                  },
                  {
                    start: {
                      line: 24,
                      column: 76
                    },
                    end: {
                      line: 24,
                      column: 92
                    }
                  }
                ],
                line: 24
              },
              '18': {
                loc: {
                  start: {
                    line: 24,
                    column: 46
                  },
                  end: {
                    line: 24,
                    column: 67
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 24,
                      column: 46
                    },
                    end: {
                      line: 24,
                      column: 49
                    }
                  },
                  {
                    start: {
                      line: 24,
                      column: 53
                    },
                    end: {
                      line: 24,
                      column: 67
                    }
                  }
                ],
                line: 24
              },
              '19': {
                loc: {
                  start: {
                    line: 188,
                    column: 2
                  },
                  end: {
                    line: 210,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 188,
                      column: 2
                    },
                    end: {
                      line: 210,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 188,
                      column: 2
                    },
                    end: {
                      line: 210,
                      column: 3
                    }
                  }
                ],
                line: 188
              },
              '20': {
                loc: {
                  start: {
                    line: 191,
                    column: 9
                  },
                  end: {
                    line: 210,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 191,
                      column: 9
                    },
                    end: {
                      line: 210,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 191,
                      column: 9
                    },
                    end: {
                      line: 210,
                      column: 3
                    }
                  }
                ],
                line: 191
              },
              '21': {
                loc: {
                  start: {
                    line: 194,
                    column: 4
                  },
                  end: {
                    line: 198,
                    column: 5
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 194,
                      column: 4
                    },
                    end: {
                      line: 198,
                      column: 5
                    }
                  },
                  {
                    start: {
                      line: 194,
                      column: 4
                    },
                    end: {
                      line: 198,
                      column: 5
                    }
                  }
                ],
                line: 194
              },
              '22': {
                loc: {
                  start: {
                    line: 194,
                    column: 8
                  },
                  end: {
                    line: 194,
                    column: 64
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 194,
                      column: 8
                    },
                    end: {
                      line: 194,
                      column: 9
                    }
                  },
                  {
                    start: {
                      line: 194,
                      column: 13
                    },
                    end: {
                      line: 194,
                      column: 14
                    }
                  },
                  {
                    start: {
                      line: 194,
                      column: 18
                    },
                    end: {
                      line: 194,
                      column: 39
                    }
                  },
                  {
                    start: {
                      line: 194,
                      column: 43
                    },
                    end: {
                      line: 194,
                      column: 64
                    }
                  }
                ],
                line: 194
              },
              '23': {
                loc: {
                  start: {
                    line: 200,
                    column: 4
                  },
                  end: {
                    line: 209,
                    column: 5
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 200,
                      column: 4
                    },
                    end: {
                      line: 209,
                      column: 5
                    }
                  },
                  {
                    start: {
                      line: 200,
                      column: 4
                    },
                    end: {
                      line: 209,
                      column: 5
                    }
                  }
                ],
                line: 200
              },
              '24': {
                loc: {
                  start: {
                    line: 200,
                    column: 8
                  },
                  end: {
                    line: 200,
                    column: 81
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 200,
                      column: 8
                    },
                    end: {
                      line: 200,
                      column: 42
                    }
                  },
                  {
                    start: {
                      line: 200,
                      column: 46
                    },
                    end: {
                      line: 200,
                      column: 81
                    }
                  }
                ],
                line: 200
              },
              '25': {
                loc: {
                  start: {
                    line: 203,
                    column: 11
                  },
                  end: {
                    line: 209,
                    column: 5
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 203,
                      column: 11
                    },
                    end: {
                      line: 209,
                      column: 5
                    }
                  },
                  {
                    start: {
                      line: 203,
                      column: 11
                    },
                    end: {
                      line: 209,
                      column: 5
                    }
                  }
                ],
                line: 203
              },
              '26': {
                loc: {
                  start: {
                    line: 282,
                    column: 2
                  },
                  end: {
                    line: 292,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 282,
                      column: 2
                    },
                    end: {
                      line: 292,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 282,
                      column: 2
                    },
                    end: {
                      line: 292,
                      column: 3
                    }
                  }
                ],
                line: 282
              },
              '27': {
                loc: {
                  start: {
                    line: 282,
                    column: 6
                  },
                  end: {
                    line: 282,
                    column: 40
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 282,
                      column: 6
                    },
                    end: {
                      line: 282,
                      column: 29
                    }
                  },
                  {
                    start: {
                      line: 282,
                      column: 33
                    },
                    end: {
                      line: 282,
                      column: 40
                    }
                  }
                ],
                line: 282
              },
              '28': {
                loc: {
                  start: {
                    line: 287,
                    column: 4
                  },
                  end: {
                    line: 289,
                    column: 5
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 287,
                      column: 4
                    },
                    end: {
                      line: 289,
                      column: 5
                    }
                  },
                  {
                    start: {
                      line: 287,
                      column: 4
                    },
                    end: {
                      line: 289,
                      column: 5
                    }
                  }
                ],
                line: 287
              },
              '29': {
                loc: {
                  start: {
                    line: 412,
                    column: 9
                  },
                  end: {
                    line: 412,
                    column: 145
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 412,
                      column: 9
                    },
                    end: {
                      line: 412,
                      column: 26
                    }
                  },
                  {
                    start: {
                      line: 412,
                      column: 30
                    },
                    end: {
                      line: 412,
                      column: 54
                    }
                  },
                  {
                    start: {
                      line: 412,
                      column: 58
                    },
                    end: {
                      line: 412,
                      column: 94
                    }
                  },
                  {
                    start: {
                      line: 412,
                      column: 98
                    },
                    end: {
                      line: 412,
                      column: 111
                    }
                  },
                  {
                    start: {
                      line: 412,
                      column: 115
                    },
                    end: {
                      line: 412,
                      column: 140
                    }
                  },
                  {
                    start: {
                      line: 412,
                      column: 144
                    },
                    end: {
                      line: 412,
                      column: 145
                    }
                  }
                ],
                line: 412
              },
              '30': {
                loc: {
                  start: {
                    line: 416,
                    column: 9
                  },
                  end: {
                    line: 416,
                    column: 148
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 416,
                      column: 9
                    },
                    end: {
                      line: 416,
                      column: 27
                    }
                  },
                  {
                    start: {
                      line: 416,
                      column: 31
                    },
                    end: {
                      line: 416,
                      column: 55
                    }
                  },
                  {
                    start: {
                      line: 416,
                      column: 59
                    },
                    end: {
                      line: 416,
                      column: 96
                    }
                  },
                  {
                    start: {
                      line: 416,
                      column: 100
                    },
                    end: {
                      line: 416,
                      column: 113
                    }
                  },
                  {
                    start: {
                      line: 416,
                      column: 117
                    },
                    end: {
                      line: 416,
                      column: 143
                    }
                  },
                  {
                    start: {
                      line: 416,
                      column: 147
                    },
                    end: {
                      line: 416,
                      column: 148
                    }
                  }
                ],
                line: 416
              }
            },
            s: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0,
              '10': 0,
              '11': 0,
              '12': 0,
              '13': 0,
              '14': 0,
              '15': 0,
              '16': 0,
              '17': 0,
              '18': 0,
              '19': 0,
              '20': 0,
              '21': 0,
              '22': 0,
              '23': 0,
              '24': 0,
              '25': 0,
              '26': 0,
              '27': 0,
              '28': 0,
              '29': 0,
              '30': 0,
              '31': 0,
              '32': 0,
              '33': 0,
              '34': 0,
              '35': 0,
              '36': 0,
              '37': 0,
              '38': 0,
              '39': 0,
              '40': 0,
              '41': 0,
              '42': 0,
              '43': 0,
              '44': 0,
              '45': 0,
              '46': 0,
              '47': 0,
              '48': 0,
              '49': 0,
              '50': 0,
              '51': 0,
              '52': 0,
              '53': 0,
              '54': 0,
              '55': 0,
              '56': 0,
              '57': 0,
              '58': 0,
              '59': 0,
              '60': 0,
              '61': 0,
              '62': 0,
              '63': 0,
              '64': 0,
              '65': 0,
              '66': 0,
              '67': 0,
              '68': 0,
              '69': 0,
              '70': 0,
              '71': 0,
              '72': 0,
              '73': 0,
              '74': 0,
              '75': 0,
              '76': 0,
              '77': 0,
              '78': 0,
              '79': 0,
              '80': 0,
              '81': 0,
              '82': 0,
              '83': 0
            },
            f: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0,
              '10': 0,
              '11': 0,
              '12': 0,
              '13': 0
            },
            b: {
              '0': [
                0,
                0
              ],
              '1': [
                0,
                0
              ],
              '2': [
                0,
                0
              ],
              '3': [
                0,
                0,
                0,
                0
              ],
              '4': [
                0,
                0
              ],
              '5': [
                0,
                0
              ],
              '6': [
                0,
                0
              ],
              '7': [
                0,
                0
              ],
              '8': [
                0,
                0,
                0
              ],
              '9': [
                0,
                0
              ],
              '10': [
                0,
                0
              ],
              '11': [
                0,
                0
              ],
              '12': [
                0,
                0
              ],
              '13': [
                0,
                0
              ],
              '14': [
                0,
                0
              ],
              '15': [
                0,
                0,
                0
              ],
              '16': [
                0,
                0
              ],
              '17': [
                0,
                0
              ],
              '18': [
                0,
                0
              ],
              '19': [
                0,
                0
              ],
              '20': [
                0,
                0
              ],
              '21': [
                0,
                0
              ],
              '22': [
                0,
                0,
                0,
                0
              ],
              '23': [
                0,
                0
              ],
              '24': [
                0,
                0
              ],
              '25': [
                0,
                0
              ],
              '26': [
                0,
                0
              ],
              '27': [
                0,
                0
              ],
              '28': [
                0,
                0
              ],
              '29': [
                0,
                0,
                0,
                0,
                0,
                0
              ],
              '30': [
                0,
                0,
                0,
                0,
                0,
                0
              ]
            },
            _coverageSchema: '43e27e138ebf9cfc5966b082cf9a028302ed4184',
            hash: 'c3cb61164f02054a802ca74661dc31aef5e6d790'
          };
          var coverage = global[gcv] || (global[gcv] = {
          });
          if (coverage[path] && coverage[path].hash === hash) {
            return coverage[path];
          }
          return coverage[path] = coverageData;
        }();
        _dereq_('core-js/modules/es.symbol');
        _dereq_('core-js/modules/es.symbol.description');
        _dereq_('core-js/modules/es.symbol.iterator');
        _dereq_('core-js/modules/es.array.concat');
        _dereq_('core-js/modules/es.array.includes');
        _dereq_('core-js/modules/es.array.iterator');
        _dereq_('core-js/modules/es.object.get-own-property-descriptor');
        _dereq_('core-js/modules/es.object.to-string');
        _dereq_('core-js/modules/es.string.includes');
        _dereq_('core-js/modules/es.string.iterator');
        _dereq_('core-js/modules/es.weak-map');
        _dereq_('core-js/modules/web.dom-collections.iterator');
        function _typeof2(obj) {
          if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {
            _typeof2 = function _typeof2(obj) {
              return typeof obj;
            };
          } else {
            _typeof2 = function _typeof2(obj) {
              return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;
            };
          }
          return _typeof2(obj);
        }
        function _typeof(obj) {
          cov_2nj1dx0f7r.f[0]++;
          cov_2nj1dx0f7r.s[0]++;
          if ((cov_2nj1dx0f7r.b[1][0]++, typeof Symbol === 'function') && (cov_2nj1dx0f7r.b[1][1]++, _typeof2(Symbol.iterator) === 'symbol')) {
            cov_2nj1dx0f7r.b[0][0]++;
            cov_2nj1dx0f7r.s[1]++;
            _typeof = function _typeof(obj) {
              cov_2nj1dx0f7r.f[1]++;
              cov_2nj1dx0f7r.s[2]++;
              return _typeof2(obj);
            };
          } else {
            cov_2nj1dx0f7r.b[0][1]++;
            cov_2nj1dx0f7r.s[3]++;
            _typeof = function _typeof(obj) {
              cov_2nj1dx0f7r.f[2]++;
              cov_2nj1dx0f7r.s[4]++;
              return (cov_2nj1dx0f7r.b[3][0]++, obj) && (cov_2nj1dx0f7r.b[3][1]++, typeof Symbol === 'function') && (cov_2nj1dx0f7r.b[3][2]++, obj.constructor === Symbol) && (cov_2nj1dx0f7r.b[3][3]++, obj !== Symbol.prototype) ? (cov_2nj1dx0f7r.b[2][0]++, 'symbol') : (cov_2nj1dx0f7r.b[2][1]++, _typeof2(obj));
            };
          }
          cov_2nj1dx0f7r.s[5]++;
          return _typeof(obj);
        }
        cov_2nj1dx0f7r.s[6]++;
        _dereq_('core-js/modules/es.array.concat');
        cov_2nj1dx0f7r.s[7]++;
        _dereq_('core-js/modules/es.array.includes');
        cov_2nj1dx0f7r.s[8]++;
        _dereq_('core-js/modules/es.string.includes');
        cov_2nj1dx0f7r.s[9]++;
        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        cov_2nj1dx0f7r.s[10]++;
        exports.default = void 0;
        var _main = (cov_2nj1dx0f7r.s[11]++, _interopRequireDefault(_dereq_('./main')));
        var C = (cov_2nj1dx0f7r.s[12]++, _interopRequireWildcard(_dereq_('./constants')));
        function _getRequireWildcardCache() {
          cov_2nj1dx0f7r.f[3]++;
          cov_2nj1dx0f7r.s[13]++;
          if (typeof WeakMap !== 'function') {
            cov_2nj1dx0f7r.b[4][0]++;
            cov_2nj1dx0f7r.s[14]++;
            return null;
          } else {
            cov_2nj1dx0f7r.b[4][1]++;
          }
          var cache = (cov_2nj1dx0f7r.s[15]++, new WeakMap());
          cov_2nj1dx0f7r.s[16]++;
          _getRequireWildcardCache = function _getRequireWildcardCache() {
            cov_2nj1dx0f7r.f[4]++;
            cov_2nj1dx0f7r.s[17]++;
            return cache;
          };
          cov_2nj1dx0f7r.s[18]++;
          return cache;
        }
        function _interopRequireWildcard(obj) {
          cov_2nj1dx0f7r.f[5]++;
          cov_2nj1dx0f7r.s[19]++;
          if ((cov_2nj1dx0f7r.b[6][0]++, obj) && (cov_2nj1dx0f7r.b[6][1]++, obj.__esModule)) {
            cov_2nj1dx0f7r.b[5][0]++;
            cov_2nj1dx0f7r.s[20]++;
            return obj;
          } else {
            cov_2nj1dx0f7r.b[5][1]++;
          }
          cov_2nj1dx0f7r.s[21]++;
          if ((cov_2nj1dx0f7r.b[8][0]++, obj === null) || (cov_2nj1dx0f7r.b[8][1]++, _typeof(obj) !== 'object') && (cov_2nj1dx0f7r.b[8][2]++, typeof obj !== 'function')) {
            cov_2nj1dx0f7r.b[7][0]++;
            cov_2nj1dx0f7r.s[22]++;
            return {
            default:
              obj
            };
          } else {
            cov_2nj1dx0f7r.b[7][1]++;
          }
          var cache = (cov_2nj1dx0f7r.s[23]++, _getRequireWildcardCache());
          cov_2nj1dx0f7r.s[24]++;
          if ((cov_2nj1dx0f7r.b[10][0]++, cache) && (cov_2nj1dx0f7r.b[10][1]++, cache.has(obj))) {
            cov_2nj1dx0f7r.b[9][0]++;
            cov_2nj1dx0f7r.s[25]++;
            return cache.get(obj);
          } else {
            cov_2nj1dx0f7r.b[9][1]++;
          }
          var newObj = (cov_2nj1dx0f7r.s[26]++, {
          });
          var hasPropertyDescriptor = (cov_2nj1dx0f7r.s[27]++, (cov_2nj1dx0f7r.b[11][0]++, Object.defineProperty) && (cov_2nj1dx0f7r.b[11][1]++, Object.getOwnPropertyDescriptor));
          cov_2nj1dx0f7r.s[28]++;
          for (var key in obj) {
            cov_2nj1dx0f7r.s[29]++;
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              cov_2nj1dx0f7r.b[12][0]++;
              var desc = (cov_2nj1dx0f7r.s[30]++, hasPropertyDescriptor ? (cov_2nj1dx0f7r.b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) : (cov_2nj1dx0f7r.b[13][1]++, null));
              cov_2nj1dx0f7r.s[31]++;
              if ((cov_2nj1dx0f7r.b[15][0]++, desc) && ((cov_2nj1dx0f7r.b[15][1]++, desc.get) || (cov_2nj1dx0f7r.b[15][2]++, desc.set))) {
                cov_2nj1dx0f7r.b[14][0]++;
                cov_2nj1dx0f7r.s[32]++;
                Object.defineProperty(newObj, key, desc);
              } else {
                cov_2nj1dx0f7r.b[14][1]++;
                cov_2nj1dx0f7r.s[33]++;
                newObj[key] = obj[key];
              }
            } else {
              cov_2nj1dx0f7r.b[12][1]++;
            }
          }
          cov_2nj1dx0f7r.s[34]++;
          newObj.default = obj;
          cov_2nj1dx0f7r.s[35]++;
          if (cache) {
            cov_2nj1dx0f7r.b[16][0]++;
            cov_2nj1dx0f7r.s[36]++;
            cache.set(obj, newObj);
          } else {
            cov_2nj1dx0f7r.b[16][1]++;
          }
          cov_2nj1dx0f7r.s[37]++;
          return newObj;
        }
        function _interopRequireDefault(obj) {
          cov_2nj1dx0f7r.f[6]++;
          cov_2nj1dx0f7r.s[38]++;
          return (cov_2nj1dx0f7r.b[18][0]++, obj) && (cov_2nj1dx0f7r.b[18][1]++, obj.__esModule) ? (cov_2nj1dx0f7r.b[17][0]++, obj) : (cov_2nj1dx0f7r.b[17][1]++, {
          default:
            obj
          });
        }        /**
 * @module Environment
 * @submodule Environment
 * @for p5
 * @requires core
 * @requires constants
 */

        var standardCursors = (cov_2nj1dx0f7r.s[39]++, [
          C.ARROW,
          C.CROSS,
          C.HAND,
          C.MOVE,
          C.TEXT,
          C.WAIT
        ]);
        cov_2nj1dx0f7r.s[40]++;
        _main.default.prototype._frameRate = 0;
        cov_2nj1dx0f7r.s[41]++;
        _main.default.prototype._lastFrameTime = window.performance.now();
        cov_2nj1dx0f7r.s[42]++;
        _main.default.prototype._targetFrameRate = 60;
        /**
 * The system variable <a href="#/p5/frameCount">frameCount</a> contains the
 * number of frames that have been displayed since the program started. Inside
 * <a href="#/p5/setup">setup()</a> the value is 0, after the first iteration
 * of <a href="#/p5/draw">draw()</a> it is 1, etc.
 *
 * @property {Integer} frameCount
 * @readOnly
 * @example
 * <div><code>
 * function setup() {
 *   frameRate(30);
 *   textSize(30);
 *   textAlign(CENTER);
 * }
 *
 * function draw() {
 *   background(200);
 *   text(frameCount, width / 2, height / 2);
 * }
 * </code></div>
 *
 * @alt
 * numbers rapidly counting upward with frame count set to 30.
 */
        cov_2nj1dx0f7r.s[43]++;
        _main.default.prototype.frameCount = 0;
        /**
 * The system variable <a href="#/p5/deltaTime">deltaTime</a> contains the time
 * difference between the beginning of the previous frame and the beginning
 * of the current frame in milliseconds.
 *
 * This variable is useful for creating time sensitive animation or physics
 * calculation that should stay constant regardless of frame rate.
 *
 * @property {Integer} deltaTime
 * @readOnly
 * @example
 * <div><code>
 * let rectX = 0;
 * let fr = 30; //starting FPS
 * let clr;
 *
 * function setup() {
 *   background(200);
 *   frameRate(fr); // Attempt to refresh at starting FPS
 *   clr = color(255, 0, 0);
 * }
 *
 * function draw() {
 *   background(200);
 *   rectX = rectX + 1 * (deltaTime / 50); // Move Rectangle in relation to deltaTime
 *
 *   if (rectX >= width) {
 *     // If you go off screen.
 *     if (fr === 30) {
 *       clr = color(0, 0, 255);
 *       fr = 10;
 *       frameRate(fr); // make frameRate 10 FPS
 *     } else {
 *       clr = color(255, 0, 0);
 *       fr = 30;
 *       frameRate(fr); // make frameRate 30 FPS
 *     }
 *     rectX = 0;
 *   }
 *   fill(clr);
 *   rect(rectX, 40, 20, 20);
 * }
 * </code></div>
 *
 * @alt
 * red rect moves left to right, followed by blue rect moving at the same speed
 * with a lower frame rate. Loops.
 */
        cov_2nj1dx0f7r.s[44]++;
        _main.default.prototype.deltaTime = 0;
        /**
 * Confirms if the window a p5sound.js program is in is "focused," meaning that
 * the sketch will accept mouse or keyboard input. This variable is
 * "true" if the window is focused and "false" if not.
 *
 * @property {Boolean} focused
 * @readOnly
 * @example
 * <div><code>
 * // To demonstrate, put two windows side by side.
 * // Click on the window that the p5sound sketch isn't in!
 * function draw() {
 *   background(200);
 *   noStroke();
 *   fill(0, 200, 0);
 *   ellipse(25, 25, 50, 50);
 *
 *   if (!focused) {
    // or "if (focused === false)"
 *     stroke(200, 0, 0);
 *     line(0, 0, 100, 100);
 *     line(100, 0, 0, 100);
 *   }
 * }
 * </code></div>
 *
 * @alt
 * green 50×50 ellipse at top left. Red X covers canvas when page focus changes
 */
        cov_2nj1dx0f7r.s[45]++;
        _main.default.prototype.focused = document.hasFocus();
        /**
 * Sets the cursor to a predefined symbol or an image, or makes it visible
 * if already hidden. If you are trying to set an image as the cursor, the
 * recommended size is 16×16 or 32×32 pixels. The values for parameters x and y
 * must be less than the dimensions of the image.
 *
 * @method cursor
 * @param {String|Constant} type Built-In: either ARROW, CROSS, HAND, MOVE, TEXT and WAIT
 *                               Native CSS properties: 'grab', 'progress', 'cell' etc.
 *                               External: path for cursor's images
 *                               (Allowed File extensions: .cur, .gif, .jpg, .jpeg, .png)
 *                               For more information on Native CSS cursors and url visit:
 *                               https://developer.mozilla.org/en-US/docs/Web/CSS/cursor
 * @param {Number}          [x]  the horizontal active spot of the cursor (must be less than 32)
 * @param {Number}          [y]  the vertical active spot of the cursor (must be less than 32)
 * @example
 * <div><code>
 * // Move the mouse across the quadrants
 * // to see the cursor change
 * function draw() {
 *   line(width / 2, 0, width / 2, height);
 *   line(0, height / 2, width, height / 2);
 *   if (mouseX < 50 && mouseY < 50) {
 *     cursor(CROSS);
 *   } else if (mouseX > 50 && mouseY < 50) {
 *     cursor('progress');
 *   } else if (mouseX > 50 && mouseY > 50) {
 *     cursor('https://avatars0.githubusercontent.com/u/1617169?s=16');
 *   } else {
 *     cursor('grab');
 *   }
 * }
 * </code></div>
 *
 * @alt
 * canvas is divided into four quadrants. cursor on first is a cross, second is a progress,
 * third is a custom cursor using path to the cursor and fourth is a grab.
 */
        cov_2nj1dx0f7r.s[46]++;
        _main.default.prototype.cursor = function (type, x, y) {
          cov_2nj1dx0f7r.f[7]++;
          var cursor = (cov_2nj1dx0f7r.s[47]++, 'auto');
          var canvas = (cov_2nj1dx0f7r.s[48]++, this._curElement.elt);
          cov_2nj1dx0f7r.s[49]++;
          if (standardCursors.includes(type)) {
            cov_2nj1dx0f7r.b[19][0]++;
            cov_2nj1dx0f7r.s[50]++;
            // Standard css cursor
            cursor = type;
          } else {
            cov_2nj1dx0f7r.b[19][1]++;
            cov_2nj1dx0f7r.s[51]++;
            if (typeof type === 'string') {
              cov_2nj1dx0f7r.b[20][0]++;
              var coords = (cov_2nj1dx0f7r.s[52]++, '');
              cov_2nj1dx0f7r.s[53]++;
              if ((cov_2nj1dx0f7r.b[22][0]++, x) && (cov_2nj1dx0f7r.b[22][1]++, y) && (cov_2nj1dx0f7r.b[22][2]++, typeof x === 'number') && (cov_2nj1dx0f7r.b[22][3]++, typeof y === 'number')) {
                cov_2nj1dx0f7r.b[21][0]++;
                cov_2nj1dx0f7r.s[54]++;
                // Note that x and y values must be unit-less positive integers < 32
                // https://developer.mozilla.org/en-US/docs/Web/CSS/cursor
                coords = ''.concat(x, ' ').concat(y);
              } else {
                cov_2nj1dx0f7r.b[21][1]++;
              }
              cov_2nj1dx0f7r.s[55]++;
              if ((cov_2nj1dx0f7r.b[24][0]++, type.substring(0, 7) === 'http://') || (cov_2nj1dx0f7r.b[24][1]++, type.substring(0, 8) === 'https://')) {
                cov_2nj1dx0f7r.b[23][0]++;
                cov_2nj1dx0f7r.s[56]++;
                // Image (absolute url)
                cursor = 'url('.concat(type, ') ').concat(coords, ', auto');
              } else {
                cov_2nj1dx0f7r.b[23][1]++;
                cov_2nj1dx0f7r.s[57]++;
                if (/\.(cur|jpg|jpeg|gif|png|CUR|JPG|JPEG|GIF|PNG)$/.test(type)) {
                  cov_2nj1dx0f7r.b[25][0]++;
                  cov_2nj1dx0f7r.s[58]++;
                  // Image file (relative path) - Separated for performance reasons
                  cursor = 'url('.concat(type, ') ').concat(coords, ', auto');
                } else {
                  cov_2nj1dx0f7r.b[25][1]++;
                  cov_2nj1dx0f7r.s[59]++;
                  // Any valid string for the css cursor property
                  cursor = type;
                }
              }
            } else {
              cov_2nj1dx0f7r.b[20][1]++;
            }
          }
          cov_2nj1dx0f7r.s[60]++;
          canvas.style.cursor = cursor;
        };
        /**
 * Specifies the number of frames to be displayed every second. For example,
 * the function call frameRate(30) will attempt to refresh 30 times a second.
 * If the processor is not fast enough to maintain the specified rate, the
 * frame rate will not be achieved. Setting the frame rate within
 * <a href="#/p5/setup">setup()</a> is recommended. The default frame rate is
 * based on the frame rate of the display (here also called "refresh rate"),
 * which is set to 60 frames per second on most computers. A frame rate of 24
 * frames per second (usual for movies) or above will be enough for smooth
 * animations. This is the same as setFrameRate(val).
 *
 * Calling <a href="#/p5/frameRate">frameRate()</a> with no arguments returns
 * the current framerate. The draw function must run at least once before it will
 * return a value. This is the same as <a href="#/p5/getFrameRate">getFrameRate()</a>.
 *
 * Calling <a href="#/p5/frameRate">frameRate()</a> with arguments that are not
 * of the type Number or are non-positive also returns current framerate.
 *
 * @method frameRate
 * @param  {Number} fps number of frames to be displayed every second
 * @chainable
 *
 * @example
 *
 * <div><code>
 * let rectX = 0;
 * let fr = 30; //starting FPS
 * let clr;
 *
 * function setup() {
 *   background(200);
 *   frameRate(fr); // Attempt to refresh at starting FPS
 *   clr = color(255, 0, 0);
 * }
 *
 * function draw() {
 *   background(200);
 *   rectX += 1; // Move Rectangle
 *
 *   if (rectX >= width) {
    // If you go off screen.
 *     if (fr === 30) {
 *       clr = color(0, 0, 255);
 *       fr = 10;
 *       frameRate(fr); // make frameRate 10 FPS
 *     } else {
 *       clr = color(255, 0, 0);
 *       fr = 30;
 *       frameRate(fr); // make frameRate 30 FPS
 *     }
 *     rectX = 0;
 *   }
 *   fill(clr);
 *   rect(rectX, 40, 20, 20);
 * }
 * </code></div>
 *
 * @alt
 * blue rect moves left to right, followed by red rect moving faster. Loops.
 */
        /**
 * @method frameRate
 * @return {Number}       current frameRate
 */
        cov_2nj1dx0f7r.s[61]++;
        _main.default.prototype.frameRate = function (fps) {
          cov_2nj1dx0f7r.f[8]++;
          cov_2nj1dx0f7r.s[62]++;
          if ((cov_2nj1dx0f7r.b[27][0]++, typeof fps !== 'number') || (cov_2nj1dx0f7r.b[27][1]++, fps < 0)) {
            cov_2nj1dx0f7r.b[26][0]++;
            cov_2nj1dx0f7r.s[63]++;
            return this._frameRate;
          } else {
            cov_2nj1dx0f7r.b[26][1]++;
            cov_2nj1dx0f7r.s[64]++;
            this._setProperty('_targetFrameRate', fps);
            cov_2nj1dx0f7r.s[65]++;
            if (fps === 0) {
              cov_2nj1dx0f7r.b[28][0]++;
              cov_2nj1dx0f7r.s[66]++;
              this._setProperty('_frameRate', fps);
            } else {
              cov_2nj1dx0f7r.b[28][1]++;
            }
            cov_2nj1dx0f7r.s[67]++;
            return this;
          }
        };
        /**
 * Returns the current framerate.
 *
 * @private
 * @return {Number} current frameRate
 */
        cov_2nj1dx0f7r.s[68]++;
        _main.default.prototype.getFrameRate = function () {
          cov_2nj1dx0f7r.f[9]++;
          cov_2nj1dx0f7r.s[69]++;
          return this.frameRate();
        };
        /**
 * Specifies the number of frames to be displayed every second. For example,
 * the function call frameRate(30) will attempt to refresh 30 times a second.
 * If the processor is not fast enough to maintain the specified rate, the
 * frame rate will not be achieved. Setting the frame rate within <a href="#/p5/setup">setup()</a> is
 * recommended. The default rate is 60 frames per second.
 *
 * Calling <a href="#/p5/frameRate">frameRate()</a> with no arguments returns the current framerate.
 *
 * @private
 * @param {Number} [fps] number of frames to be displayed every second
 */
        cov_2nj1dx0f7r.s[70]++;
        _main.default.prototype.setFrameRate = function (fps) {
          cov_2nj1dx0f7r.f[10]++;
          cov_2nj1dx0f7r.s[71]++;
          return this.frameRate(fps);
        };
        /**
 * Returns _targetFrameRate variable. The default _targetFrameRate is set to 60.
 * This could be changed by calling frameRate() and setting it to the desired
 * value. When getTargetFrameRate() is called, it should return the value that was set.
 * @method getTargetFrameRate
 * @return {Number} _targetFrameRate
 * @example
 * <div><code>
 * function draw() {
 *   frameRate(20);
 *   text(getTargetFrameRate(), width / 2, height / 2);
 * }
 * </code></div>
 */
        cov_2nj1dx0f7r.s[72]++;
        _main.default.prototype.getTargetFrameRate = function () {
          cov_2nj1dx0f7r.f[11]++;
          cov_2nj1dx0f7r.s[73]++;
          return this._targetFrameRate;
        };
        /**
 * System variable that stores the width of the screen display according to The
 * default <a href="#/p5/pixelDensity">pixelDensity</a>. This is used to run a
 * full-screen program on any display size. To return actual screen size,
 * multiply this by pixelDensity.
 *
 * @property {Number} displayWidth
 * @readOnly
 * @example
 * <div class="norender"><code>
 * createCanvas(displayWidth, displayHeight);
 * </code></div>
 *
 * @alt
 * This example does not render anything.
 */
        cov_2nj1dx0f7r.s[74]++;
        _main.default.prototype.displayWidth = screen.width;
        /**
 * System variable that stores the height of the screen display according to The
 * default <a href="#/p5/pixelDensity">pixelDensity</a>. This is used to run a
 * full-screen program on any display size. To return actual screen size,
 * multiply this by pixelDensity.
 *
 * @property {Number} displayHeight
 * @readOnly
 * @example
 * <div class="norender"><code>
 * createCanvas(displayWidth, displayHeight);
 * </code></div>
 *
 * @alt
 * This example does not render anything.
 */
        cov_2nj1dx0f7r.s[75]++;
        _main.default.prototype.displayHeight = screen.height;
        /**
 * System variable that stores the width of the inner window, it maps to
 * window.innerWidth.
 *
 * @property {Number} windowWidth
 * @readOnly
 * @example
 * <div class="norender"><code>
 * createCanvas(windowWidth, windowHeight);
 * </code></div>
 *
 * @alt
 * This example does not render anything.
 */
        cov_2nj1dx0f7r.s[76]++;
        _main.default.prototype.windowWidth = getWindowWidth();
        /**
 * System variable that stores the height of the inner window, it maps to
 * window.innerHeight.
 *
 * @property {Number} windowHeight
 * @readOnly
 * @example
 * <div class="norender"><code>
 * createCanvas(windowWidth, windowHeight);
 * </code></div>
 *
 * @alt
 * This example does not render anything.
 */
        cov_2nj1dx0f7r.s[77]++;
        _main.default.prototype.windowHeight = getWindowHeight();
        function getWindowWidth() {
          cov_2nj1dx0f7r.f[12]++;
          cov_2nj1dx0f7r.s[78]++;
          return (cov_2nj1dx0f7r.b[29][0]++, window.innerWidth) || (cov_2nj1dx0f7r.b[29][1]++, document.documentElement) && (cov_2nj1dx0f7r.b[29][2]++, document.documentElement.clientWidth) || (cov_2nj1dx0f7r.b[29][3]++, document.body) && (cov_2nj1dx0f7r.b[29][4]++, document.body.clientWidth) || (cov_2nj1dx0f7r.b[29][5]++, 0);
        }
        function getWindowHeight() {
          cov_2nj1dx0f7r.f[13]++;
          cov_2nj1dx0f7r.s[79]++;
          return (cov_2nj1dx0f7r.b[30][0]++, window.innerHeight) || (cov_2nj1dx0f7r.b[30][1]++, document.documentElement) && (cov_2nj1dx0f7r.b[30][2]++, document.documentElement.clientHeight) || (cov_2nj1dx0f7r.b[30][3]++, document.body) && (cov_2nj1dx0f7r.b[30][4]++, document.body.clientHeight) || (cov_2nj1dx0f7r.b[30][5]++, 0);
        }        /**
 * System variable that stores the width of the drawing canvas. This value
 * is set by the first parameter of the <a href="#/p5/createCanvas">createCanvas()</a> function.
 * For example, the function call createCanvas(320, 240) sets the width
 * variable to the value 320. The value of width defaults to 100 if
 * <a href="#/p5/createCanvas">createCanvas()</a> is not used in a program.
 *
 * @property {Number} width
 * @readOnly
 */

        cov_2nj1dx0f7r.s[80]++;
        _main.default.prototype.width = 0;
        /**
 * System variable that stores the height of the drawing canvas. This value
 * is set by the second parameter of the <a href="#/p5/createCanvas">createCanvas()</a> function. For
 * example, the function call createCanvas(320, 240) sets the height
 * variable to the value 240. The value of height defaults to 100 if
 * <a href="#/p5/createCanvas">createCanvas()</a> is not used in a program.
 *
 * @property {Number} height
 * @readOnly
 */
        cov_2nj1dx0f7r.s[81]++;
        _main.default.prototype.height = 0;
        var _default = (cov_2nj1dx0f7r.s[82]++, _main.default);
        cov_2nj1dx0f7r.s[83]++;
        exports.default = _default;
      },
      {
        './constants': 145,
        './main': 148,
        'core-js/modules/es.array.concat': 115,
        'core-js/modules/es.array.includes': 119,
        'core-js/modules/es.array.iterator': 120,
        'core-js/modules/es.object.get-own-property-descriptor': 125,
        'core-js/modules/es.object.to-string': 127,
        'core-js/modules/es.string.includes': 132,
        'core-js/modules/es.string.iterator': 133,
        'core-js/modules/es.symbol': 137,
        'core-js/modules/es.symbol.description': 135,
        'core-js/modules/es.symbol.iterator': 136,
        'core-js/modules/es.weak-map': 138,
        'core-js/modules/web.dom-collections.iterator': 140
      }
    ],
    147: [
      function (_dereq_, module, exports) {
        'use strict';
        var cov_21m32c3g8t = function () {
          var path = '/Users/montoyamoraga/github/processing/p5.sound.js/src/core/init.js';
          var hash = 'd5d2e08ba23e82865a609b1a7c6f14b6cbdbd695';
          var global = new Function('return this') ();
          var gcv = '__coverage__';
          var coverageData = {
            path: '/Users/montoyamoraga/github/processing/p5.sound.js/src/core/init.js',
            statementMap: {
              '0': {
                start: {
                  line: 3,
                  column: 0
                },
                end: {
                  line: 3,
                  column: 45
                }
              },
              '1': {
                start: {
                  line: 5,
                  column: 0
                },
                end: {
                  line: 5,
                  column: 47
                }
              },
              '2': {
                start: {
                  line: 7,
                  column: 0
                },
                end: {
                  line: 7,
                  column: 38
                }
              },
              '3': {
                start: {
                  line: 9,
                  column: 0
                },
                end: {
                  line: 9,
                  column: 46
                }
              },
              '4': {
                start: {
                  line: 11,
                  column: 0
                },
                end: {
                  line: 11,
                  column: 56
                }
              },
              '5': {
                start: {
                  line: 13,
                  column: 12
                },
                end: {
                  line: 13,
                  column: 59
                }
              },
              '6': {
                start: {
                  line: 15,
                  column: 39
                },
                end: {
                  line: 15,
                  column: 93
                }
              },
              '7': {
                start: {
                  line: 29,
                  column: 18
                },
                end: {
                  line: 45,
                  column: 1
                }
              },
              '8': {
                start: {
                  line: 33,
                  column: 2
                },
                end: {
                  line: 36,
                  column: 3
                }
              },
              '9': {
                start: {
                  line: 34,
                  column: 4
                },
                end: {
                  line: 34,
                  column: 110
                }
              },
              '10': {
                start: {
                  line: 35,
                  column: 4
                },
                end: {
                  line: 35,
                  column: 11
                }
              },
              '11': {
                start: {
                  line: 38,
                  column: 2
                },
                end: {
                  line: 44,
                  column: 3
                }
              },
              '12': {
                start: {
                  line: 41,
                  column: 4
                },
                end: {
                  line: 43,
                  column: 5
                }
              },
              '13': {
                start: {
                  line: 42,
                  column: 6
                },
                end: {
                  line: 42,
                  column: 26
                }
              },
              '14': {
                start: {
                  line: 48,
                  column: 27
                },
                end: {
                  line: 58,
                  column: 1
                }
              },
              '15': {
                start: {
                  line: 49,
                  column: 2
                },
                end: {
                  line: 57,
                  column: 5
                }
              },
              '16': {
                start: {
                  line: 51,
                  column: 4
                },
                end: {
                  line: 56,
                  column: 5
                }
              },
              '17': {
                start: {
                  line: 52,
                  column: 6
                },
                end: {
                  line: 52,
                  column: 16
                }
              },
              '18': {
                start: {
                  line: 55,
                  column: 6
                },
                end: {
                  line: 55,
                  column: 54
                }
              },
              '19': {
                start: {
                  line: 60,
                  column: 0
                },
                end: {
                  line: 60,
                  column: 75
                }
              }
            },
            fnMap: {
              '0': {
                name: '_interopRequireDefault',
                decl: {
                  start: {
                    line: 15,
                    column: 9
                  },
                  end: {
                    line: 15,
                    column: 31
                  }
                },
                loc: {
                  start: {
                    line: 15,
                    column: 37
                  },
                  end: {
                    line: 15,
                    column: 95
                  }
                },
                line: 15
              },
              '1': {
                name: '_globalInit',
                decl: {
                  start: {
                    line: 29,
                    column: 27
                  },
                  end: {
                    line: 29,
                    column: 38
                  }
                },
                loc: {
                  start: {
                    line: 29,
                    column: 41
                  },
                  end: {
                    line: 45,
                    column: 1
                  }
                },
                line: 29
              },
              '2': {
                name: 'waitForDocumentReady',
                decl: {
                  start: {
                    line: 48,
                    column: 36
                  },
                  end: {
                    line: 48,
                    column: 56
                  }
                },
                loc: {
                  start: {
                    line: 48,
                    column: 59
                  },
                  end: {
                    line: 58,
                    column: 1
                  }
                },
                line: 48
              },
              '3': {
                name: '(anonymous_3)',
                decl: {
                  start: {
                    line: 49,
                    column: 21
                  },
                  end: {
                    line: 49,
                    column: 22
                  }
                },
                loc: {
                  start: {
                    line: 49,
                    column: 48
                  },
                  end: {
                    line: 57,
                    column: 3
                  }
                },
                line: 49
              }
            },
            branchMap: {
              '0': {
                loc: {
                  start: {
                    line: 15,
                    column: 46
                  },
                  end: {
                    line: 15,
                    column: 92
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 15,
                      column: 70
                    },
                    end: {
                      line: 15,
                      column: 73
                    }
                  },
                  {
                    start: {
                      line: 15,
                      column: 76
                    },
                    end: {
                      line: 15,
                      column: 92
                    }
                  }
                ],
                line: 15
              },
              '1': {
                loc: {
                  start: {
                    line: 15,
                    column: 46
                  },
                  end: {
                    line: 15,
                    column: 67
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 15,
                      column: 46
                    },
                    end: {
                      line: 15,
                      column: 49
                    }
                  },
                  {
                    start: {
                      line: 15,
                      column: 53
                    },
                    end: {
                      line: 15,
                      column: 67
                    }
                  }
                ],
                line: 15
              },
              '2': {
                loc: {
                  start: {
                    line: 33,
                    column: 2
                  },
                  end: {
                    line: 36,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 33,
                      column: 2
                    },
                    end: {
                      line: 36,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 33,
                      column: 2
                    },
                    end: {
                      line: 36,
                      column: 3
                    }
                  }
                ],
                line: 33
              },
              '3': {
                loc: {
                  start: {
                    line: 38,
                    column: 2
                  },
                  end: {
                    line: 44,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 38,
                      column: 2
                    },
                    end: {
                      line: 44,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 38,
                      column: 2
                    },
                    end: {
                      line: 44,
                      column: 3
                    }
                  }
                ],
                line: 38
              },
              '4': {
                loc: {
                  start: {
                    line: 41,
                    column: 4
                  },
                  end: {
                    line: 43,
                    column: 5
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 41,
                      column: 4
                    },
                    end: {
                      line: 43,
                      column: 5
                    }
                  },
                  {
                    start: {
                      line: 41,
                      column: 4
                    },
                    end: {
                      line: 43,
                      column: 5
                    }
                  }
                ],
                line: 41
              },
              '5': {
                loc: {
                  start: {
                    line: 41,
                    column: 8
                  },
                  end: {
                    line: 41,
                    column: 139
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 41,
                      column: 9
                    },
                    end: {
                      line: 41,
                      column: 21
                    }
                  },
                  {
                    start: {
                      line: 41,
                      column: 25
                    },
                    end: {
                      line: 41,
                      column: 59
                    }
                  },
                  {
                    start: {
                      line: 41,
                      column: 63
                    },
                    end: {
                      line: 41,
                      column: 74
                    }
                  },
                  {
                    start: {
                      line: 41,
                      column: 78
                    },
                    end: {
                      line: 41,
                      column: 111
                    }
                  },
                  {
                    start: {
                      line: 41,
                      column: 116
                    },
                    end: {
                      line: 41,
                      column: 139
                    }
                  }
                ],
                line: 41
              },
              '6': {
                loc: {
                  start: {
                    line: 51,
                    column: 4
                  },
                  end: {
                    line: 56,
                    column: 5
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 51,
                      column: 4
                    },
                    end: {
                      line: 56,
                      column: 5
                    }
                  },
                  {
                    start: {
                      line: 51,
                      column: 4
                    },
                    end: {
                      line: 56,
                      column: 5
                    }
                  }
                ],
                line: 51
              }
            },
            s: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0,
              '10': 0,
              '11': 0,
              '12': 0,
              '13': 0,
              '14': 0,
              '15': 0,
              '16': 0,
              '17': 0,
              '18': 0,
              '19': 0
            },
            f: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0
            },
            b: {
              '0': [
                0,
                0
              ],
              '1': [
                0,
                0
              ],
              '2': [
                0,
                0
              ],
              '3': [
                0,
                0
              ],
              '4': [
                0,
                0
              ],
              '5': [
                0,
                0,
                0,
                0,
                0
              ],
              '6': [
                0,
                0
              ]
            },
            _coverageSchema: '43e27e138ebf9cfc5966b082cf9a028302ed4184',
            hash: 'd5d2e08ba23e82865a609b1a7c6f14b6cbdbd695'
          };
          var coverage = global[gcv] || (global[gcv] = {
          });
          if (coverage[path] && coverage[path].hash === hash) {
            return coverage[path];
          }
          return coverage[path] = coverageData;
        }();
        _dereq_('core-js/modules/es.array.iterator');
        _dereq_('core-js/modules/es.object.to-string');
        _dereq_('core-js/modules/es.promise');
        _dereq_('core-js/modules/es.string.iterator');
        _dereq_('core-js/modules/web.dom-collections.iterator');
        cov_21m32c3g8t.s[0]++;
        _dereq_('core-js/modules/es.array.iterator');
        cov_21m32c3g8t.s[1]++;
        _dereq_('core-js/modules/es.object.to-string');
        cov_21m32c3g8t.s[2]++;
        _dereq_('core-js/modules/es.promise');
        cov_21m32c3g8t.s[3]++;
        _dereq_('core-js/modules/es.string.iterator');
        cov_21m32c3g8t.s[4]++;
        _dereq_('core-js/modules/web.dom-collections.iterator');
        var _main = (cov_21m32c3g8t.s[5]++, _interopRequireDefault(_dereq_('../core/main')));
        function _interopRequireDefault(obj) {
          cov_21m32c3g8t.f[0]++;
          cov_21m32c3g8t.s[6]++;
          return (cov_21m32c3g8t.b[1][0]++, obj) && (cov_21m32c3g8t.b[1][1]++, obj.__esModule) ? (cov_21m32c3g8t.b[0][0]++, obj) : (cov_21m32c3g8t.b[0][1]++, {
          default:
            obj
          });
        }        /**
 * _globalInit
 *
 * TODO: ???
 * if sketch is on window
 * assume "global" mode
 * and instantiate p5sound automatically
 * otherwise do nothing
 *
 * @private
 * @return {Undefined}
 */

        cov_21m32c3g8t.s[7]++;
        var _globalInit = function _globalInit() {
          cov_21m32c3g8t.f[1]++;
          cov_21m32c3g8t.s[8]++;
          // Could have been any property defined within the p5sound constructor.
          // If that property is already a part of the global object,
          // this code has already run before, likely due to a duplicate import
          if (typeof window._setupDone !== 'undefined') {
            cov_21m32c3g8t.b[2][0]++;
            cov_21m32c3g8t.s[9]++;
            console.warn('p5sound.js seems to have been imported multiple times. Please remove the duplicate import');
            cov_21m32c3g8t.s[10]++;
            return;
          } else {
            cov_21m32c3g8t.b[2][1]++;
          }
          cov_21m32c3g8t.s[11]++;
          if (!window.mocha) {
            cov_21m32c3g8t.b[3][0]++;
            cov_21m32c3g8t.s[12]++;
            // If there is a setup or draw function on the window
            // then instantiate p5sound in "global" mode
            if (((cov_21m32c3g8t.b[5][0]++, window.setup) && (cov_21m32c3g8t.b[5][1]++, typeof window.setup === 'function') || (cov_21m32c3g8t.b[5][2]++, window.draw) && (cov_21m32c3g8t.b[5][3]++, typeof window.draw === 'function')) && (cov_21m32c3g8t.b[5][4]++, !_main.default.instance)) {
              cov_21m32c3g8t.b[4][0]++;
              cov_21m32c3g8t.s[13]++;
              new _main.default();
            } else {
              cov_21m32c3g8t.b[4][1]++;
            }
          } else {
            cov_21m32c3g8t.b[3][1]++;
          }
        }; // make a promise that resolves when the document is ready
        cov_21m32c3g8t.s[14]++;
        var waitForDocumentReady = function waitForDocumentReady() {
          cov_21m32c3g8t.f[2]++;
          cov_21m32c3g8t.s[15]++;
          return new Promise(function (resolve, reject) {
            cov_21m32c3g8t.f[3]++;
            cov_21m32c3g8t.s[16]++;
            // if the page is ready, initialize p5sound immediately
            if (document.readyState === 'complete') {
              cov_21m32c3g8t.b[6][0]++;
              cov_21m32c3g8t.s[17]++;
              resolve(); // if the page is still loading, add an event listener
              // and initialize p5sound as soon as it finishes loading
            } else {
              cov_21m32c3g8t.b[6][1]++;
              cov_21m32c3g8t.s[18]++;
              window.addEventListener('load', resolve, false);
            }
          });
        };
        cov_21m32c3g8t.s[19]++;
        Promise.all([waitForDocumentReady(),
        Promise.resolve()]).then(_globalInit);
      },
      {
        '../core/main': 148,
        'core-js/modules/es.array.iterator': 120,
        'core-js/modules/es.object.to-string': 127,
        'core-js/modules/es.promise': 128,
        'core-js/modules/es.string.iterator': 133,
        'core-js/modules/web.dom-collections.iterator': 140
      }
    ],
    148: [
      function (_dereq_, module, exports) {
        'use strict';
        var cov_1n48hgzlok = function () {
          var path = '/Users/montoyamoraga/github/processing/p5.sound.js/src/core/main.js';
          var hash = 'da1c6c6ee1eed90ae92bb713b2f07037cc9e03e0';
          var global = new Function('return this') ();
          var gcv = '__coverage__';
          var coverageData = {
            path: '/Users/montoyamoraga/github/processing/p5.sound.js/src/core/main.js',
            statementMap: {
              '0': {
                start: {
                  line: 3,
                  column: 24
                },
                end: {
                  line: 3,
                  column: 328
                }
              },
              '1': {
                start: {
                  line: 3,
                  column: 99
                },
                end: {
                  line: 3,
                  column: 154
                }
              },
              '2': {
                start: {
                  line: 3,
                  column: 133
                },
                end: {
                  line: 3,
                  column: 151
                }
              },
              '3': {
                start: {
                  line: 3,
                  column: 164
                },
                end: {
                  line: 3,
                  column: 326
                }
              },
              '4': {
                start: {
                  line: 3,
                  column: 198
                },
                end: {
                  line: 3,
                  column: 323
                }
              },
              '5': {
                start: {
                  line: 3,
                  column: 329
                },
                end: {
                  line: 3,
                  column: 349
                }
              },
              '6': {
                start: {
                  line: 5,
                  column: 0
                },
                end: {
                  line: 5,
                  column: 37
                }
              },
              '7': {
                start: {
                  line: 7,
                  column: 0
                },
                end: {
                  line: 7,
                  column: 49
                }
              },
              '8': {
                start: {
                  line: 9,
                  column: 0
                },
                end: {
                  line: 9,
                  column: 46
                }
              },
              '9': {
                start: {
                  line: 11,
                  column: 0
                },
                end: {
                  line: 11,
                  column: 45
                }
              },
              '10': {
                start: {
                  line: 13,
                  column: 0
                },
                end: {
                  line: 13,
                  column: 45
                }
              },
              '11': {
                start: {
                  line: 15,
                  column: 0
                },
                end: {
                  line: 15,
                  column: 42
                }
              },
              '12': {
                start: {
                  line: 17,
                  column: 0
                },
                end: {
                  line: 17,
                  column: 60
                }
              },
              '13': {
                start: {
                  line: 19,
                  column: 0
                },
                end: {
                  line: 19,
                  column: 47
                }
              },
              '14': {
                start: {
                  line: 21,
                  column: 0
                },
                end: {
                  line: 21,
                  column: 46
                }
              },
              '15': {
                start: {
                  line: 23,
                  column: 0
                },
                end: {
                  line: 23,
                  column: 56
                }
              },
              '16': {
                start: {
                  line: 25,
                  column: 0
                },
                end: {
                  line: 25,
                  column: 56
                }
              },
              '17': {
                start: {
                  line: 27,
                  column: 0
                },
                end: {
                  line: 29,
                  column: 3
                }
              },
              '18': {
                start: {
                  line: 30,
                  column: 0
                },
                end: {
                  line: 30,
                  column: 25
                }
              },
              '19': {
                start: {
                  line: 32,
                  column: 16
                },
                end: {
                  line: 32,
                  column: 63
                }
              },
              '20': {
                start: {
                  line: 34,
                  column: 38
                },
                end: {
                  line: 34,
                  column: 85
                }
              },
              '21': {
                start: {
                  line: 34,
                  column: 73
                },
                end: {
                  line: 34,
                  column: 85
                }
              },
              '22': {
                start: {
                  line: 34,
                  column: 98
                },
                end: {
                  line: 34,
                  column: 111
                }
              },
              '23': {
                start: {
                  line: 34,
                  column: 113
                },
                end: {
                  line: 34,
                  column: 194
                }
              },
              '24': {
                start: {
                  line: 34,
                  column: 178
                },
                end: {
                  line: 34,
                  column: 191
                }
              },
              '25': {
                start: {
                  line: 34,
                  column: 195
                },
                end: {
                  line: 34,
                  column: 208
                }
              },
              '26': {
                start: {
                  line: 36,
                  column: 40
                },
                end: {
                  line: 36,
                  column: 82
                }
              },
              '27': {
                start: {
                  line: 36,
                  column: 69
                },
                end: {
                  line: 36,
                  column: 80
                }
              },
              '28': {
                start: {
                  line: 36,
                  column: 83
                },
                end: {
                  line: 36,
                  column: 187
                }
              },
              '29': {
                start: {
                  line: 36,
                  column: 161
                },
                end: {
                  line: 36,
                  column: 185
                }
              },
              '30': {
                start: {
                  line: 36,
                  column: 200
                },
                end: {
                  line: 36,
                  column: 226
                }
              },
              '31': {
                start: {
                  line: 36,
                  column: 228
                },
                end: {
                  line: 36,
                  column: 283
                }
              },
              '32': {
                start: {
                  line: 36,
                  column: 259
                },
                end: {
                  line: 36,
                  column: 281
                }
              },
              '33': {
                start: {
                  line: 36,
                  column: 297
                },
                end: {
                  line: 36,
                  column: 299
                }
              },
              '34': {
                start: {
                  line: 36,
                  column: 329
                },
                end: {
                  line: 36,
                  column: 385
                }
              },
              '35': {
                start: {
                  line: 36,
                  column: 387
                },
                end: {
                  line: 36,
                  column: 667
                }
              },
              '36': {
                start: {
                  line: 36,
                  column: 410
                },
                end: {
                  line: 36,
                  column: 665
                }
              },
              '37': {
                start: {
                  line: 36,
                  column: 475
                },
                end: {
                  line: 36,
                  column: 547
                }
              },
              '38': {
                start: {
                  line: 36,
                  column: 549
                },
                end: {
                  line: 36,
                  column: 663
                }
              },
              '39': {
                start: {
                  line: 36,
                  column: 587
                },
                end: {
                  line: 36,
                  column: 628
                }
              },
              '40': {
                start: {
                  line: 36,
                  column: 638
                },
                end: {
                  line: 36,
                  column: 661
                }
              },
              '41': {
                start: {
                  line: 36,
                  column: 668
                },
                end: {
                  line: 36,
                  column: 689
                }
              },
              '42': {
                start: {
                  line: 36,
                  column: 690
                },
                end: {
                  line: 36,
                  column: 728
                }
              },
              '43': {
                start: {
                  line: 36,
                  column: 703
                },
                end: {
                  line: 36,
                  column: 726
                }
              },
              '44': {
                start: {
                  line: 36,
                  column: 729
                },
                end: {
                  line: 36,
                  column: 743
                }
              },
              '45': {
                start: {
                  line: 38,
                  column: 50
                },
                end: {
                  line: 38,
                  column: 151
                }
              },
              '46': {
                start: {
                  line: 38,
                  column: 92
                },
                end: {
                  line: 38,
                  column: 149
                }
              },
              '47': {
                start: {
                  line: 40,
                  column: 44
                },
                end: {
                  line: 40,
                  column: 315
                }
              },
              '48': {
                start: {
                  line: 40,
                  column: 57
                },
                end: {
                  line: 40,
                  column: 58
                }
              },
              '49': {
                start: {
                  line: 40,
                  column: 102
                },
                end: {
                  line: 40,
                  column: 110
                }
              },
              '50': {
                start: {
                  line: 40,
                  column: 112
                },
                end: {
                  line: 40,
                  column: 167
                }
              },
              '51': {
                start: {
                  line: 40,
                  column: 168
                },
                end: {
                  line: 40,
                  column: 199
                }
              },
              '52': {
                start: {
                  line: 40,
                  column: 200
                },
                end: {
                  line: 40,
                  column: 254
                }
              },
              '53': {
                start: {
                  line: 40,
                  column: 227
                },
                end: {
                  line: 40,
                  column: 254
                }
              },
              '54': {
                start: {
                  line: 40,
                  column: 255
                },
                end: {
                  line: 40,
                  column: 313
                }
              },
              '55': {
                start: {
                  line: 42,
                  column: 62
                },
                end: {
                  line: 42,
                  column: 131
                }
              },
              '56': {
                start: {
                  line: 42,
                  column: 78
                },
                end: {
                  line: 42,
                  column: 131
                }
              },
              '57': {
                start: {
                  line: 42,
                  column: 132
                },
                end: {
                  line: 42,
                  column: 193
                }
              },
              '58': {
                start: {
                  line: 42,
                  column: 149
                },
                end: {
                  line: 42,
                  column: 193
                }
              },
              '59': {
                start: {
                  line: 42,
                  column: 194
                },
                end: {
                  line: 42,
                  column: 213
                }
              },
              '60': {
                start: {
                  line: 69,
                  column: 0
                },
                end: {
                  line: 713,
                  column: 3
                }
              },
              '61': {
                start: {
                  line: 71,
                  column: 16
                },
                end: {
                  line: 71,
                  column: 20
                }
              },
              '62': {
                start: {
                  line: 73,
                  column: 4
                },
                end: {
                  line: 73,
                  column: 35
                }
              },
              '63': {
                start: {
                  line: 204,
                  column: 4
                },
                end: {
                  line: 204,
                  column: 28
                }
              },
              '64': {
                start: {
                  line: 205,
                  column: 4
                },
                end: {
                  line: 205,
                  column: 30
                }
              },
              '65': {
                start: {
                  line: 207,
                  column: 4
                },
                end: {
                  line: 207,
                  column: 65
                }
              },
              '66': {
                start: {
                  line: 208,
                  column: 4
                },
                end: {
                  line: 208,
                  column: 26
                }
              },
              '67': {
                start: {
                  line: 209,
                  column: 4
                },
                end: {
                  line: 209,
                  column: 28
                }
              },
              '68': {
                start: {
                  line: 210,
                  column: 4
                },
                end: {
                  line: 210,
                  column: 24
                }
              },
              '69': {
                start: {
                  line: 211,
                  column: 4
                },
                end: {
                  line: 211,
                  column: 28
                }
              },
              '70': {
                start: {
                  line: 212,
                  column: 4
                },
                end: {
                  line: 212,
                  column: 27
                }
              },
              '71': {
                start: {
                  line: 213,
                  column: 4
                },
                end: {
                  line: 213,
                  column: 27
                }
              },
              '72': {
                start: {
                  line: 214,
                  column: 4
                },
                end: {
                  line: 214,
                  column: 22
                }
              },
              '73': {
                start: {
                  line: 216,
                  column: 4
                },
                end: {
                  line: 216,
                  column: 40
                }
              },
              '74': {
                start: {
                  line: 218,
                  column: 4
                },
                end: {
                  line: 221,
                  column: 6
                }
              },
              '75': {
                start: {
                  line: 222,
                  column: 4
                },
                end: {
                  line: 241,
                  column: 6
                }
              },
              '76': {
                start: {
                  line: 242,
                  column: 4
                },
                end: {
                  line: 242,
                  column: 27
                }
              },
              '77': {
                start: {
                  line: 243,
                  column: 4
                },
                end: {
                  line: 243,
                  column: 28
                }
              },
              '78': {
                start: {
                  line: 245,
                  column: 4
                },
                end: {
                  line: 245,
                  column: 34
                }
              },
              '79': {
                start: {
                  line: 246,
                  column: 4
                },
                end: {
                  line: 246,
                  column: 36
                }
              },
              '80': {
                start: {
                  line: 247,
                  column: 4
                },
                end: {
                  line: 247,
                  column: 30
                }
              },
              '81': {
                start: {
                  line: 248,
                  column: 4
                },
                end: {
                  line: 248,
                  column: 41
                }
              },
              '82': {
                start: {
                  line: 251,
                  column: 4
                },
                end: {
                  line: 251,
                  column: 33
                }
              },
              '83': {
                start: {
                  line: 252,
                  column: 18
                },
                end: {
                  line: 252,
                  column: 82
                }
              },
              '84': {
                start: {
                  line: 253,
                  column: 36
                },
                end: {
                  line: 253,
                  column: 40
                }
              },
              '85': {
                start: {
                  line: 254,
                  column: 28
                },
                end: {
                  line: 254,
                  column: 33
                }
              },
              '86': {
                start: {
                  line: 255,
                  column: 25
                },
                end: {
                  line: 255,
                  column: 34
                }
              },
              '87': {
                start: {
                  line: 257,
                  column: 4
                },
                end: {
                  line: 275,
                  column: 5
                }
              },
              '88': {
                start: {
                  line: 258,
                  column: 6
                },
                end: {
                  line: 261,
                  column: 7
                }
              },
              '89': {
                start: {
                  line: 258,
                  column: 27
                },
                end: {
                  line: 258,
                  column: 53
                }
              },
              '90': {
                start: {
                  line: 259,
                  column: 19
                },
                end: {
                  line: 259,
                  column: 30
                }
              },
              '91': {
                start: {
                  line: 260,
                  column: 8
                },
                end: {
                  line: 260,
                  column: 91
                }
              },
              '92': {
                start: {
                  line: 263,
                  column: 6
                },
                end: {
                  line: 263,
                  column: 31
                }
              },
              '93': {
                start: {
                  line: 264,
                  column: 6
                },
                end: {
                  line: 264,
                  column: 27
                }
              },
              '94': {
                start: {
                  line: 266,
                  column: 6
                },
                end: {
                  line: 274,
                  column: 7
                }
              },
              '95': {
                start: {
                  line: 267,
                  column: 8
                },
                end: {
                  line: 269,
                  column: 9
                }
              },
              '96': {
                start: {
                  line: 268,
                  column: 10
                },
                end: {
                  line: 268,
                  column: 29
                }
              },
              '97': {
                start: {
                  line: 271,
                  column: 8
                },
                end: {
                  line: 273,
                  column: 9
                }
              },
              '98': {
                start: {
                  line: 272,
                  column: 10
                },
                end: {
                  line: 272,
                  column: 31
                }
              },
              '99': {
                start: {
                  line: 277,
                  column: 4
                },
                end: {
                  line: 279,
                  column: 5
                }
              },
              '100': {
                start: {
                  line: 278,
                  column: 6
                },
                end: {
                  line: 278,
                  column: 44
                }
              },
              '101': {
                start: {
                  line: 281,
                  column: 4
                },
                end: {
                  line: 283,
                  column: 5
                }
              },
              '102': {
                start: {
                  line: 282,
                  column: 6
                },
                end: {
                  line: 282,
                  column: 39
                }
              },
              '103': {
                start: {
                  line: 285,
                  column: 4
                },
                end: {
                  line: 341,
                  column: 6
                }
              },
              '104': {
                start: {
                  line: 287,
                  column: 6
                },
                end: {
                  line: 291,
                  column: 7
                }
              },
              '105': {
                start: {
                  line: 288,
                  column: 8
                },
                end: {
                  line: 290,
                  column: 9
                }
              },
              '106': {
                start: {
                  line: 289,
                  column: 10
                },
                end: {
                  line: 289,
                  column: 69
                }
              },
              '107': {
                start: {
                  line: 293,
                  column: 20
                },
                end: {
                  line: 293,
                  column: 52
                }
              },
              '108': {
                start: {
                  line: 295,
                  column: 6
                },
                end: {
                  line: 340,
                  column: 7
                }
              },
              '109': {
                start: {
                  line: 299,
                  column: 28
                },
                end: {
                  line: 299,
                  column: 75
                }
              },
              '110': {
                start: {
                  line: 301,
                  column: 8
                },
                end: {
                  line: 310,
                  column: 9
                }
              },
              '111': {
                start: {
                  line: 302,
                  column: 10
                },
                end: {
                  line: 302,
                  column: 56
                }
              },
              '112': {
                start: {
                  line: 303,
                  column: 10
                },
                end: {
                  line: 303,
                  column: 49
                }
              },
              '113': {
                start: {
                  line: 304,
                  column: 10
                },
                end: {
                  line: 304,
                  column: 52
                }
              },
              '114': {
                start: {
                  line: 305,
                  column: 10
                },
                end: {
                  line: 305,
                  column: 52
                }
              },
              '115': {
                start: {
                  line: 307,
                  column: 22
                },
                end: {
                  line: 307,
                  column: 54
                }
              },
              '116': {
                start: {
                  line: 309,
                  column: 10
                },
                end: {
                  line: 309,
                  column: 43
                }
              },
              '117': {
                start: {
                  line: 312,
                  column: 23
                },
                end: {
                  line: 312,
                  column: 44
                }
              },
              '118': {
                start: {
                  line: 314,
                  column: 8
                },
                end: {
                  line: 329,
                  column: 9
                }
              },
              '119': {
                start: {
                  line: 316,
                  column: 10
                },
                end: {
                  line: 316,
                  column: 57
                }
              },
              '120': {
                start: {
                  line: 317,
                  column: 20
                },
                end: {
                  line: 317,
                  column: 36
                }
              },
              '121': {
                start: {
                  line: 319,
                  column: 10
                },
                end: {
                  line: 325,
                  column: 11
                }
              },
              '122': {
                start: {
                  line: 320,
                  column: 12
                },
                end: {
                  line: 322,
                  column: 13
                }
              },
              '123': {
                start: {
                  line: 321,
                  column: 14
                },
                end: {
                  line: 321,
                  column: 65
                }
              },
              '124': {
                start: {
                  line: 324,
                  column: 12
                },
                end: {
                  line: 324,
                  column: 24
                }
              },
              '125': {
                start: {
                  line: 327,
                  column: 10
                },
                end: {
                  line: 327,
                  column: 64
                }
              },
              '126': {
                start: {
                  line: 328,
                  column: 10
                },
                end: {
                  line: 328,
                  column: 56
                }
              },
              '127': {
                start: {
                  line: 331,
                  column: 8
                },
                end: {
                  line: 331,
                  column: 26
                }
              },
              '128': {
                start: {
                  line: 333,
                  column: 8
                },
                end: {
                  line: 333,
                  column: 38
                }
              },
              '129': {
                start: {
                  line: 335,
                  column: 8
                },
                end: {
                  line: 335,
                  column: 23
                }
              },
              '130': {
                start: {
                  line: 337,
                  column: 8
                },
                end: {
                  line: 339,
                  column: 9
                }
              },
              '131': {
                start: {
                  line: 338,
                  column: 10
                },
                end: {
                  line: 338,
                  column: 24
                }
              },
              '132': {
                start: {
                  line: 343,
                  column: 4
                },
                end: {
                  line: 364,
                  column: 6
                }
              },
              '133': {
                start: {
                  line: 344,
                  column: 20
                },
                end: {
                  line: 344,
                  column: 50
                }
              },
              '134': {
                start: {
                  line: 346,
                  column: 6
                },
                end: {
                  line: 363,
                  column: 7
                }
              },
              '135': {
                start: {
                  line: 347,
                  column: 28
                },
                end: {
                  line: 347,
                  column: 77
                }
              },
              '136': {
                start: {
                  line: 349,
                  column: 8
                },
                end: {
                  line: 351,
                  column: 9
                }
              },
              '137': {
                start: {
                  line: 350,
                  column: 10
                },
                end: {
                  line: 350,
                  column: 62
                }
              },
              '138': {
                start: {
                  line: 353,
                  column: 8
                },
                end: {
                  line: 362,
                  column: 9
                }
              },
              '139': {
                start: {
                  line: 354,
                  column: 10
                },
                end: {
                  line: 354,
                  column: 63
                }
              },
              '140': {
                start: {
                  line: 355,
                  column: 10
                },
                end: {
                  line: 355,
                  column: 61
                }
              },
              '141': {
                start: {
                  line: 357,
                  column: 10
                },
                end: {
                  line: 357,
                  column: 27
                }
              },
              '142': {
                start: {
                  line: 359,
                  column: 10
                },
                end: {
                  line: 361,
                  column: 11
                }
              },
              '143': {
                start: {
                  line: 360,
                  column: 12
                },
                end: {
                  line: 360,
                  column: 28
                }
              },
              '144': {
                start: {
                  line: 366,
                  column: 4
                },
                end: {
                  line: 374,
                  column: 6
                }
              },
              '145': {
                start: {
                  line: 367,
                  column: 20
                },
                end: {
                  line: 367,
                  column: 50
                }
              },
              '146': {
                start: {
                  line: 369,
                  column: 6
                },
                end: {
                  line: 373,
                  column: 7
                }
              },
              '147': {
                start: {
                  line: 370,
                  column: 8
                },
                end: {
                  line: 370,
                  column: 73
                }
              },
              '148': {
                start: {
                  line: 372,
                  column: 8
                },
                end: {
                  line: 372,
                  column: 40
                }
              },
              '149': {
                start: {
                  line: 376,
                  column: 4
                },
                end: {
                  line: 390,
                  column: 6
                }
              },
              '150': {
                start: {
                  line: 377,
                  column: 19
                },
                end: {
                  line: 377,
                  column: 23
                }
              },
              '151': {
                start: {
                  line: 379,
                  column: 6
                },
                end: {
                  line: 389,
                  column: 8
                }
              },
              '152': {
                start: {
                  line: 381,
                  column: 8
                },
                end: {
                  line: 381,
                  column: 35
                }
              },
              '153': {
                start: {
                  line: 384,
                  column: 8
                },
                end: {
                  line: 386,
                  column: 9
                }
              },
              '154': {
                start: {
                  line: 384,
                  column: 24
                },
                end: {
                  line: 384,
                  column: 40
                }
              },
              '155': {
                start: {
                  line: 384,
                  column: 49
                },
                end: {
                  line: 384,
                  column: 64
                }
              },
              '156': {
                start: {
                  line: 384,
                  column: 73
                },
                end: {
                  line: 384,
                  column: 74
                }
              },
              '157': {
                start: {
                  line: 385,
                  column: 10
                },
                end: {
                  line: 385,
                  column: 39
                }
              },
              '158': {
                start: {
                  line: 388,
                  column: 8
                },
                end: {
                  line: 388,
                  column: 73
                }
              },
              '159': {
                start: {
                  line: 392,
                  column: 4
                },
                end: {
                  line: 398,
                  column: 6
                }
              },
              '160': {
                start: {
                  line: 393,
                  column: 20
                },
                end: {
                  line: 393,
                  column: 50
                }
              },
              '161': {
                start: {
                  line: 395,
                  column: 6
                },
                end: {
                  line: 395,
                  column: 39
                }
              },
              '162': {
                start: {
                  line: 395,
                  column: 32
                },
                end: {
                  line: 395,
                  column: 39
                }
              },
              '163': {
                start: {
                  line: 397,
                  column: 6
                },
                end: {
                  line: 397,
                  column: 71
                }
              },
              '164': {
                start: {
                  line: 400,
                  column: 4
                },
                end: {
                  line: 465,
                  column: 6
                }
              },
              '165': {
                start: {
                  line: 404,
                  column: 6
                },
                end: {
                  line: 404,
                  column: 97
                }
              },
              '166': {
                start: {
                  line: 407,
                  column: 20
                },
                end: {
                  line: 407,
                  column: 52
                }
              },
              '167': {
                start: {
                  line: 409,
                  column: 6
                },
                end: {
                  line: 417,
                  column: 7
                }
              },
              '168': {
                start: {
                  line: 410,
                  column: 8
                },
                end: {
                  line: 416,
                  column: 9
                }
              },
              '169': {
                start: {
                  line: 411,
                  column: 10
                },
                end: {
                  line: 411,
                  column: 51
                }
              },
              '170': {
                start: {
                  line: 413,
                  column: 10
                },
                end: {
                  line: 415,
                  column: 11
                }
              },
              '171': {
                start: {
                  line: 414,
                  column: 12
                },
                end: {
                  line: 414,
                  column: 48
                }
              },
              '172': {
                start: {
                  line: 420,
                  column: 6
                },
                end: {
                  line: 420,
                  column: 52
                }
              },
              '173': {
                start: {
                  line: 421,
                  column: 6
                },
                end: {
                  line: 421,
                  column: 34
                }
              },
              '174': {
                start: {
                  line: 424,
                  column: 6
                },
                end: {
                  line: 426,
                  column: 7
                }
              },
              '175': {
                start: {
                  line: 425,
                  column: 8
                },
                end: {
                  line: 425,
                  column: 24
                }
              },
              '176': {
                start: {
                  line: 429,
                  column: 21
                },
                end: {
                  line: 429,
                  column: 60
                }
              },
              '177': {
                start: {
                  line: 430,
                  column: 39
                },
                end: {
                  line: 430,
                  column: 43
                }
              },
              '178': {
                start: {
                  line: 431,
                  column: 31
                },
                end: {
                  line: 431,
                  column: 36
                }
              },
              '179': {
                start: {
                  line: 432,
                  column: 28
                },
                end: {
                  line: 432,
                  column: 37
                }
              },
              '180': {
                start: {
                  line: 434,
                  column: 6
                },
                end: {
                  line: 456,
                  column: 7
                }
              },
              '181': {
                start: {
                  line: 435,
                  column: 8
                },
                end: {
                  line: 442,
                  column: 9
                }
              },
              '182': {
                start: {
                  line: 435,
                  column: 30
                },
                end: {
                  line: 435,
                  column: 57
                }
              },
              '183': {
                start: {
                  line: 436,
                  column: 18
                },
                end: {
                  line: 436,
                  column: 30
                }
              },
              '184': {
                start: {
                  line: 438,
                  column: 10
                },
                end: {
                  line: 441,
                  column: 11
                }
              },
              '185': {
                start: {
                  line: 439,
                  column: 12
                },
                end: {
                  line: 439,
                  column: 36
                }
              },
              '186': {
                start: {
                  line: 440,
                  column: 12
                },
                end: {
                  line: 440,
                  column: 36
                }
              },
              '187': {
                start: {
                  line: 444,
                  column: 8
                },
                end: {
                  line: 444,
                  column: 34
                }
              },
              '188': {
                start: {
                  line: 445,
                  column: 8
                },
                end: {
                  line: 445,
                  column: 30
                }
              },
              '189': {
                start: {
                  line: 447,
                  column: 8
                },
                end: {
                  line: 455,
                  column: 9
                }
              },
              '190': {
                start: {
                  line: 448,
                  column: 10
                },
                end: {
                  line: 450,
                  column: 11
                }
              },
              '191': {
                start: {
                  line: 449,
                  column: 12
                },
                end: {
                  line: 449,
                  column: 32
                }
              },
              '192': {
                start: {
                  line: 452,
                  column: 10
                },
                end: {
                  line: 454,
                  column: 11
                }
              },
              '193': {
                start: {
                  line: 453,
                  column: 12
                },
                end: {
                  line: 453,
                  column: 34
                }
              },
              '194': {
                start: {
                  line: 458,
                  column: 6
                },
                end: {
                  line: 458,
                  column: 60
                }
              },
              '195': {
                start: {
                  line: 459,
                  column: 6
                },
                end: {
                  line: 459,
                  column: 58
                }
              },
              '196': {
                start: {
                  line: 460,
                  column: 6
                },
                end: {
                  line: 460,
                  column: 30
                }
              },
              '197': {
                start: {
                  line: 462,
                  column: 6
                },
                end: {
                  line: 464,
                  column: 7
                }
              },
              '198': {
                start: {
                  line: 463,
                  column: 8
                },
                end: {
                  line: 463,
                  column: 34
                }
              },
              '199': {
                start: {
                  line: 467,
                  column: 4
                },
                end: {
                  line: 513,
                  column: 6
                }
              },
              '200': {
                start: {
                  line: 468,
                  column: 16
                },
                end: {
                  line: 468,
                  column: 40
                }
              },
              '201': {
                start: {
                  line: 469,
                  column: 28
                },
                end: {
                  line: 469,
                  column: 60
                }
              },
              '202': {
                start: {
                  line: 470,
                  column: 39
                },
                end: {
                  line: 470,
                  column: 68
                }
              },
              '203': {
                start: {
                  line: 479,
                  column: 20
                },
                end: {
                  line: 479,
                  column: 21
                }
              },
              '204': {
                start: {
                  line: 481,
                  column: 6
                },
                end: {
                  line: 506,
                  column: 7
                }
              },
              '205': {
                start: {
                  line: 483,
                  column: 8
                },
                end: {
                  line: 483,
                  column: 57
                }
              },
              '206': {
                start: {
                  line: 485,
                  column: 8
                },
                end: {
                  line: 485,
                  column: 57
                }
              },
              '207': {
                start: {
                  line: 487,
                  column: 8
                },
                end: {
                  line: 487,
                  column: 52
                }
              },
              '208': {
                start: {
                  line: 489,
                  column: 8
                },
                end: {
                  line: 489,
                  column: 23
                }
              },
              '209': {
                start: {
                  line: 491,
                  column: 8
                },
                end: {
                  line: 491,
                  column: 108
                }
              },
              '210': {
                start: {
                  line: 492,
                  column: 8
                },
                end: {
                  line: 492,
                  column: 39
                }
              },
              '211': {
                start: {
                  line: 497,
                  column: 8
                },
                end: {
                  line: 505,
                  column: 9
                }
              },
              '212': {
                start: {
                  line: 498,
                  column: 10
                },
                end: {
                  line: 498,
                  column: 37
                }
              },
              '213': {
                start: {
                  line: 502,
                  column: 10
                },
                end: {
                  line: 502,
                  column: 42
                }
              },
              '214': {
                start: {
                  line: 504,
                  column: 10
                },
                end: {
                  line: 504,
                  column: 42
                }
              },
              '215': {
                start: {
                  line: 510,
                  column: 6
                },
                end: {
                  line: 512,
                  column: 7
                }
              },
              '216': {
                start: {
                  line: 511,
                  column: 8
                },
                end: {
                  line: 511,
                  column: 73
                }
              },
              '217': {
                start: {
                  line: 515,
                  column: 4
                },
                end: {
                  line: 521,
                  column: 6
                }
              },
              '218': {
                start: {
                  line: 516,
                  column: 6
                },
                end: {
                  line: 516,
                  column: 26
                }
              },
              '219': {
                start: {
                  line: 518,
                  column: 6
                },
                end: {
                  line: 520,
                  column: 7
                }
              },
              '220': {
                start: {
                  line: 519,
                  column: 8
                },
                end: {
                  line: 519,
                  column: 29
                }
              },
              '221': {
                start: {
                  line: 524,
                  column: 4
                },
                end: {
                  line: 528,
                  column: 13
                }
              },
              '222': {
                start: {
                  line: 525,
                  column: 6
                },
                end: {
                  line: 527,
                  column: 7
                }
              },
              '223': {
                start: {
                  line: 526,
                  column: 8
                },
                end: {
                  line: 526,
                  column: 21
                }
              },
              '224': {
                start: {
                  line: 531,
                  column: 4
                },
                end: {
                  line: 531,
                  column: 33
                }
              },
              '225': {
                start: {
                  line: 533,
                  column: 29
                },
                end: {
                  line: 533,
                  column: 71
                }
              },
              '226': {
                start: {
                  line: 537,
                  column: 4
                },
                end: {
                  line: 572,
                  column: 5
                }
              },
              '227': {
                start: {
                  line: 538,
                  column: 6
                },
                end: {
                  line: 538,
                  column: 28
                }
              },
              '228': {
                start: {
                  line: 539,
                  column: 6
                },
                end: {
                  line: 539,
                  column: 30
                }
              },
              '229': {
                start: {
                  line: 541,
                  column: 6
                },
                end: {
                  line: 557,
                  column: 7
                }
              },
              '230': {
                start: {
                  line: 542,
                  column: 8
                },
                end: {
                  line: 556,
                  column: 9
                }
              },
              '231': {
                start: {
                  line: 543,
                  column: 19
                },
                end: {
                  line: 543,
                  column: 33
                }
              },
              '232': {
                start: {
                  line: 545,
                  column: 10
                },
                end: {
                  line: 553,
                  column: 11
                }
              },
              '233': {
                start: {
                  line: 546,
                  column: 12
                },
                end: {
                  line: 552,
                  column: 13
                }
              },
              '234': {
                start: {
                  line: 549,
                  column: 14
                },
                end: {
                  line: 549,
                  column: 58
                }
              },
              '235': {
                start: {
                  line: 551,
                  column: 14
                },
                end: {
                  line: 551,
                  column: 69
                }
              },
              '236': {
                start: {
                  line: 555,
                  column: 10
                },
                end: {
                  line: 555,
                  column: 54
                }
              },
              '237': {
                start: {
                  line: 560,
                  column: 6
                },
                end: {
                  line: 564,
                  column: 7
                }
              },
              '238': {
                start: {
                  line: 561,
                  column: 8
                },
                end: {
                  line: 563,
                  column: 9
                }
              },
              '239': {
                start: {
                  line: 562,
                  column: 10
                },
                end: {
                  line: 562,
                  column: 43
                }
              },
              '240': {
                start: {
                  line: 568,
                  column: 6
                },
                end: {
                  line: 568,
                  column: 19
                }
              },
              '241': {
                start: {
                  line: 571,
                  column: 6
                },
                end: {
                  line: 571,
                  column: 50
                }
              },
              '242': {
                start: {
                  line: 575,
                  column: 4
                },
                end: {
                  line: 585,
                  column: 5
                }
              },
              '243': {
                start: {
                  line: 576,
                  column: 14
                },
                end: {
                  line: 576,
                  column: 35
                }
              },
              '244': {
                start: {
                  line: 578,
                  column: 6
                },
                end: {
                  line: 584,
                  column: 7
                }
              },
              '245': {
                start: {
                  line: 579,
                  column: 16
                },
                end: {
                  line: 579,
                  column: 28
                }
              },
              '246': {
                start: {
                  line: 580,
                  column: 8
                },
                end: {
                  line: 582,
                  column: 11
                }
              },
              '247': {
                start: {
                  line: 583,
                  column: 8
                },
                end: {
                  line: 583,
                  column: 28
                }
              },
              '248': {
                start: {
                  line: 587,
                  column: 23
                },
                end: {
                  line: 589,
                  column: 5
                }
              },
              '249': {
                start: {
                  line: 588,
                  column: 6
                },
                end: {
                  line: 588,
                  column: 42
                }
              },
              '250': {
                start: {
                  line: 591,
                  column: 22
                },
                end: {
                  line: 593,
                  column: 5
                }
              },
              '251': {
                start: {
                  line: 592,
                  column: 6
                },
                end: {
                  line: 592,
                  column: 43
                }
              },
              '252': {
                start: {
                  line: 595,
                  column: 4
                },
                end: {
                  line: 595,
                  column: 51
                }
              },
              '253': {
                start: {
                  line: 596,
                  column: 4
                },
                end: {
                  line: 596,
                  column: 49
                }
              },
              '254': {
                start: {
                  line: 597,
                  column: 4
                },
                end: {
                  line: 600,
                  column: 7
                }
              },
              '255': {
                start: {
                  line: 598,
                  column: 6
                },
                end: {
                  line: 598,
                  column: 56
                }
              },
              '256': {
                start: {
                  line: 599,
                  column: 6
                },
                end: {
                  line: 599,
                  column: 54
                }
              },
              '257': {
                start: {
                  line: 602,
                  column: 4
                },
                end: {
                  line: 606,
                  column: 5
                }
              },
              '258': {
                start: {
                  line: 603,
                  column: 6
                },
                end: {
                  line: 603,
                  column: 20
                }
              },
              '259': {
                start: {
                  line: 605,
                  column: 6
                },
                end: {
                  line: 605,
                  column: 69
                }
              },
              '260': {
                start: {
                  line: 609,
                  column: 2
                },
                end: {
                  line: 710,
                  column: 6
                }
              },
              '261': {
                start: {
                  line: 612,
                  column: 6
                },
                end: {
                  line: 617,
                  column: 8
                }
              },
              '262': {
                start: {
                  line: 618,
                  column: 6
                },
                end: {
                  line: 618,
                  column: 24
                }
              },
              '263': {
                start: {
                  line: 619,
                  column: 6
                },
                end: {
                  line: 619,
                  column: 30
                }
              },
              '264': {
                start: {
                  line: 620,
                  column: 6
                },
                end: {
                  line: 620,
                  column: 29
                }
              },
              '265': {
                start: {
                  line: 621,
                  column: 6
                },
                end: {
                  line: 621,
                  column: 38
                }
              },
              '266': {
                start: {
                  line: 622,
                  column: 6
                },
                end: {
                  line: 626,
                  column: 8
                }
              },
              '267': {
                start: {
                  line: 627,
                  column: 6
                },
                end: {
                  line: 627,
                  column: 26
                }
              },
              '268': {
                start: {
                  line: 633,
                  column: 6
                },
                end: {
                  line: 635,
                  column: 7
                }
              },
              '269': {
                start: {
                  line: 634,
                  column: 8
                },
                end: {
                  line: 634,
                  column: 58
                }
              },
              '270': {
                start: {
                  line: 640,
                  column: 19
                },
                end: {
                  line: 640,
                  column: 44
                }
              },
              '271': {
                start: {
                  line: 642,
                  column: 6
                },
                end: {
                  line: 644,
                  column: 7
                }
              },
              '272': {
                start: {
                  line: 643,
                  column: 8
                },
                end: {
                  line: 643,
                  column: 45
                }
              },
              '273': {
                start: {
                  line: 646,
                  column: 6
                },
                end: {
                  line: 646,
                  column: 46
                }
              },
              '274': {
                start: {
                  line: 656,
                  column: 20
                },
                end: {
                  line: 656,
                  column: 90
                }
              },
              '275': {
                start: {
                  line: 657,
                  column: 25
                },
                end: {
                  line: 657,
                  column: 55
                }
              },
              '276': {
                start: {
                  line: 658,
                  column: 16
                },
                end: {
                  line: 658,
                  column: 56
                }
              },
              '277': {
                start: {
                  line: 659,
                  column: 37
                },
                end: {
                  line: 665,
                  column: 7
                }
              },
              '278': {
                start: {
                  line: 666,
                  column: 6
                },
                end: {
                  line: 708,
                  column: 8
                }
              },
              '279': {
                start: {
                  line: 667,
                  column: 8
                },
                end: {
                  line: 707,
                  column: 9
                }
              },
              '280': {
                start: {
                  line: 668,
                  column: 10
                },
                end: {
                  line: 704,
                  column: 11
                }
              },
              '281': {
                start: {
                  line: 677,
                  column: 12
                },
                end: {
                  line: 679,
                  column: 13
                }
              },
              '282': {
                start: {
                  line: 678,
                  column: 14
                },
                end: {
                  line: 678,
                  column: 77
                }
              },
              '283': {
                start: {
                  line: 686,
                  column: 12
                },
                end: {
                  line: 701,
                  column: 15
                }
              },
              '284': {
                start: {
                  line: 690,
                  column: 16
                },
                end: {
                  line: 690,
                  column: 29
                }
              },
              '285': {
                start: {
                  line: 693,
                  column: 16
                },
                end: {
                  line: 698,
                  column: 19
                }
              },
              '286': {
                start: {
                  line: 699,
                  column: 16
                },
                end: {
                  line: 699,
                  column: 161
                }
              },
              '287': {
                start: {
                  line: 703,
                  column: 12
                },
                end: {
                  line: 703,
                  column: 39
                }
              },
              '288': {
                start: {
                  line: 706,
                  column: 10
                },
                end: {
                  line: 706,
                  column: 37
                }
              },
              '289': {
                start: {
                  line: 712,
                  column: 2
                },
                end: {
                  line: 712,
                  column: 17
                }
              },
              '290': {
                start: {
                  line: 717,
                  column: 0
                },
                end: {
                  line: 717,
                  column: 24
                }
              },
              '291': {
                start: {
                  line: 719,
                  column: 0
                },
                end: {
                  line: 721,
                  column: 1
                }
              },
              '292': {
                start: {
                  line: 720,
                  column: 2
                },
                end: {
                  line: 720,
                  column: 38
                }
              },
              '293': {
                start: {
                  line: 725,
                  column: 0
                },
                end: {
                  line: 725,
                  column: 36
                }
              },
              '294': {
                start: {
                  line: 728,
                  column: 0
                },
                end: {
                  line: 732,
                  column: 2
                }
              },
              '295': {
                start: {
                  line: 733,
                  column: 0
                },
                end: {
                  line: 738,
                  column: 2
                }
              },
              '296': {
                start: {
                  line: 739,
                  column: 0
                },
                end: {
                  line: 739,
                  column: 49
                }
              },
              '297': {
                start: {
                  line: 740,
                  column: 15
                },
                end: {
                  line: 740,
                  column: 22
                }
              },
              '298': {
                start: {
                  line: 741,
                  column: 0
                },
                end: {
                  line: 741,
                  column: 27
                }
              }
            },
            fnMap: {
              '0': {
                name: '_typeof',
                decl: {
                  start: {
                    line: 3,
                    column: 9
                  },
                  end: {
                    line: 3,
                    column: 16
                  }
                },
                loc: {
                  start: {
                    line: 3,
                    column: 22
                  },
                  end: {
                    line: 3,
                    column: 351
                  }
                },
                line: 3
              },
              '1': {
                name: '_typeof',
                decl: {
                  start: {
                    line: 3,
                    column: 118
                  },
                  end: {
                    line: 3,
                    column: 125
                  }
                },
                loc: {
                  start: {
                    line: 3,
                    column: 131
                  },
                  end: {
                    line: 3,
                    column: 153
                  }
                },
                line: 3
              },
              '2': {
                name: '_typeof',
                decl: {
                  start: {
                    line: 3,
                    column: 183
                  },
                  end: {
                    line: 3,
                    column: 190
                  }
                },
                loc: {
                  start: {
                    line: 3,
                    column: 196
                  },
                  end: {
                    line: 3,
                    column: 325
                  }
                },
                line: 3
              },
              '3': {
                name: '_getRequireWildcardCache',
                decl: {
                  start: {
                    line: 34,
                    column: 9
                  },
                  end: {
                    line: 34,
                    column: 33
                  }
                },
                loc: {
                  start: {
                    line: 34,
                    column: 36
                  },
                  end: {
                    line: 34,
                    column: 210
                  }
                },
                line: 34
              },
              '4': {
                name: '_getRequireWildcardCache',
                decl: {
                  start: {
                    line: 34,
                    column: 149
                  },
                  end: {
                    line: 34,
                    column: 173
                  }
                },
                loc: {
                  start: {
                    line: 34,
                    column: 176
                  },
                  end: {
                    line: 34,
                    column: 193
                  }
                },
                line: 34
              },
              '5': {
                name: '_interopRequireWildcard',
                decl: {
                  start: {
                    line: 36,
                    column: 9
                  },
                  end: {
                    line: 36,
                    column: 32
                  }
                },
                loc: {
                  start: {
                    line: 36,
                    column: 38
                  },
                  end: {
                    line: 36,
                    column: 745
                  }
                },
                line: 36
              },
              '6': {
                name: '_classCallCheck',
                decl: {
                  start: {
                    line: 38,
                    column: 9
                  },
                  end: {
                    line: 38,
                    column: 24
                  }
                },
                loc: {
                  start: {
                    line: 38,
                    column: 48
                  },
                  end: {
                    line: 38,
                    column: 153
                  }
                },
                line: 38
              },
              '7': {
                name: '_defineProperties',
                decl: {
                  start: {
                    line: 40,
                    column: 9
                  },
                  end: {
                    line: 40,
                    column: 26
                  }
                },
                loc: {
                  start: {
                    line: 40,
                    column: 42
                  },
                  end: {
                    line: 40,
                    column: 317
                  }
                },
                line: 40
              },
              '8': {
                name: '_createClass',
                decl: {
                  start: {
                    line: 42,
                    column: 9
                  },
                  end: {
                    line: 42,
                    column: 21
                  }
                },
                loc: {
                  start: {
                    line: 42,
                    column: 60
                  },
                  end: {
                    line: 42,
                    column: 215
                  }
                },
                line: 42
              },
              '9': {
                name: '(anonymous_9)',
                decl: {
                  start: {
                    line: 69,
                    column: 0
                  },
                  end: {
                    line: 69,
                    column: 1
                  }
                },
                loc: {
                  start: {
                    line: 69,
                    column: 12
                  },
                  end: {
                    line: 713,
                    column: 1
                  }
                },
                line: 69
              },
              '10': {
                name: 'p5sound',
                decl: {
                  start: {
                    line: 70,
                    column: 11
                  },
                  end: {
                    line: 70,
                    column: 18
                  }
                },
                loc: {
                  start: {
                    line: 70,
                    column: 39
                  },
                  end: {
                    line: 607,
                    column: 3
                  }
                },
                line: 70
              },
              '11': {
                name: '(anonymous_11)',
                decl: {
                  start: {
                    line: 285,
                    column: 18
                  },
                  end: {
                    line: 285,
                    column: 19
                  }
                },
                loc: {
                  start: {
                    line: 285,
                    column: 30
                  },
                  end: {
                    line: 341,
                    column: 5
                  }
                },
                line: 285
              },
              '12': {
                name: '(anonymous_12)',
                decl: {
                  start: {
                    line: 343,
                    column: 33
                  },
                  end: {
                    line: 343,
                    column: 34
                  }
                },
                loc: {
                  start: {
                    line: 343,
                    column: 45
                  },
                  end: {
                    line: 364,
                    column: 5
                  }
                },
                line: 343
              },
              '13': {
                name: '(anonymous_13)',
                decl: {
                  start: {
                    line: 366,
                    column: 29
                  },
                  end: {
                    line: 366,
                    column: 30
                  }
                },
                loc: {
                  start: {
                    line: 366,
                    column: 41
                  },
                  end: {
                    line: 374,
                    column: 5
                  }
                },
                line: 366
              },
              '14': {
                name: '(anonymous_14)',
                decl: {
                  start: {
                    line: 376,
                    column: 24
                  },
                  end: {
                    line: 376,
                    column: 25
                  }
                },
                loc: {
                  start: {
                    line: 376,
                    column: 47
                  },
                  end: {
                    line: 390,
                    column: 5
                  }
                },
                line: 376
              },
              '15': {
                name: '(anonymous_15)',
                decl: {
                  start: {
                    line: 379,
                    column: 13
                  },
                  end: {
                    line: 379,
                    column: 14
                  }
                },
                loc: {
                  start: {
                    line: 379,
                    column: 25
                  },
                  end: {
                    line: 389,
                    column: 7
                  }
                },
                line: 379
              },
              '16': {
                name: '(anonymous_16)',
                decl: {
                  start: {
                    line: 392,
                    column: 29
                  },
                  end: {
                    line: 392,
                    column: 30
                  }
                },
                loc: {
                  start: {
                    line: 392,
                    column: 41
                  },
                  end: {
                    line: 398,
                    column: 5
                  }
                },
                line: 392
              },
              '17': {
                name: '(anonymous_17)',
                decl: {
                  start: {
                    line: 400,
                    column: 18
                  },
                  end: {
                    line: 400,
                    column: 19
                  }
                },
                loc: {
                  start: {
                    line: 400,
                    column: 30
                  },
                  end: {
                    line: 465,
                    column: 5
                  }
                },
                line: 400
              },
              '18': {
                name: '(anonymous_18)',
                decl: {
                  start: {
                    line: 467,
                    column: 17
                  },
                  end: {
                    line: 467,
                    column: 18
                  }
                },
                loc: {
                  start: {
                    line: 467,
                    column: 29
                  },
                  end: {
                    line: 513,
                    column: 5
                  }
                },
                line: 467
              },
              '19': {
                name: '(anonymous_19)',
                decl: {
                  start: {
                    line: 515,
                    column: 24
                  },
                  end: {
                    line: 515,
                    column: 25
                  }
                },
                loc: {
                  start: {
                    line: 515,
                    column: 47
                  },
                  end: {
                    line: 521,
                    column: 5
                  }
                },
                line: 515
              },
              '20': {
                name: '(anonymous_20)',
                decl: {
                  start: {
                    line: 524,
                    column: 41
                  },
                  end: {
                    line: 524,
                    column: 42
                  }
                },
                loc: {
                  start: {
                    line: 524,
                    column: 54
                  },
                  end: {
                    line: 528,
                    column: 5
                  }
                },
                line: 524
              },
              '21': {
                name: 'focusHandler',
                decl: {
                  start: {
                    line: 587,
                    column: 32
                  },
                  end: {
                    line: 587,
                    column: 44
                  }
                },
                loc: {
                  start: {
                    line: 587,
                    column: 47
                  },
                  end: {
                    line: 589,
                    column: 5
                  }
                },
                line: 587
              },
              '22': {
                name: 'blurHandler',
                decl: {
                  start: {
                    line: 591,
                    column: 31
                  },
                  end: {
                    line: 591,
                    column: 42
                  }
                },
                loc: {
                  start: {
                    line: 591,
                    column: 45
                  },
                  end: {
                    line: 593,
                    column: 5
                  }
                },
                line: 591
              },
              '23': {
                name: '(anonymous_23)',
                decl: {
                  start: {
                    line: 597,
                    column: 34
                  },
                  end: {
                    line: 597,
                    column: 35
                  }
                },
                loc: {
                  start: {
                    line: 597,
                    column: 46
                  },
                  end: {
                    line: 600,
                    column: 5
                  }
                },
                line: 597
              },
              '24': {
                name: '_initializeInstanceVariables',
                decl: {
                  start: {
                    line: 611,
                    column: 20
                  },
                  end: {
                    line: 611,
                    column: 48
                  }
                },
                loc: {
                  start: {
                    line: 611,
                    column: 51
                  },
                  end: {
                    line: 628,
                    column: 5
                  }
                },
                line: 611
              },
              '25': {
                name: 'registerPreloadMethod',
                decl: {
                  start: {
                    line: 631,
                    column: 20
                  },
                  end: {
                    line: 631,
                    column: 41
                  }
                },
                loc: {
                  start: {
                    line: 631,
                    column: 57
                  },
                  end: {
                    line: 636,
                    column: 5
                  }
                },
                line: 631
              },
              '26': {
                name: 'registerMethod',
                decl: {
                  start: {
                    line: 639,
                    column: 20
                  },
                  end: {
                    line: 639,
                    column: 34
                  }
                },
                loc: {
                  start: {
                    line: 639,
                    column: 44
                  },
                  end: {
                    line: 647,
                    column: 5
                  }
                },
                line: 639
              },
              '27': {
                name: '_createFriendlyGlobalFunctionBinder',
                decl: {
                  start: {
                    line: 655,
                    column: 20
                  },
                  end: {
                    line: 655,
                    column: 55
                  }
                },
                loc: {
                  start: {
                    line: 655,
                    column: 58
                  },
                  end: {
                    line: 709,
                    column: 5
                  }
                },
                line: 655
              },
              '28': {
                name: '(anonymous_28)',
                decl: {
                  start: {
                    line: 666,
                    column: 13
                  },
                  end: {
                    line: 666,
                    column: 14
                  }
                },
                loc: {
                  start: {
                    line: 666,
                    column: 36
                  },
                  end: {
                    line: 708,
                    column: 7
                  }
                },
                line: 666
              },
              '29': {
                name: 'get',
                decl: {
                  start: {
                    line: 689,
                    column: 28
                  },
                  end: {
                    line: 689,
                    column: 31
                  }
                },
                loc: {
                  start: {
                    line: 689,
                    column: 34
                  },
                  end: {
                    line: 691,
                    column: 15
                  }
                },
                line: 689
              },
              '30': {
                name: 'set',
                decl: {
                  start: {
                    line: 692,
                    column: 28
                  },
                  end: {
                    line: 692,
                    column: 31
                  }
                },
                loc: {
                  start: {
                    line: 692,
                    column: 42
                  },
                  end: {
                    line: 700,
                    column: 15
                  }
                },
                line: 692
              }
            },
            branchMap: {
              '0': {
                loc: {
                  start: {
                    line: 3,
                    column: 24
                  },
                  end: {
                    line: 3,
                    column: 328
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 3,
                      column: 24
                    },
                    end: {
                      line: 3,
                      column: 328
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 24
                    },
                    end: {
                      line: 3,
                      column: 328
                    }
                  }
                ],
                line: 3
              },
              '1': {
                loc: {
                  start: {
                    line: 3,
                    column: 28
                  },
                  end: {
                    line: 3,
                    column: 95
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 3,
                      column: 28
                    },
                    end: {
                      line: 3,
                      column: 56
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 60
                    },
                    end: {
                      line: 3,
                      column: 95
                    }
                  }
                ],
                line: 3
              },
              '2': {
                loc: {
                  start: {
                    line: 3,
                    column: 205
                  },
                  end: {
                    line: 3,
                    column: 322
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 3,
                      column: 301
                    },
                    end: {
                      line: 3,
                      column: 309
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 312
                    },
                    end: {
                      line: 3,
                      column: 322
                    }
                  }
                ],
                line: 3
              },
              '3': {
                loc: {
                  start: {
                    line: 3,
                    column: 205
                  },
                  end: {
                    line: 3,
                    column: 298
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 3,
                      column: 205
                    },
                    end: {
                      line: 3,
                      column: 208
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 212
                    },
                    end: {
                      line: 3,
                      column: 240
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 244
                    },
                    end: {
                      line: 3,
                      column: 270
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 274
                    },
                    end: {
                      line: 3,
                      column: 298
                    }
                  }
                ],
                line: 3
              },
              '4': {
                loc: {
                  start: {
                    line: 34,
                    column: 38
                  },
                  end: {
                    line: 34,
                    column: 85
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 34,
                      column: 38
                    },
                    end: {
                      line: 34,
                      column: 85
                    }
                  },
                  {
                    start: {
                      line: 34,
                      column: 38
                    },
                    end: {
                      line: 34,
                      column: 85
                    }
                  }
                ],
                line: 34
              },
              '5': {
                loc: {
                  start: {
                    line: 36,
                    column: 40
                  },
                  end: {
                    line: 36,
                    column: 82
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 36,
                      column: 40
                    },
                    end: {
                      line: 36,
                      column: 82
                    }
                  },
                  {
                    start: {
                      line: 36,
                      column: 40
                    },
                    end: {
                      line: 36,
                      column: 82
                    }
                  }
                ],
                line: 36
              },
              '6': {
                loc: {
                  start: {
                    line: 36,
                    column: 44
                  },
                  end: {
                    line: 36,
                    column: 65
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 36,
                      column: 44
                    },
                    end: {
                      line: 36,
                      column: 47
                    }
                  },
                  {
                    start: {
                      line: 36,
                      column: 51
                    },
                    end: {
                      line: 36,
                      column: 65
                    }
                  }
                ],
                line: 36
              },
              '7': {
                loc: {
                  start: {
                    line: 36,
                    column: 83
                  },
                  end: {
                    line: 36,
                    column: 187
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 36,
                      column: 83
                    },
                    end: {
                      line: 36,
                      column: 187
                    }
                  },
                  {
                    start: {
                      line: 36,
                      column: 83
                    },
                    end: {
                      line: 36,
                      column: 187
                    }
                  }
                ],
                line: 36
              },
              '8': {
                loc: {
                  start: {
                    line: 36,
                    column: 87
                  },
                  end: {
                    line: 36,
                    column: 157
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 36,
                      column: 87
                    },
                    end: {
                      line: 36,
                      column: 99
                    }
                  },
                  {
                    start: {
                      line: 36,
                      column: 103
                    },
                    end: {
                      line: 36,
                      column: 128
                    }
                  },
                  {
                    start: {
                      line: 36,
                      column: 132
                    },
                    end: {
                      line: 36,
                      column: 157
                    }
                  }
                ],
                line: 36
              },
              '9': {
                loc: {
                  start: {
                    line: 36,
                    column: 228
                  },
                  end: {
                    line: 36,
                    column: 283
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 36,
                      column: 228
                    },
                    end: {
                      line: 36,
                      column: 283
                    }
                  },
                  {
                    start: {
                      line: 36,
                      column: 228
                    },
                    end: {
                      line: 36,
                      column: 283
                    }
                  }
                ],
                line: 36
              },
              '10': {
                loc: {
                  start: {
                    line: 36,
                    column: 232
                  },
                  end: {
                    line: 36,
                    column: 255
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 36,
                      column: 232
                    },
                    end: {
                      line: 36,
                      column: 237
                    }
                  },
                  {
                    start: {
                      line: 36,
                      column: 241
                    },
                    end: {
                      line: 36,
                      column: 255
                    }
                  }
                ],
                line: 36
              },
              '11': {
                loc: {
                  start: {
                    line: 36,
                    column: 329
                  },
                  end: {
                    line: 36,
                    column: 385
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 36,
                      column: 329
                    },
                    end: {
                      line: 36,
                      column: 350
                    }
                  },
                  {
                    start: {
                      line: 36,
                      column: 354
                    },
                    end: {
                      line: 36,
                      column: 385
                    }
                  }
                ],
                line: 36
              },
              '12': {
                loc: {
                  start: {
                    line: 36,
                    column: 410
                  },
                  end: {
                    line: 36,
                    column: 665
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 36,
                      column: 410
                    },
                    end: {
                      line: 36,
                      column: 665
                    }
                  },
                  {
                    start: {
                      line: 36,
                      column: 410
                    },
                    end: {
                      line: 36,
                      column: 665
                    }
                  }
                ],
                line: 36
              },
              '13': {
                loc: {
                  start: {
                    line: 36,
                    column: 475
                  },
                  end: {
                    line: 36,
                    column: 547
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 36,
                      column: 499
                    },
                    end: {
                      line: 36,
                      column: 540
                    }
                  },
                  {
                    start: {
                      line: 36,
                      column: 543
                    },
                    end: {
                      line: 36,
                      column: 547
                    }
                  }
                ],
                line: 36
              },
              '14': {
                loc: {
                  start: {
                    line: 36,
                    column: 549
                  },
                  end: {
                    line: 36,
                    column: 663
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 36,
                      column: 549
                    },
                    end: {
                      line: 36,
                      column: 663
                    }
                  },
                  {
                    start: {
                      line: 36,
                      column: 549
                    },
                    end: {
                      line: 36,
                      column: 663
                    }
                  }
                ],
                line: 36
              },
              '15': {
                loc: {
                  start: {
                    line: 36,
                    column: 553
                  },
                  end: {
                    line: 36,
                    column: 583
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 36,
                      column: 553
                    },
                    end: {
                      line: 36,
                      column: 557
                    }
                  },
                  {
                    start: {
                      line: 36,
                      column: 562
                    },
                    end: {
                      line: 36,
                      column: 570
                    }
                  },
                  {
                    start: {
                      line: 36,
                      column: 574
                    },
                    end: {
                      line: 36,
                      column: 582
                    }
                  }
                ],
                line: 36
              },
              '16': {
                loc: {
                  start: {
                    line: 36,
                    column: 690
                  },
                  end: {
                    line: 36,
                    column: 728
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 36,
                      column: 690
                    },
                    end: {
                      line: 36,
                      column: 728
                    }
                  },
                  {
                    start: {
                      line: 36,
                      column: 690
                    },
                    end: {
                      line: 36,
                      column: 728
                    }
                  }
                ],
                line: 36
              },
              '17': {
                loc: {
                  start: {
                    line: 38,
                    column: 50
                  },
                  end: {
                    line: 38,
                    column: 151
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 38,
                      column: 50
                    },
                    end: {
                      line: 38,
                      column: 151
                    }
                  },
                  {
                    start: {
                      line: 38,
                      column: 50
                    },
                    end: {
                      line: 38,
                      column: 151
                    }
                  }
                ],
                line: 38
              },
              '18': {
                loc: {
                  start: {
                    line: 40,
                    column: 136
                  },
                  end: {
                    line: 40,
                    column: 166
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 40,
                      column: 136
                    },
                    end: {
                      line: 40,
                      column: 157
                    }
                  },
                  {
                    start: {
                      line: 40,
                      column: 161
                    },
                    end: {
                      line: 40,
                      column: 166
                    }
                  }
                ],
                line: 40
              },
              '19': {
                loc: {
                  start: {
                    line: 40,
                    column: 200
                  },
                  end: {
                    line: 40,
                    column: 254
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 40,
                      column: 200
                    },
                    end: {
                      line: 40,
                      column: 254
                    }
                  },
                  {
                    start: {
                      line: 40,
                      column: 200
                    },
                    end: {
                      line: 40,
                      column: 254
                    }
                  }
                ],
                line: 40
              },
              '20': {
                loc: {
                  start: {
                    line: 42,
                    column: 62
                  },
                  end: {
                    line: 42,
                    column: 131
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 42,
                      column: 62
                    },
                    end: {
                      line: 42,
                      column: 131
                    }
                  },
                  {
                    start: {
                      line: 42,
                      column: 62
                    },
                    end: {
                      line: 42,
                      column: 131
                    }
                  }
                ],
                line: 42
              },
              '21': {
                loc: {
                  start: {
                    line: 42,
                    column: 132
                  },
                  end: {
                    line: 42,
                    column: 193
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 42,
                      column: 132
                    },
                    end: {
                      line: 42,
                      column: 193
                    }
                  },
                  {
                    start: {
                      line: 42,
                      column: 132
                    },
                    end: {
                      line: 42,
                      column: 193
                    }
                  }
                ],
                line: 42
              },
              '22': {
                loc: {
                  start: {
                    line: 207,
                    column: 25
                  },
                  end: {
                    line: 207,
                    column: 64
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 207,
                      column: 25
                    },
                    end: {
                      line: 207,
                      column: 59
                    }
                  },
                  {
                    start: {
                      line: 207,
                      column: 63
                    },
                    end: {
                      line: 207,
                      column: 64
                    }
                  }
                ],
                line: 207
              },
              '23': {
                loc: {
                  start: {
                    line: 267,
                    column: 8
                  },
                  end: {
                    line: 269,
                    column: 9
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 267,
                      column: 8
                    },
                    end: {
                      line: 269,
                      column: 9
                    }
                  },
                  {
                    start: {
                      line: 267,
                      column: 8
                    },
                    end: {
                      line: 269,
                      column: 9
                    }
                  }
                ],
                line: 267
              },
              '24': {
                loc: {
                  start: {
                    line: 267,
                    column: 12
                  },
                  end: {
                    line: 267,
                    column: 66
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 267,
                      column: 12
                    },
                    end: {
                      line: 267,
                      column: 38
                    }
                  },
                  {
                    start: {
                      line: 267,
                      column: 42
                    },
                    end: {
                      line: 267,
                      column: 66
                    }
                  }
                ],
                line: 267
              },
              '25': {
                loc: {
                  start: {
                    line: 271,
                    column: 8
                  },
                  end: {
                    line: 273,
                    column: 9
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 271,
                      column: 8
                    },
                    end: {
                      line: 273,
                      column: 9
                    }
                  },
                  {
                    start: {
                      line: 271,
                      column: 8
                    },
                    end: {
                      line: 273,
                      column: 9
                    }
                  }
                ],
                line: 271
              },
              '26': {
                loc: {
                  start: {
                    line: 277,
                    column: 4
                  },
                  end: {
                    line: 279,
                    column: 5
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 277,
                      column: 4
                    },
                    end: {
                      line: 279,
                      column: 5
                    }
                  },
                  {
                    start: {
                      line: 277,
                      column: 4
                    },
                    end: {
                      line: 279,
                      column: 5
                    }
                  }
                ],
                line: 277
              },
              '27': {
                loc: {
                  start: {
                    line: 281,
                    column: 4
                  },
                  end: {
                    line: 283,
                    column: 5
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 281,
                      column: 4
                    },
                    end: {
                      line: 283,
                      column: 5
                    }
                  },
                  {
                    start: {
                      line: 281,
                      column: 4
                    },
                    end: {
                      line: 283,
                      column: 5
                    }
                  }
                ],
                line: 281
              },
              '28': {
                loc: {
                  start: {
                    line: 281,
                    column: 8
                  },
                  end: {
                    line: 281,
                    column: 57
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 281,
                      column: 8
                    },
                    end: {
                      line: 281,
                      column: 32
                    }
                  },
                  {
                    start: {
                      line: 281,
                      column: 36
                    },
                    end: {
                      line: 281,
                      column: 57
                    }
                  }
                ],
                line: 281
              },
              '29': {
                loc: {
                  start: {
                    line: 287,
                    column: 6
                  },
                  end: {
                    line: 291,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 287,
                      column: 6
                    },
                    end: {
                      line: 291,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 287,
                      column: 6
                    },
                    end: {
                      line: 291,
                      column: 7
                    }
                  }
                ],
                line: 287
              },
              '30': {
                loc: {
                  start: {
                    line: 288,
                    column: 8
                  },
                  end: {
                    line: 290,
                    column: 9
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 288,
                      column: 8
                    },
                    end: {
                      line: 290,
                      column: 9
                    }
                  },
                  {
                    start: {
                      line: 288,
                      column: 8
                    },
                    end: {
                      line: 290,
                      column: 9
                    }
                  }
                ],
                line: 288
              },
              '31': {
                loc: {
                  start: {
                    line: 293,
                    column: 20
                  },
                  end: {
                    line: 293,
                    column: 52
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 293,
                      column: 38
                    },
                    end: {
                      line: 293,
                      column: 44
                    }
                  },
                  {
                    start: {
                      line: 293,
                      column: 47
                    },
                    end: {
                      line: 293,
                      column: 52
                    }
                  }
                ],
                line: 293
              },
              '32': {
                loc: {
                  start: {
                    line: 295,
                    column: 6
                  },
                  end: {
                    line: 340,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 295,
                      column: 6
                    },
                    end: {
                      line: 340,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 295,
                      column: 6
                    },
                    end: {
                      line: 340,
                      column: 7
                    }
                  }
                ],
                line: 295
              },
              '33': {
                loc: {
                  start: {
                    line: 301,
                    column: 8
                  },
                  end: {
                    line: 310,
                    column: 9
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 301,
                      column: 8
                    },
                    end: {
                      line: 310,
                      column: 9
                    }
                  },
                  {
                    start: {
                      line: 301,
                      column: 8
                    },
                    end: {
                      line: 310,
                      column: 9
                    }
                  }
                ],
                line: 301
              },
              '34': {
                loc: {
                  start: {
                    line: 307,
                    column: 22
                  },
                  end: {
                    line: 307,
                    column: 54
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 307,
                      column: 22
                    },
                    end: {
                      line: 307,
                      column: 37
                    }
                  },
                  {
                    start: {
                      line: 307,
                      column: 41
                    },
                    end: {
                      line: 307,
                      column: 54
                    }
                  }
                ],
                line: 307
              },
              '35': {
                loc: {
                  start: {
                    line: 316,
                    column: 29
                  },
                  end: {
                    line: 316,
                    column: 56
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 316,
                      column: 29
                    },
                    end: {
                      line: 316,
                      column: 45
                    }
                  },
                  {
                    start: {
                      line: 316,
                      column: 49
                    },
                    end: {
                      line: 316,
                      column: 56
                    }
                  }
                ],
                line: 316
              },
              '36': {
                loc: {
                  start: {
                    line: 319,
                    column: 10
                  },
                  end: {
                    line: 325,
                    column: 11
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 319,
                      column: 10
                    },
                    end: {
                      line: 325,
                      column: 11
                    }
                  },
                  {
                    start: {
                      line: 319,
                      column: 10
                    },
                    end: {
                      line: 325,
                      column: 11
                    }
                  }
                ],
                line: 319
              },
              '37': {
                loc: {
                  start: {
                    line: 319,
                    column: 14
                  },
                  end: {
                    line: 319,
                    column: 58
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 319,
                      column: 14
                    },
                    end: {
                      line: 319,
                      column: 39
                    }
                  },
                  {
                    start: {
                      line: 319,
                      column: 43
                    },
                    end: {
                      line: 319,
                      column: 58
                    }
                  }
                ],
                line: 319
              },
              '38': {
                loc: {
                  start: {
                    line: 320,
                    column: 12
                  },
                  end: {
                    line: 322,
                    column: 13
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 320,
                      column: 12
                    },
                    end: {
                      line: 322,
                      column: 13
                    }
                  },
                  {
                    start: {
                      line: 320,
                      column: 12
                    },
                    end: {
                      line: 322,
                      column: 13
                    }
                  }
                ],
                line: 320
              },
              '39': {
                loc: {
                  start: {
                    line: 337,
                    column: 8
                  },
                  end: {
                    line: 339,
                    column: 9
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 337,
                      column: 8
                    },
                    end: {
                      line: 339,
                      column: 9
                    }
                  },
                  {
                    start: {
                      line: 337,
                      column: 8
                    },
                    end: {
                      line: 339,
                      column: 9
                    }
                  }
                ],
                line: 337
              },
              '40': {
                loc: {
                  start: {
                    line: 344,
                    column: 20
                  },
                  end: {
                    line: 344,
                    column: 50
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 344,
                      column: 37
                    },
                    end: {
                      line: 344,
                      column: 43
                    }
                  },
                  {
                    start: {
                      line: 344,
                      column: 46
                    },
                    end: {
                      line: 344,
                      column: 50
                    }
                  }
                ],
                line: 344
              },
              '41': {
                loc: {
                  start: {
                    line: 346,
                    column: 6
                  },
                  end: {
                    line: 363,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 346,
                      column: 6
                    },
                    end: {
                      line: 363,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 346,
                      column: 6
                    },
                    end: {
                      line: 363,
                      column: 7
                    }
                  }
                ],
                line: 346
              },
              '42': {
                loc: {
                  start: {
                    line: 349,
                    column: 8
                  },
                  end: {
                    line: 351,
                    column: 9
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 349,
                      column: 8
                    },
                    end: {
                      line: 351,
                      column: 9
                    }
                  },
                  {
                    start: {
                      line: 349,
                      column: 8
                    },
                    end: {
                      line: 351,
                      column: 9
                    }
                  }
                ],
                line: 349
              },
              '43': {
                loc: {
                  start: {
                    line: 353,
                    column: 8
                  },
                  end: {
                    line: 362,
                    column: 9
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 353,
                      column: 8
                    },
                    end: {
                      line: 362,
                      column: 9
                    }
                  },
                  {
                    start: {
                      line: 353,
                      column: 8
                    },
                    end: {
                      line: 362,
                      column: 9
                    }
                  }
                ],
                line: 353
              },
              '44': {
                loc: {
                  start: {
                    line: 359,
                    column: 10
                  },
                  end: {
                    line: 361,
                    column: 11
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 359,
                      column: 10
                    },
                    end: {
                      line: 361,
                      column: 11
                    }
                  },
                  {
                    start: {
                      line: 359,
                      column: 10
                    },
                    end: {
                      line: 361,
                      column: 11
                    }
                  }
                ],
                line: 359
              },
              '45': {
                loc: {
                  start: {
                    line: 367,
                    column: 20
                  },
                  end: {
                    line: 367,
                    column: 50
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 367,
                      column: 37
                    },
                    end: {
                      line: 367,
                      column: 43
                    }
                  },
                  {
                    start: {
                      line: 367,
                      column: 46
                    },
                    end: {
                      line: 367,
                      column: 50
                    }
                  }
                ],
                line: 367
              },
              '46': {
                loc: {
                  start: {
                    line: 369,
                    column: 6
                  },
                  end: {
                    line: 373,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 369,
                      column: 6
                    },
                    end: {
                      line: 373,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 369,
                      column: 6
                    },
                    end: {
                      line: 373,
                      column: 7
                    }
                  }
                ],
                line: 369
              },
              '47': {
                loc: {
                  start: {
                    line: 369,
                    column: 10
                  },
                  end: {
                    line: 369,
                    column: 72
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 369,
                      column: 10
                    },
                    end: {
                      line: 369,
                      column: 31
                    }
                  },
                  {
                    start: {
                      line: 369,
                      column: 35
                    },
                    end: {
                      line: 369,
                      column: 72
                    }
                  }
                ],
                line: 369
              },
              '48': {
                loc: {
                  start: {
                    line: 393,
                    column: 20
                  },
                  end: {
                    line: 393,
                    column: 50
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 393,
                      column: 37
                    },
                    end: {
                      line: 393,
                      column: 43
                    }
                  },
                  {
                    start: {
                      line: 393,
                      column: 46
                    },
                    end: {
                      line: 393,
                      column: 50
                    }
                  }
                ],
                line: 393
              },
              '49': {
                loc: {
                  start: {
                    line: 395,
                    column: 6
                  },
                  end: {
                    line: 395,
                    column: 39
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 395,
                      column: 6
                    },
                    end: {
                      line: 395,
                      column: 39
                    }
                  },
                  {
                    start: {
                      line: 395,
                      column: 6
                    },
                    end: {
                      line: 395,
                      column: 39
                    }
                  }
                ],
                line: 395
              },
              '50': {
                loc: {
                  start: {
                    line: 407,
                    column: 20
                  },
                  end: {
                    line: 407,
                    column: 52
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 407,
                      column: 38
                    },
                    end: {
                      line: 407,
                      column: 44
                    }
                  },
                  {
                    start: {
                      line: 407,
                      column: 47
                    },
                    end: {
                      line: 407,
                      column: 52
                    }
                  }
                ],
                line: 407
              },
              '51': {
                loc: {
                  start: {
                    line: 409,
                    column: 6
                  },
                  end: {
                    line: 417,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 409,
                      column: 6
                    },
                    end: {
                      line: 417,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 409,
                      column: 6
                    },
                    end: {
                      line: 417,
                      column: 7
                    }
                  }
                ],
                line: 409
              },
              '52': {
                loc: {
                  start: {
                    line: 413,
                    column: 10
                  },
                  end: {
                    line: 415,
                    column: 11
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 413,
                      column: 10
                    },
                    end: {
                      line: 415,
                      column: 11
                    }
                  },
                  {
                    start: {
                      line: 413,
                      column: 10
                    },
                    end: {
                      line: 415,
                      column: 11
                    }
                  }
                ],
                line: 413
              },
              '53': {
                loc: {
                  start: {
                    line: 413,
                    column: 14
                  },
                  end: {
                    line: 413,
                    column: 33
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 413,
                      column: 14
                    },
                    end: {
                      line: 413,
                      column: 24
                    }
                  },
                  {
                    start: {
                      line: 413,
                      column: 28
                    },
                    end: {
                      line: 413,
                      column: 33
                    }
                  }
                ],
                line: 413
              },
              '54': {
                loc: {
                  start: {
                    line: 424,
                    column: 6
                  },
                  end: {
                    line: 426,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 424,
                      column: 6
                    },
                    end: {
                      line: 426,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 424,
                      column: 6
                    },
                    end: {
                      line: 426,
                      column: 7
                    }
                  }
                ],
                line: 424
              },
              '55': {
                loc: {
                  start: {
                    line: 438,
                    column: 10
                  },
                  end: {
                    line: 441,
                    column: 11
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 438,
                      column: 10
                    },
                    end: {
                      line: 441,
                      column: 11
                    }
                  },
                  {
                    start: {
                      line: 438,
                      column: 10
                    },
                    end: {
                      line: 441,
                      column: 11
                    }
                  }
                ],
                line: 438
              },
              '56': {
                loc: {
                  start: {
                    line: 448,
                    column: 10
                  },
                  end: {
                    line: 450,
                    column: 11
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 448,
                      column: 10
                    },
                    end: {
                      line: 450,
                      column: 11
                    }
                  },
                  {
                    start: {
                      line: 448,
                      column: 10
                    },
                    end: {
                      line: 450,
                      column: 11
                    }
                  }
                ],
                line: 448
              },
              '57': {
                loc: {
                  start: {
                    line: 448,
                    column: 14
                  },
                  end: {
                    line: 448,
                    column: 70
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 448,
                      column: 14
                    },
                    end: {
                      line: 448,
                      column: 41
                    }
                  },
                  {
                    start: {
                      line: 448,
                      column: 45
                    },
                    end: {
                      line: 448,
                      column: 70
                    }
                  }
                ],
                line: 448
              },
              '58': {
                loc: {
                  start: {
                    line: 452,
                    column: 10
                  },
                  end: {
                    line: 454,
                    column: 11
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 452,
                      column: 10
                    },
                    end: {
                      line: 454,
                      column: 11
                    }
                  },
                  {
                    start: {
                      line: 452,
                      column: 10
                    },
                    end: {
                      line: 454,
                      column: 11
                    }
                  }
                ],
                line: 452
              },
              '59': {
                loc: {
                  start: {
                    line: 462,
                    column: 6
                  },
                  end: {
                    line: 464,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 462,
                      column: 6
                    },
                    end: {
                      line: 464,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 462,
                      column: 6
                    },
                    end: {
                      line: 464,
                      column: 7
                    }
                  }
                ],
                line: 462
              },
              '60': {
                loc: {
                  start: {
                    line: 462,
                    column: 10
                  },
                  end: {
                    line: 462,
                    column: 72
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 462,
                      column: 10
                    },
                    end: {
                      line: 462,
                      column: 39
                    }
                  },
                  {
                    start: {
                      line: 462,
                      column: 43
                    },
                    end: {
                      line: 462,
                      column: 72
                    }
                  }
                ],
                line: 462
              },
              '61': {
                loc: {
                  start: {
                    line: 481,
                    column: 6
                  },
                  end: {
                    line: 506,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 481,
                      column: 6
                    },
                    end: {
                      line: 506,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 481,
                      column: 6
                    },
                    end: {
                      line: 506,
                      column: 7
                    }
                  }
                ],
                line: 481
              },
              '62': {
                loc: {
                  start: {
                    line: 481,
                    column: 10
                  },
                  end: {
                    line: 481,
                    column: 81
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 481,
                      column: 10
                    },
                    end: {
                      line: 481,
                      column: 22
                    }
                  },
                  {
                    start: {
                      line: 481,
                      column: 26
                    },
                    end: {
                      line: 481,
                      column: 81
                    }
                  }
                ],
                line: 481
              },
              '63': {
                loc: {
                  start: {
                    line: 497,
                    column: 8
                  },
                  end: {
                    line: 505,
                    column: 9
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 497,
                      column: 8
                    },
                    end: {
                      line: 505,
                      column: 9
                    }
                  },
                  {
                    start: {
                      line: 497,
                      column: 8
                    },
                    end: {
                      line: 505,
                      column: 9
                    }
                  }
                ],
                line: 497
              },
              '64': {
                loc: {
                  start: {
                    line: 510,
                    column: 6
                  },
                  end: {
                    line: 512,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 510,
                      column: 6
                    },
                    end: {
                      line: 512,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 510,
                      column: 6
                    },
                    end: {
                      line: 512,
                      column: 7
                    }
                  }
                ],
                line: 510
              },
              '65': {
                loc: {
                  start: {
                    line: 518,
                    column: 6
                  },
                  end: {
                    line: 520,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 518,
                      column: 6
                    },
                    end: {
                      line: 520,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 518,
                      column: 6
                    },
                    end: {
                      line: 520,
                      column: 7
                    }
                  }
                ],
                line: 518
              },
              '66': {
                loc: {
                  start: {
                    line: 525,
                    column: 6
                  },
                  end: {
                    line: 527,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 525,
                      column: 6
                    },
                    end: {
                      line: 527,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 525,
                      column: 6
                    },
                    end: {
                      line: 527,
                      column: 7
                    }
                  }
                ],
                line: 525
              },
              '67': {
                loc: {
                  start: {
                    line: 537,
                    column: 4
                  },
                  end: {
                    line: 572,
                    column: 5
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 537,
                      column: 4
                    },
                    end: {
                      line: 572,
                      column: 5
                    }
                  },
                  {
                    start: {
                      line: 537,
                      column: 4
                    },
                    end: {
                      line: 572,
                      column: 5
                    }
                  }
                ],
                line: 537
              },
              '68': {
                loc: {
                  start: {
                    line: 542,
                    column: 8
                  },
                  end: {
                    line: 556,
                    column: 9
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 542,
                      column: 8
                    },
                    end: {
                      line: 556,
                      column: 9
                    }
                  },
                  {
                    start: {
                      line: 542,
                      column: 8
                    },
                    end: {
                      line: 556,
                      column: 9
                    }
                  }
                ],
                line: 542
              },
              '69': {
                loc: {
                  start: {
                    line: 545,
                    column: 10
                  },
                  end: {
                    line: 553,
                    column: 11
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 545,
                      column: 10
                    },
                    end: {
                      line: 553,
                      column: 11
                    }
                  },
                  {
                    start: {
                      line: 545,
                      column: 10
                    },
                    end: {
                      line: 553,
                      column: 11
                    }
                  }
                ],
                line: 545
              },
              '70': {
                loc: {
                  start: {
                    line: 546,
                    column: 12
                  },
                  end: {
                    line: 552,
                    column: 13
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 546,
                      column: 12
                    },
                    end: {
                      line: 552,
                      column: 13
                    }
                  },
                  {
                    start: {
                      line: 546,
                      column: 12
                    },
                    end: {
                      line: 552,
                      column: 13
                    }
                  }
                ],
                line: 546
              },
              '71': {
                loc: {
                  start: {
                    line: 546,
                    column: 16
                  },
                  end: {
                    line: 546,
                    column: 74
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 546,
                      column: 16
                    },
                    end: {
                      line: 546,
                      column: 38
                    }
                  },
                  {
                    start: {
                      line: 546,
                      column: 42
                    },
                    end: {
                      line: 546,
                      column: 74
                    }
                  }
                ],
                line: 546
              },
              '72': {
                loc: {
                  start: {
                    line: 561,
                    column: 8
                  },
                  end: {
                    line: 563,
                    column: 9
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 561,
                      column: 8
                    },
                    end: {
                      line: 563,
                      column: 9
                    }
                  },
                  {
                    start: {
                      line: 561,
                      column: 8
                    },
                    end: {
                      line: 563,
                      column: 9
                    }
                  }
                ],
                line: 561
              },
              '73': {
                loc: {
                  start: {
                    line: 578,
                    column: 6
                  },
                  end: {
                    line: 584,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 578,
                      column: 6
                    },
                    end: {
                      line: 584,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 578,
                      column: 6
                    },
                    end: {
                      line: 584,
                      column: 7
                    }
                  }
                ],
                line: 578
              },
              '74': {
                loc: {
                  start: {
                    line: 602,
                    column: 4
                  },
                  end: {
                    line: 606,
                    column: 5
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 602,
                      column: 4
                    },
                    end: {
                      line: 606,
                      column: 5
                    }
                  },
                  {
                    start: {
                      line: 602,
                      column: 4
                    },
                    end: {
                      line: 606,
                      column: 5
                    }
                  }
                ],
                line: 602
              },
              '75': {
                loc: {
                  start: {
                    line: 633,
                    column: 6
                  },
                  end: {
                    line: 635,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 633,
                      column: 6
                    },
                    end: {
                      line: 635,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 633,
                      column: 6
                    },
                    end: {
                      line: 635,
                      column: 7
                    }
                  }
                ],
                line: 633
              },
              '76': {
                loc: {
                  start: {
                    line: 640,
                    column: 19
                  },
                  end: {
                    line: 640,
                    column: 44
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 640,
                      column: 19
                    },
                    end: {
                      line: 640,
                      column: 23
                    }
                  },
                  {
                    start: {
                      line: 640,
                      column: 27
                    },
                    end: {
                      line: 640,
                      column: 44
                    }
                  }
                ],
                line: 640
              },
              '77': {
                loc: {
                  start: {
                    line: 642,
                    column: 6
                  },
                  end: {
                    line: 644,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 642,
                      column: 6
                    },
                    end: {
                      line: 644,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 642,
                      column: 6
                    },
                    end: {
                      line: 644,
                      column: 7
                    }
                  }
                ],
                line: 642
              },
              '78': {
                loc: {
                  start: {
                    line: 656,
                    column: 20
                  },
                  end: {
                    line: 656,
                    column: 90
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 656,
                      column: 73
                    },
                    end: {
                      line: 656,
                      column: 85
                    }
                  },
                  {
                    start: {
                      line: 656,
                      column: 88
                    },
                    end: {
                      line: 656,
                      column: 90
                    }
                  }
                ],
                line: 656
              },
              '79': {
                loc: {
                  start: {
                    line: 656,
                    column: 20
                  },
                  end: {
                    line: 656,
                    column: 70
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 656,
                      column: 20
                    },
                    end: {
                      line: 656,
                      column: 40
                    }
                  },
                  {
                    start: {
                      line: 656,
                      column: 44
                    },
                    end: {
                      line: 656,
                      column: 70
                    }
                  }
                ],
                line: 656
              },
              '80': {
                loc: {
                  start: {
                    line: 657,
                    column: 25
                  },
                  end: {
                    line: 657,
                    column: 55
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 657,
                      column: 25
                    },
                    end: {
                      line: 657,
                      column: 45
                    }
                  },
                  {
                    start: {
                      line: 657,
                      column: 49
                    },
                    end: {
                      line: 657,
                      column: 55
                    }
                  }
                ],
                line: 657
              },
              '81': {
                loc: {
                  start: {
                    line: 658,
                    column: 16
                  },
                  end: {
                    line: 658,
                    column: 56
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 658,
                      column: 16
                    },
                    end: {
                      line: 658,
                      column: 27
                    }
                  },
                  {
                    start: {
                      line: 658,
                      column: 31
                    },
                    end: {
                      line: 658,
                      column: 56
                    }
                  }
                ],
                line: 658
              },
              '82': {
                loc: {
                  start: {
                    line: 667,
                    column: 8
                  },
                  end: {
                    line: 707,
                    column: 9
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 667,
                      column: 8
                    },
                    end: {
                      line: 707,
                      column: 9
                    }
                  },
                  {
                    start: {
                      line: 667,
                      column: 8
                    },
                    end: {
                      line: 707,
                      column: 9
                    }
                  }
                ],
                line: 667
              },
              '83': {
                loc: {
                  start: {
                    line: 667,
                    column: 12
                  },
                  end: {
                    line: 667,
                    column: 159
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 667,
                      column: 12
                    },
                    end: {
                      line: 667,
                      column: 42
                    }
                  },
                  {
                    start: {
                      line: 667,
                      column: 46
                    },
                    end: {
                      line: 667,
                      column: 80
                    }
                  },
                  {
                    start: {
                      line: 667,
                      column: 84
                    },
                    end: {
                      line: 667,
                      column: 111
                    }
                  },
                  {
                    start: {
                      line: 667,
                      column: 115
                    },
                    end: {
                      line: 667,
                      column: 159
                    }
                  }
                ],
                line: 667
              },
              '84': {
                loc: {
                  start: {
                    line: 677,
                    column: 12
                  },
                  end: {
                    line: 679,
                    column: 13
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 677,
                      column: 12
                    },
                    end: {
                      line: 679,
                      column: 13
                    }
                  },
                  {
                    start: {
                      line: 677,
                      column: 12
                    },
                    end: {
                      line: 679,
                      column: 13
                    }
                  }
                ],
                line: 677
              },
              '85': {
                loc: {
                  start: {
                    line: 677,
                    column: 16
                  },
                  end: {
                    line: 677,
                    column: 75
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 677,
                      column: 16
                    },
                    end: {
                      line: 677,
                      column: 36
                    }
                  },
                  {
                    start: {
                      line: 677,
                      column: 40
                    },
                    end: {
                      line: 677,
                      column: 75
                    }
                  }
                ],
                line: 677
              }
            },
            s: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0,
              '10': 0,
              '11': 0,
              '12': 0,
              '13': 0,
              '14': 0,
              '15': 0,
              '16': 0,
              '17': 0,
              '18': 0,
              '19': 0,
              '20': 0,
              '21': 0,
              '22': 0,
              '23': 0,
              '24': 0,
              '25': 0,
              '26': 0,
              '27': 0,
              '28': 0,
              '29': 0,
              '30': 0,
              '31': 0,
              '32': 0,
              '33': 0,
              '34': 0,
              '35': 0,
              '36': 0,
              '37': 0,
              '38': 0,
              '39': 0,
              '40': 0,
              '41': 0,
              '42': 0,
              '43': 0,
              '44': 0,
              '45': 0,
              '46': 0,
              '47': 0,
              '48': 0,
              '49': 0,
              '50': 0,
              '51': 0,
              '52': 0,
              '53': 0,
              '54': 0,
              '55': 0,
              '56': 0,
              '57': 0,
              '58': 0,
              '59': 0,
              '60': 0,
              '61': 0,
              '62': 0,
              '63': 0,
              '64': 0,
              '65': 0,
              '66': 0,
              '67': 0,
              '68': 0,
              '69': 0,
              '70': 0,
              '71': 0,
              '72': 0,
              '73': 0,
              '74': 0,
              '75': 0,
              '76': 0,
              '77': 0,
              '78': 0,
              '79': 0,
              '80': 0,
              '81': 0,
              '82': 0,
              '83': 0,
              '84': 0,
              '85': 0,
              '86': 0,
              '87': 0,
              '88': 0,
              '89': 0,
              '90': 0,
              '91': 0,
              '92': 0,
              '93': 0,
              '94': 0,
              '95': 0,
              '96': 0,
              '97': 0,
              '98': 0,
              '99': 0,
              '100': 0,
              '101': 0,
              '102': 0,
              '103': 0,
              '104': 0,
              '105': 0,
              '106': 0,
              '107': 0,
              '108': 0,
              '109': 0,
              '110': 0,
              '111': 0,
              '112': 0,
              '113': 0,
              '114': 0,
              '115': 0,
              '116': 0,
              '117': 0,
              '118': 0,
              '119': 0,
              '120': 0,
              '121': 0,
              '122': 0,
              '123': 0,
              '124': 0,
              '125': 0,
              '126': 0,
              '127': 0,
              '128': 0,
              '129': 0,
              '130': 0,
              '131': 0,
              '132': 0,
              '133': 0,
              '134': 0,
              '135': 0,
              '136': 0,
              '137': 0,
              '138': 0,
              '139': 0,
              '140': 0,
              '141': 0,
              '142': 0,
              '143': 0,
              '144': 0,
              '145': 0,
              '146': 0,
              '147': 0,
              '148': 0,
              '149': 0,
              '150': 0,
              '151': 0,
              '152': 0,
              '153': 0,
              '154': 0,
              '155': 0,
              '156': 0,
              '157': 0,
              '158': 0,
              '159': 0,
              '160': 0,
              '161': 0,
              '162': 0,
              '163': 0,
              '164': 0,
              '165': 0,
              '166': 0,
              '167': 0,
              '168': 0,
              '169': 0,
              '170': 0,
              '171': 0,
              '172': 0,
              '173': 0,
              '174': 0,
              '175': 0,
              '176': 0,
              '177': 0,
              '178': 0,
              '179': 0,
              '180': 0,
              '181': 0,
              '182': 0,
              '183': 0,
              '184': 0,
              '185': 0,
              '186': 0,
              '187': 0,
              '188': 0,
              '189': 0,
              '190': 0,
              '191': 0,
              '192': 0,
              '193': 0,
              '194': 0,
              '195': 0,
              '196': 0,
              '197': 0,
              '198': 0,
              '199': 0,
              '200': 0,
              '201': 0,
              '202': 0,
              '203': 0,
              '204': 0,
              '205': 0,
              '206': 0,
              '207': 0,
              '208': 0,
              '209': 0,
              '210': 0,
              '211': 0,
              '212': 0,
              '213': 0,
              '214': 0,
              '215': 0,
              '216': 0,
              '217': 0,
              '218': 0,
              '219': 0,
              '220': 0,
              '221': 0,
              '222': 0,
              '223': 0,
              '224': 0,
              '225': 0,
              '226': 0,
              '227': 0,
              '228': 0,
              '229': 0,
              '230': 0,
              '231': 0,
              '232': 0,
              '233': 0,
              '234': 0,
              '235': 0,
              '236': 0,
              '237': 0,
              '238': 0,
              '239': 0,
              '240': 0,
              '241': 0,
              '242': 0,
              '243': 0,
              '244': 0,
              '245': 0,
              '246': 0,
              '247': 0,
              '248': 0,
              '249': 0,
              '250': 0,
              '251': 0,
              '252': 0,
              '253': 0,
              '254': 0,
              '255': 0,
              '256': 0,
              '257': 0,
              '258': 0,
              '259': 0,
              '260': 0,
              '261': 0,
              '262': 0,
              '263': 0,
              '264': 0,
              '265': 0,
              '266': 0,
              '267': 0,
              '268': 0,
              '269': 0,
              '270': 0,
              '271': 0,
              '272': 0,
              '273': 0,
              '274': 0,
              '275': 0,
              '276': 0,
              '277': 0,
              '278': 0,
              '279': 0,
              '280': 0,
              '281': 0,
              '282': 0,
              '283': 0,
              '284': 0,
              '285': 0,
              '286': 0,
              '287': 0,
              '288': 0,
              '289': 0,
              '290': 0,
              '291': 0,
              '292': 0,
              '293': 0,
              '294': 0,
              '295': 0,
              '296': 0,
              '297': 0,
              '298': 0
            },
            f: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0,
              '10': 0,
              '11': 0,
              '12': 0,
              '13': 0,
              '14': 0,
              '15': 0,
              '16': 0,
              '17': 0,
              '18': 0,
              '19': 0,
              '20': 0,
              '21': 0,
              '22': 0,
              '23': 0,
              '24': 0,
              '25': 0,
              '26': 0,
              '27': 0,
              '28': 0,
              '29': 0,
              '30': 0
            },
            b: {
              '0': [
                0,
                0
              ],
              '1': [
                0,
                0
              ],
              '2': [
                0,
                0
              ],
              '3': [
                0,
                0,
                0,
                0
              ],
              '4': [
                0,
                0
              ],
              '5': [
                0,
                0
              ],
              '6': [
                0,
                0
              ],
              '7': [
                0,
                0
              ],
              '8': [
                0,
                0,
                0
              ],
              '9': [
                0,
                0
              ],
              '10': [
                0,
                0
              ],
              '11': [
                0,
                0
              ],
              '12': [
                0,
                0
              ],
              '13': [
                0,
                0
              ],
              '14': [
                0,
                0
              ],
              '15': [
                0,
                0,
                0
              ],
              '16': [
                0,
                0
              ],
              '17': [
                0,
                0
              ],
              '18': [
                0,
                0
              ],
              '19': [
                0,
                0
              ],
              '20': [
                0,
                0
              ],
              '21': [
                0,
                0
              ],
              '22': [
                0,
                0
              ],
              '23': [
                0,
                0
              ],
              '24': [
                0,
                0
              ],
              '25': [
                0,
                0
              ],
              '26': [
                0,
                0
              ],
              '27': [
                0,
                0
              ],
              '28': [
                0,
                0
              ],
              '29': [
                0,
                0
              ],
              '30': [
                0,
                0
              ],
              '31': [
                0,
                0
              ],
              '32': [
                0,
                0
              ],
              '33': [
                0,
                0
              ],
              '34': [
                0,
                0
              ],
              '35': [
                0,
                0
              ],
              '36': [
                0,
                0
              ],
              '37': [
                0,
                0
              ],
              '38': [
                0,
                0
              ],
              '39': [
                0,
                0
              ],
              '40': [
                0,
                0
              ],
              '41': [
                0,
                0
              ],
              '42': [
                0,
                0
              ],
              '43': [
                0,
                0
              ],
              '44': [
                0,
                0
              ],
              '45': [
                0,
                0
              ],
              '46': [
                0,
                0
              ],
              '47': [
                0,
                0
              ],
              '48': [
                0,
                0
              ],
              '49': [
                0,
                0
              ],
              '50': [
                0,
                0
              ],
              '51': [
                0,
                0
              ],
              '52': [
                0,
                0
              ],
              '53': [
                0,
                0
              ],
              '54': [
                0,
                0
              ],
              '55': [
                0,
                0
              ],
              '56': [
                0,
                0
              ],
              '57': [
                0,
                0
              ],
              '58': [
                0,
                0
              ],
              '59': [
                0,
                0
              ],
              '60': [
                0,
                0
              ],
              '61': [
                0,
                0
              ],
              '62': [
                0,
                0
              ],
              '63': [
                0,
                0
              ],
              '64': [
                0,
                0
              ],
              '65': [
                0,
                0
              ],
              '66': [
                0,
                0
              ],
              '67': [
                0,
                0
              ],
              '68': [
                0,
                0
              ],
              '69': [
                0,
                0
              ],
              '70': [
                0,
                0
              ],
              '71': [
                0,
                0
              ],
              '72': [
                0,
                0
              ],
              '73': [
                0,
                0
              ],
              '74': [
                0,
                0
              ],
              '75': [
                0,
                0
              ],
              '76': [
                0,
                0
              ],
              '77': [
                0,
                0
              ],
              '78': [
                0,
                0
              ],
              '79': [
                0,
                0
              ],
              '80': [
                0,
                0
              ],
              '81': [
                0,
                0
              ],
              '82': [
                0,
                0
              ],
              '83': [
                0,
                0,
                0,
                0
              ],
              '84': [
                0,
                0
              ],
              '85': [
                0,
                0
              ]
            },
            _coverageSchema: '43e27e138ebf9cfc5966b082cf9a028302ed4184',
            hash: 'da1c6c6ee1eed90ae92bb713b2f07037cc9e03e0'
          };
          var coverage = global[gcv] || (global[gcv] = {
          });
          if (coverage[path] && coverage[path].hash === hash) {
            return coverage[path];
          }
          return coverage[path] = coverageData;
        }();
        _dereq_('core-js/modules/es.symbol');
        _dereq_('core-js/modules/es.symbol.description');
        _dereq_('core-js/modules/es.symbol.iterator');
        _dereq_('core-js/modules/es.array.for-each');
        _dereq_('core-js/modules/es.array.iterator');
        _dereq_('core-js/modules/es.array.slice');
        _dereq_('core-js/modules/es.object.get-own-property-descriptor');
        _dereq_('core-js/modules/es.object.get-own-property-names');
        _dereq_('core-js/modules/es.object.to-string');
        _dereq_('core-js/modules/es.string.iterator');
        _dereq_('core-js/modules/es.weak-map');
        _dereq_('core-js/modules/web.dom-collections.for-each');
        _dereq_('core-js/modules/web.dom-collections.iterator');
        function _typeof2(obj) {
          if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {
            _typeof2 = function _typeof2(obj) {
              return typeof obj;
            };
          } else {
            _typeof2 = function _typeof2(obj) {
              return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;
            };
          }
          return _typeof2(obj);
        }
        function _typeof(obj) {
          cov_1n48hgzlok.f[0]++;
          cov_1n48hgzlok.s[0]++;
          if ((cov_1n48hgzlok.b[1][0]++, typeof Symbol === 'function') && (cov_1n48hgzlok.b[1][1]++, _typeof2(Symbol.iterator) === 'symbol')) {
            cov_1n48hgzlok.b[0][0]++;
            cov_1n48hgzlok.s[1]++;
            _typeof = function _typeof(obj) {
              cov_1n48hgzlok.f[1]++;
              cov_1n48hgzlok.s[2]++;
              return _typeof2(obj);
            };
          } else {
            cov_1n48hgzlok.b[0][1]++;
            cov_1n48hgzlok.s[3]++;
            _typeof = function _typeof(obj) {
              cov_1n48hgzlok.f[2]++;
              cov_1n48hgzlok.s[4]++;
              return (cov_1n48hgzlok.b[3][0]++, obj) && (cov_1n48hgzlok.b[3][1]++, typeof Symbol === 'function') && (cov_1n48hgzlok.b[3][2]++, obj.constructor === Symbol) && (cov_1n48hgzlok.b[3][3]++, obj !== Symbol.prototype) ? (cov_1n48hgzlok.b[2][0]++, 'symbol') : (cov_1n48hgzlok.b[2][1]++, _typeof2(obj));
            };
          }
          cov_1n48hgzlok.s[5]++;
          return _typeof(obj);
        }
        cov_1n48hgzlok.s[6]++;
        _dereq_('core-js/modules/es.symbol');
        cov_1n48hgzlok.s[7]++;
        _dereq_('core-js/modules/es.symbol.description');
        cov_1n48hgzlok.s[8]++;
        _dereq_('core-js/modules/es.symbol.iterator');
        cov_1n48hgzlok.s[9]++;
        _dereq_('core-js/modules/es.array.for-each');
        cov_1n48hgzlok.s[10]++;
        _dereq_('core-js/modules/es.array.iterator');
        cov_1n48hgzlok.s[11]++;
        _dereq_('core-js/modules/es.array.slice');
        cov_1n48hgzlok.s[12]++;
        _dereq_('core-js/modules/es.object.get-own-property-names');
        cov_1n48hgzlok.s[13]++;
        _dereq_('core-js/modules/es.object.to-string');
        cov_1n48hgzlok.s[14]++;
        _dereq_('core-js/modules/es.string.iterator');
        cov_1n48hgzlok.s[15]++;
        _dereq_('core-js/modules/web.dom-collections.for-each');
        cov_1n48hgzlok.s[16]++;
        _dereq_('core-js/modules/web.dom-collections.iterator');
        cov_1n48hgzlok.s[17]++;
        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        cov_1n48hgzlok.s[18]++;
        exports.default = void 0;
        var constants = (cov_1n48hgzlok.s[19]++, _interopRequireWildcard(_dereq_('./constants')));
        function _getRequireWildcardCache() {
          cov_1n48hgzlok.f[3]++;
          cov_1n48hgzlok.s[20]++;
          if (typeof WeakMap !== 'function') {
            cov_1n48hgzlok.b[4][0]++;
            cov_1n48hgzlok.s[21]++;
            return null;
          } else {
            cov_1n48hgzlok.b[4][1]++;
          }
          var cache = (cov_1n48hgzlok.s[22]++, new WeakMap());
          cov_1n48hgzlok.s[23]++;
          _getRequireWildcardCache = function _getRequireWildcardCache() {
            cov_1n48hgzlok.f[4]++;
            cov_1n48hgzlok.s[24]++;
            return cache;
          };
          cov_1n48hgzlok.s[25]++;
          return cache;
        }
        function _interopRequireWildcard(obj) {
          cov_1n48hgzlok.f[5]++;
          cov_1n48hgzlok.s[26]++;
          if ((cov_1n48hgzlok.b[6][0]++, obj) && (cov_1n48hgzlok.b[6][1]++, obj.__esModule)) {
            cov_1n48hgzlok.b[5][0]++;
            cov_1n48hgzlok.s[27]++;
            return obj;
          } else {
            cov_1n48hgzlok.b[5][1]++;
          }
          cov_1n48hgzlok.s[28]++;
          if ((cov_1n48hgzlok.b[8][0]++, obj === null) || (cov_1n48hgzlok.b[8][1]++, _typeof(obj) !== 'object') && (cov_1n48hgzlok.b[8][2]++, typeof obj !== 'function')) {
            cov_1n48hgzlok.b[7][0]++;
            cov_1n48hgzlok.s[29]++;
            return {
            default:
              obj
            };
          } else {
            cov_1n48hgzlok.b[7][1]++;
          }
          var cache = (cov_1n48hgzlok.s[30]++, _getRequireWildcardCache());
          cov_1n48hgzlok.s[31]++;
          if ((cov_1n48hgzlok.b[10][0]++, cache) && (cov_1n48hgzlok.b[10][1]++, cache.has(obj))) {
            cov_1n48hgzlok.b[9][0]++;
            cov_1n48hgzlok.s[32]++;
            return cache.get(obj);
          } else {
            cov_1n48hgzlok.b[9][1]++;
          }
          var newObj = (cov_1n48hgzlok.s[33]++, {
          });
          var hasPropertyDescriptor = (cov_1n48hgzlok.s[34]++, (cov_1n48hgzlok.b[11][0]++, Object.defineProperty) && (cov_1n48hgzlok.b[11][1]++, Object.getOwnPropertyDescriptor));
          cov_1n48hgzlok.s[35]++;
          for (var key in obj) {
            cov_1n48hgzlok.s[36]++;
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              cov_1n48hgzlok.b[12][0]++;
              var desc = (cov_1n48hgzlok.s[37]++, hasPropertyDescriptor ? (cov_1n48hgzlok.b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) : (cov_1n48hgzlok.b[13][1]++, null));
              cov_1n48hgzlok.s[38]++;
              if ((cov_1n48hgzlok.b[15][0]++, desc) && ((cov_1n48hgzlok.b[15][1]++, desc.get) || (cov_1n48hgzlok.b[15][2]++, desc.set))) {
                cov_1n48hgzlok.b[14][0]++;
                cov_1n48hgzlok.s[39]++;
                Object.defineProperty(newObj, key, desc);
              } else {
                cov_1n48hgzlok.b[14][1]++;
                cov_1n48hgzlok.s[40]++;
                newObj[key] = obj[key];
              }
            } else {
              cov_1n48hgzlok.b[12][1]++;
            }
          }
          cov_1n48hgzlok.s[41]++;
          newObj.default = obj;
          cov_1n48hgzlok.s[42]++;
          if (cache) {
            cov_1n48hgzlok.b[16][0]++;
            cov_1n48hgzlok.s[43]++;
            cache.set(obj, newObj);
          } else {
            cov_1n48hgzlok.b[16][1]++;
          }
          cov_1n48hgzlok.s[44]++;
          return newObj;
        }
        function _classCallCheck(instance, Constructor) {
          cov_1n48hgzlok.f[6]++;
          cov_1n48hgzlok.s[45]++;
          if (!(instance instanceof Constructor)) {
            cov_1n48hgzlok.b[17][0]++;
            cov_1n48hgzlok.s[46]++;
            throw new TypeError('Cannot call a class as a function');
          } else {
            cov_1n48hgzlok.b[17][1]++;
          }
        }
        function _defineProperties(target, props) {
          cov_1n48hgzlok.f[7]++;
          cov_1n48hgzlok.s[47]++;
          for (var i = (cov_1n48hgzlok.s[48]++, 0); i < props.length; i++) {
            var descriptor = (cov_1n48hgzlok.s[49]++, props[i]);
            cov_1n48hgzlok.s[50]++;
            descriptor.enumerable = (cov_1n48hgzlok.b[18][0]++, descriptor.enumerable) || (cov_1n48hgzlok.b[18][1]++, false);
            cov_1n48hgzlok.s[51]++;
            descriptor.configurable = true;
            cov_1n48hgzlok.s[52]++;
            if ('value' in descriptor) {
              cov_1n48hgzlok.b[19][0]++;
              cov_1n48hgzlok.s[53]++;
              descriptor.writable = true;
            } else {
              cov_1n48hgzlok.b[19][1]++;
            }
            cov_1n48hgzlok.s[54]++;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        function _createClass(Constructor, protoProps, staticProps) {
          cov_1n48hgzlok.f[8]++;
          cov_1n48hgzlok.s[55]++;
          if (protoProps) {
            cov_1n48hgzlok.b[20][0]++;
            cov_1n48hgzlok.s[56]++;
            _defineProperties(Constructor.prototype, protoProps);
          } else {
            cov_1n48hgzlok.b[20][1]++;
          }
          cov_1n48hgzlok.s[57]++;
          if (staticProps) {
            cov_1n48hgzlok.b[21][0]++;
            cov_1n48hgzlok.s[58]++;
            _defineProperties(Constructor, staticProps);
          } else {
            cov_1n48hgzlok.b[21][1]++;
          }
          cov_1n48hgzlok.s[59]++;
          return Constructor;
        }        /**
 * This is the p5sound instance constructor.
 *
 * A p5sound instance holds all the properties and methods related to
 * a p5sound sketch.  It expects an incoming sketch closure and it can also
 * take an optional node parameter for attaching the generated p5sound canvas
 * to a node.  The sketch closure takes the newly created p5sound instance as
 * its sole argument and may optionally set <a href="#/p5/preload">preload()</a>,
 * <a href="#/p5/setup">setup()</a>, and/or
 * <a href="#/p5/draw">draw()</a> properties on it for running a sketch.
 *
 * A p5sound sketch can run in "global" or "instance" mode:
 * "global"   - all properties and methods are attached to the window
 * "instance" - all properties and methods are bound to this p5sound object
 *
 * @class p5sound
 * @constructor
 * @param  {function}           sketch a closure that can set optional <a href="#/p5/preload">preload()</a>,
 *                              <a href="#/p5/setup">setup()</a>, and/or <a href="#/p5/draw">draw()</a> properties on the
 *                              given p5sound instance
 * @param  {HTMLElement}        [node] element to attach canvas to
 * @return {p5sound}                 a p5sound instance
 */

        var p5sound = (        /*#__PURE__*/
        cov_1n48hgzlok.s[60]++, function () {
          cov_1n48hgzlok.f[9]++;
          function p5sound(sketch, node, sync) {
            cov_1n48hgzlok.f[10]++;
            var _this = (cov_1n48hgzlok.s[61]++, this);
            cov_1n48hgzlok.s[62]++;
            _classCallCheck(this, p5sound); //////////////////////////////////////////////
            // PUBLIC p5sound PROPERTIES AND METHODS
            //////////////////////////////////////////////
            /**
     * Called directly before <a href="#/p5/setup">setup()</a>, the <a href="#/p5/preload">preload()</a> function is used to handle
     * asynchronous loading of external files in a blocking way. If a preload
     * function is defined, <a href="#/p5/setup">setup()</a> will wait until any load calls within have
     * finished. Nothing besides load calls (<a href="#/p5/loadImage">loadImage</a>, <a href="#/p5/loadJSON">loadJSON</a>, <a href="#/p5/loadFont">loadFont</a>,
     * <a href="#/p5/loadStrings">loadStrings</a>, etc.) should be inside the preload function. If asynchronous
     * loading is preferred, the load methods can instead be called in <a href="#/p5/setup">setup()</a>
     * or anywhere else with the use of a callback parameter.
     *
     * By default the text "loading..." will be displayed. To make your own
     * loading page, include an HTML element with id "p5_loading" in your
     * page. More information <a href="http://bit.ly/2kQ6Nio">here</a>.
     *
     * @method preload
     * @example
     * <div><code>
     * let img;
     * let c;
     * function preload() {
     *   // preload() runs once
     *   img = loadImage('assets/laDefense.jpg');
     * }
     *
     * function setup() {
     *   // setup() waits until preload() is done
     *   img.loadPixels();
     *   // get color of middle pixel
     *   c = img.get(img.width / 2, img.height / 2);
     * }
     *
     * function draw() {
     *   background(c);
     *   image(img, 25, 25, 50, 50);
     * }
     * </code></div>
     *
     * @alt
     * nothing displayed
     *
     */
            /**
     * The <a href="#/p5/setup">setup()</a> function is called once when the program starts. It's used to
     * define initial environment properties such as screen size and background
     * color and to load media such as images and fonts as the program starts.
     * There can only be one <a href="#/p5/setup">setup()</a> function for each program and it shouldn't
     * be called again after its initial execution.
     *
     * Note: Variables declared within <a href="#/p5/setup">setup()</a> are not accessible within other
     * functions, including <a href="#/p5/draw">draw()</a>.
     *
     * @method setup
     * @example
     * <div><code>
     * let a = 0;
     *
     * function setup() {
     *   background(0);
     *   noStroke();
     *   fill(102);
     * }
     *
     * function draw() {
     *   rect(a++ % width, 10, 2, 80);
     * }
     * </code></div>
     *
     * @alt
     * nothing displayed
     *
     */
            /**
     * Called directly after <a href="#/p5/setup">setup()</a>, the <a href="#/p5/draw">draw()</a> function continuously executes
     * the lines of code contained inside its block until the program is stopped
     * or <a href="#/p5/noLoop">noLoop()</a> is called. Note if <a href="#/p5/noLoop">noLoop()</a> is called in <a href="#/p5/setup">setup()</a>, <a href="#/p5/draw">draw()</a> will
     * still be executed once before stopping. <a href="#/p5/draw">draw()</a> is called automatically and
     * should never be called explicitly.
     *
     * It should always be controlled with <a href="#/p5/noLoop">noLoop()</a>, <a href="#/p5/redraw">redraw()</a> and <a href="#/p5/loop">loop()</a>. After
     * <a href="#/p5/noLoop">noLoop()</a> stops the code in <a href="#/p5/draw">draw()</a> from executing, <a href="#/p5/redraw">redraw()</a> causes the
     * code inside <a href="#/p5/draw">draw()</a> to execute once, and <a href="#/p5/loop">loop()</a> will cause the code
     * inside <a href="#/p5/draw">draw()</a> to resume executing continuously.
     *
     * The number of times <a href="#/p5/draw">draw()</a> executes in each second may be controlled with
     * the <a href="#/p5/frameRate">frameRate()</a> function.
     *
     * There can only be one <a href="#/p5/draw">draw()</a> function for each sketch, and <a href="#/p5/draw">draw()</a> must
     * exist if you want the code to run continuously, or to process events such
     * as <a href="#/p5/mousePressed">mousePressed()</a>. Sometimes, you might have an empty call to <a href="#/p5/draw">draw()</a> in
     * your program, as shown in the above example.
     *
     * It is important to note that the drawing coordinate system will be reset
     * at the beginning of each <a href="#/p5/draw">draw()</a> call. If any transformations are performed
     * within <a href="#/p5/draw">draw()</a> (ex: scale, rotate, translate), their effects will be
     * undone at the beginning of <a href="#/p5/draw">draw()</a>, so transformations will not accumulate
     * over time. On the other hand, styling applied (ex: fill, stroke, etc) will
     * remain in effect.
     *
     * @method draw
     * @example
     * <div><code>
     * let yPos = 0;
     * function setup() {
     *   // setup() runs once
     *   frameRate(30);
     * }
     * function draw() {
     *   // draw() loops forever, until stopped
     *   background(204);
     *   yPos = yPos - 1;
     *   if (yPos < 0) {
     *     yPos = height;
     *   }
     *   line(0, yPos, width, yPos);
     * }
     * </code></div>
     *
     * @alt
     * nothing displayed
     *
     */
            //////////////////////////////////////////////
            // PRIVATE p5sound PROPERTIES AND METHODS
            //////////////////////////////////////////////
            cov_1n48hgzlok.s[63]++;
            this._setupDone = false;
            cov_1n48hgzlok.s[64]++;
            this._preloadDone = false; // for handling hidpi
            cov_1n48hgzlok.s[65]++;
            this._pixelDensity = (cov_1n48hgzlok.b[22][0]++, Math.ceil(window.devicePixelRatio)) || (cov_1n48hgzlok.b[22][1]++, 1);
            cov_1n48hgzlok.s[66]++;
            this._userNode = node;
            cov_1n48hgzlok.s[67]++;
            this._curElement = null;
            cov_1n48hgzlok.s[68]++;
            this._elements = [
            ];
            cov_1n48hgzlok.s[69]++;
            this._requestAnimId = 0;
            cov_1n48hgzlok.s[70]++;
            this._preloadCount = 0;
            cov_1n48hgzlok.s[71]++;
            this._isGlobal = false;
            cov_1n48hgzlok.s[72]++;
            this._loop = true;
            cov_1n48hgzlok.s[73]++;
            this._initializeInstanceVariables();
            cov_1n48hgzlok.s[74]++;
            this._defaultCanvasSize = {
              width: 100,
              height: 100
            };
            cov_1n48hgzlok.s[75]++;
            this._events = {
              // keep track of user-events for unregistering later
              mousemove: null,
              mousedown: null,
              mouseup: null,
              dragend: null,
              dragover: null,
              click: null,
              dblclick: null,
              mouseover: null,
              mouseout: null,
              keydown: null,
              keyup: null,
              keypress: null,
              touchstart: null,
              touchmove: null,
              touchend: null,
              resize: null,
              blur: null
            };
            cov_1n48hgzlok.s[76]++;
            this._millisStart = - 1;
            cov_1n48hgzlok.s[77]++;
            this._recording = false; // States used in the custom random generators
            cov_1n48hgzlok.s[78]++;
            this._lcg_random_state = null;
            cov_1n48hgzlok.s[79]++;
            this._gaussian_previous = false;
            cov_1n48hgzlok.s[80]++;
            this._events.wheel = null;
            cov_1n48hgzlok.s[81]++;
            this._loadingScreenId = 'p5_loading'; // Allows methods to be registered on an instance that
            // are instance-specific.
            cov_1n48hgzlok.s[82]++;
            this._registeredMethods = {
            };
            var methods = (cov_1n48hgzlok.s[83]++, Object.getOwnPropertyNames(p5sound.prototype._registeredMethods));
            var _iteratorNormalCompletion = (cov_1n48hgzlok.s[84]++, true);
            var _didIteratorError = (cov_1n48hgzlok.s[85]++, false);
            var _iteratorError = (cov_1n48hgzlok.s[86]++, undefined);
            cov_1n48hgzlok.s[87]++;
            try {
              cov_1n48hgzlok.s[88]++;
              for (var _iterator = (cov_1n48hgzlok.s[89]++, methods[Symbol.iterator]()), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var prop = (cov_1n48hgzlok.s[90]++, _step.value);
                cov_1n48hgzlok.s[91]++;
                this._registeredMethods[prop] = p5sound.prototype._registeredMethods[prop].slice();
              }
            } catch (err) {
              cov_1n48hgzlok.s[92]++;
              _didIteratorError = true;
              cov_1n48hgzlok.s[93]++;
              _iteratorError = err;
            } finally {
              cov_1n48hgzlok.s[94]++;
              try {
                cov_1n48hgzlok.s[95]++;
                if ((cov_1n48hgzlok.b[24][0]++, !_iteratorNormalCompletion) && (cov_1n48hgzlok.b[24][1]++, _iterator.return != null)) {
                  cov_1n48hgzlok.b[23][0]++;
                  cov_1n48hgzlok.s[96]++;
                  _iterator.return();
                } else {
                  cov_1n48hgzlok.b[23][1]++;
                }
              } finally {
                cov_1n48hgzlok.s[97]++;
                if (_didIteratorError) {
                  cov_1n48hgzlok.b[25][0]++;
                  cov_1n48hgzlok.s[98]++;
                  throw _iteratorError;
                } else {
                  cov_1n48hgzlok.b[25][1]++;
                }
              }
            }
            cov_1n48hgzlok.s[99]++;
            if (window.DeviceOrientationEvent) {
              cov_1n48hgzlok.b[26][0]++;
              cov_1n48hgzlok.s[100]++;
              this._events.deviceorientation = null;
            } else {
              cov_1n48hgzlok.b[26][1]++;
            }
            cov_1n48hgzlok.s[101]++;
            if ((cov_1n48hgzlok.b[28][0]++, window.DeviceMotionEvent) && (cov_1n48hgzlok.b[28][1]++, !window._isNodeWebkit)) {
              cov_1n48hgzlok.b[27][0]++;
              cov_1n48hgzlok.s[102]++;
              this._events.devicemotion = null;
            } else {
              cov_1n48hgzlok.b[27][1]++;
            }
            cov_1n48hgzlok.s[103]++;
            this._start = function () {
              cov_1n48hgzlok.f[11]++;
              cov_1n48hgzlok.s[104]++;
              // Find node if id given
              if (_this._userNode) {
                cov_1n48hgzlok.b[29][0]++;
                cov_1n48hgzlok.s[105]++;
                if (typeof _this._userNode === 'string') {
                  cov_1n48hgzlok.b[30][0]++;
                  cov_1n48hgzlok.s[106]++;
                  _this._userNode = document.getElementById(_this._userNode);
                } else {
                  cov_1n48hgzlok.b[30][1]++;
                }
              } else {
                cov_1n48hgzlok.b[29][1]++;
              }
              var context = (cov_1n48hgzlok.s[107]++, _this._isGlobal ? (cov_1n48hgzlok.b[31][0]++, window) : (cov_1n48hgzlok.b[31][1]++, _this));
              cov_1n48hgzlok.s[108]++;
              if (context.preload) {
                cov_1n48hgzlok.b[32][0]++;
                // Setup loading screen
                // Set loading screen into dom if not present
                // Otherwise displays and removes user provided loading screen
                var loadingScreen = (cov_1n48hgzlok.s[109]++, document.getElementById(_this._loadingScreenId));
                cov_1n48hgzlok.s[110]++;
                if (!loadingScreen) {
                  cov_1n48hgzlok.b[33][0]++;
                  cov_1n48hgzlok.s[111]++;
                  loadingScreen = document.createElement('div');
                  cov_1n48hgzlok.s[112]++;
                  loadingScreen.innerHTML = 'Loading...';
                  cov_1n48hgzlok.s[113]++;
                  loadingScreen.style.position = 'absolute';
                  cov_1n48hgzlok.s[114]++;
                  loadingScreen.id = _this._loadingScreenId;
                  var _node = (cov_1n48hgzlok.s[115]++, (cov_1n48hgzlok.b[34][0]++, _this._userNode) || (cov_1n48hgzlok.b[34][1]++, document.body));
                  cov_1n48hgzlok.s[116]++;
                  _node.appendChild(loadingScreen);
                } else {
                  cov_1n48hgzlok.b[33][1]++;
                }
                var _methods = (cov_1n48hgzlok.s[117]++, _this._preloadMethods);
                cov_1n48hgzlok.s[118]++;
                for (var method in _methods) {
                  cov_1n48hgzlok.s[119]++;
                  // default to p5sound if no object defined
                  _methods[method] = (cov_1n48hgzlok.b[35][0]++, _methods[method]) || (cov_1n48hgzlok.b[35][1]++, p5sound);
                  var obj = (cov_1n48hgzlok.s[120]++, _methods[method]); //it's p5, check if it's global or instance
                  cov_1n48hgzlok.s[121]++;
                  if ((cov_1n48hgzlok.b[37][0]++, obj === p5sound.prototype) || (cov_1n48hgzlok.b[37][1]++, obj === p5sound)) {
                    cov_1n48hgzlok.b[36][0]++;
                    cov_1n48hgzlok.s[122]++;
                    if (_this._isGlobal) {
                      cov_1n48hgzlok.b[38][0]++;
                      cov_1n48hgzlok.s[123]++;
                      window[method] = _this._wrapPreload(_this, method);
                    } else {
                      cov_1n48hgzlok.b[38][1]++;
                    }
                    cov_1n48hgzlok.s[124]++;
                    obj = _this;
                  } else {
                    cov_1n48hgzlok.b[36][1]++;
                  }
                  cov_1n48hgzlok.s[125]++;
                  _this._registeredPreloadMethods[method] = obj[method];
                  cov_1n48hgzlok.s[126]++;
                  obj[method] = _this._wrapPreload(obj, method);
                }
                cov_1n48hgzlok.s[127]++;
                context.preload();
                cov_1n48hgzlok.s[128]++;
                _this._runIfPreloadsAreDone();
              } else {
                cov_1n48hgzlok.b[32][1]++;
                cov_1n48hgzlok.s[129]++;
                _this._setup();
                cov_1n48hgzlok.s[130]++;
                if (!_this._recording) {
                  cov_1n48hgzlok.b[39][0]++;
                  cov_1n48hgzlok.s[131]++;
                  _this._draw();
                } else {
                  cov_1n48hgzlok.b[39][1]++;
                }
              }
            };
            cov_1n48hgzlok.s[132]++;
            this._runIfPreloadsAreDone = function () {
              cov_1n48hgzlok.f[12]++;
              var context = (cov_1n48hgzlok.s[133]++, this._isGlobal ? (cov_1n48hgzlok.b[40][0]++, window) : (cov_1n48hgzlok.b[40][1]++, this));
              cov_1n48hgzlok.s[134]++;
              if (context._preloadCount === 0) {
                cov_1n48hgzlok.b[41][0]++;
                var loadingScreen = (cov_1n48hgzlok.s[135]++, document.getElementById(context._loadingScreenId));
                cov_1n48hgzlok.s[136]++;
                if (loadingScreen) {
                  cov_1n48hgzlok.b[42][0]++;
                  cov_1n48hgzlok.s[137]++;
                  loadingScreen.parentNode.removeChild(loadingScreen);
                } else {
                  cov_1n48hgzlok.b[42][1]++;
                }
                cov_1n48hgzlok.s[138]++;
                if (!this._setupDone) {
                  cov_1n48hgzlok.b[43][0]++;
                  cov_1n48hgzlok.s[139]++;
                  this._lastTargetFrameTime = window.performance.now();
                  cov_1n48hgzlok.s[140]++;
                  this._lastRealFrameTime = window.performance.now();
                  cov_1n48hgzlok.s[141]++;
                  context._setup();
                  cov_1n48hgzlok.s[142]++;
                  if (!this._recording) {
                    cov_1n48hgzlok.b[44][0]++;
                    cov_1n48hgzlok.s[143]++;
                    context._draw();
                  } else {
                    cov_1n48hgzlok.b[44][1]++;
                  }
                } else {
                  cov_1n48hgzlok.b[43][1]++;
                }
              } else {
                cov_1n48hgzlok.b[41][1]++;
              }
            };
            cov_1n48hgzlok.s[144]++;
            this._decrementPreload = function () {
              cov_1n48hgzlok.f[13]++;
              var context = (cov_1n48hgzlok.s[145]++, this._isGlobal ? (cov_1n48hgzlok.b[45][0]++, window) : (cov_1n48hgzlok.b[45][1]++, this));
              cov_1n48hgzlok.s[146]++;
              if ((cov_1n48hgzlok.b[47][0]++, !context._preloadDone) && (cov_1n48hgzlok.b[47][1]++, typeof context.preload === 'function')) {
                cov_1n48hgzlok.b[46][0]++;
                cov_1n48hgzlok.s[147]++;
                context._setProperty('_preloadCount', context._preloadCount - 1);
                cov_1n48hgzlok.s[148]++;
                context._runIfPreloadsAreDone();
              } else {
                cov_1n48hgzlok.b[46][1]++;
              }
            };
            cov_1n48hgzlok.s[149]++;
            this._wrapPreload = function (obj, fnName) {
              cov_1n48hgzlok.f[14]++;
              var _this2 = (cov_1n48hgzlok.s[150]++, this);
              cov_1n48hgzlok.s[151]++;
              return function () {
                cov_1n48hgzlok.f[15]++;
                cov_1n48hgzlok.s[152]++;
                //increment counter
                _this2._incrementPreload(); //call original function
                cov_1n48hgzlok.s[153]++;
                for (var _len = (cov_1n48hgzlok.s[154]++, arguments.length), args = (cov_1n48hgzlok.s[155]++, new Array(_len)), _key = (cov_1n48hgzlok.s[156]++, 0); _key < _len; _key++) {
                  cov_1n48hgzlok.s[157]++;
                  args[_key] = arguments[_key];
                }
                cov_1n48hgzlok.s[158]++;
                return _this2._registeredPreloadMethods[fnName].apply(obj, args);
              };
            };
            cov_1n48hgzlok.s[159]++;
            this._incrementPreload = function () {
              cov_1n48hgzlok.f[16]++;
              var context = (cov_1n48hgzlok.s[160]++, this._isGlobal ? (cov_1n48hgzlok.b[48][0]++, window) : (cov_1n48hgzlok.b[48][1]++, this)); // Do nothing if we tried to increment preloads outside of `preload`
              cov_1n48hgzlok.s[161]++;
              if (context._preloadDone) {
                cov_1n48hgzlok.b[49][0]++;
                cov_1n48hgzlok.s[162]++;
                return;
              } else {
                cov_1n48hgzlok.b[49][1]++;
              }
              cov_1n48hgzlok.s[163]++;
              context._setProperty('_preloadCount', context._preloadCount + 1);
            };
            cov_1n48hgzlok.s[164]++;
            this._setup = function () {
              cov_1n48hgzlok.f[17]++;
              cov_1n48hgzlok.s[165]++;
              // Always create a default canvas.
              // Later on if the user calls createCanvas, this default one
              // will be replaced
              _this.createCanvas(_this._defaultCanvasSize.width, _this._defaultCanvasSize.height, 'p2d'); // return preload functions to their normal vals if switched by preload
              var context = (cov_1n48hgzlok.s[166]++, _this._isGlobal ? (cov_1n48hgzlok.b[50][0]++, window) : (cov_1n48hgzlok.b[50][1]++, _this));
              cov_1n48hgzlok.s[167]++;
              if (typeof context.preload === 'function') {
                cov_1n48hgzlok.b[51][0]++;
                cov_1n48hgzlok.s[168]++;
                for (var f in _this._preloadMethods) {
                  cov_1n48hgzlok.s[169]++;
                  context[f] = _this._preloadMethods[f][f];
                  cov_1n48hgzlok.s[170]++;
                  if ((cov_1n48hgzlok.b[53][0]++, context[f]) && (cov_1n48hgzlok.b[53][1]++, _this)) {
                    cov_1n48hgzlok.b[52][0]++;
                    cov_1n48hgzlok.s[171]++;
                    context[f] = context[f].bind(_this);
                  } else {
                    cov_1n48hgzlok.b[52][1]++;
                  }
                }
              } else {
                cov_1n48hgzlok.b[51][1]++;
              } // Record the time when sketch starts

              cov_1n48hgzlok.s[172]++;
              _this._millisStart = window.performance.now();
              cov_1n48hgzlok.s[173]++;
              context._preloadDone = true; // Short-circuit on this, in case someone used the library in "global"
              // mode earlier
              cov_1n48hgzlok.s[174]++;
              if (typeof context.setup === 'function') {
                cov_1n48hgzlok.b[54][0]++;
                cov_1n48hgzlok.s[175]++;
                context.setup();
              } else {
                cov_1n48hgzlok.b[54][1]++;
              } // unhide any hidden canvases that were created

              var canvases = (cov_1n48hgzlok.s[176]++, document.getElementsByTagName('canvas'));
              var _iteratorNormalCompletion2 = (cov_1n48hgzlok.s[177]++, true);
              var _didIteratorError2 = (cov_1n48hgzlok.s[178]++, false);
              var _iteratorError2 = (cov_1n48hgzlok.s[179]++, undefined);
              cov_1n48hgzlok.s[180]++;
              try {
                cov_1n48hgzlok.s[181]++;
                for (var _iterator2 = (cov_1n48hgzlok.s[182]++, canvases[Symbol.iterator]()), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                  var k = (cov_1n48hgzlok.s[183]++, _step2.value);
                  cov_1n48hgzlok.s[184]++;
                  if (k.dataset.hidden === 'true') {
                    cov_1n48hgzlok.b[55][0]++;
                    cov_1n48hgzlok.s[185]++;
                    k.style.visibility = '';
                    cov_1n48hgzlok.s[186]++;
                    delete k.dataset.hidden;
                  } else {
                    cov_1n48hgzlok.b[55][1]++;
                  }
                }
              } catch (err) {
                cov_1n48hgzlok.s[187]++;
                _didIteratorError2 = true;
                cov_1n48hgzlok.s[188]++;
                _iteratorError2 = err;
              } finally {
                cov_1n48hgzlok.s[189]++;
                try {
                  cov_1n48hgzlok.s[190]++;
                  if ((cov_1n48hgzlok.b[57][0]++, !_iteratorNormalCompletion2) && (cov_1n48hgzlok.b[57][1]++, _iterator2.return != null)) {
                    cov_1n48hgzlok.b[56][0]++;
                    cov_1n48hgzlok.s[191]++;
                    _iterator2.return();
                  } else {
                    cov_1n48hgzlok.b[56][1]++;
                  }
                } finally {
                  cov_1n48hgzlok.s[192]++;
                  if (_didIteratorError2) {
                    cov_1n48hgzlok.b[58][0]++;
                    cov_1n48hgzlok.s[193]++;
                    throw _iteratorError2;
                  } else {
                    cov_1n48hgzlok.b[58][1]++;
                  }
                }
              }
              cov_1n48hgzlok.s[194]++;
              _this._lastTargetFrameTime = window.performance.now();
              cov_1n48hgzlok.s[195]++;
              _this._lastRealFrameTime = window.performance.now();
              cov_1n48hgzlok.s[196]++;
              _this._setupDone = true;
              cov_1n48hgzlok.s[197]++;
              if ((cov_1n48hgzlok.b[60][0]++, _this._accessibleOutputs.grid) || (cov_1n48hgzlok.b[60][1]++, _this._accessibleOutputs.text)) {
                cov_1n48hgzlok.b[59][0]++;
                cov_1n48hgzlok.s[198]++;
                _this._updateAccsOutput();
              } else {
                cov_1n48hgzlok.b[59][1]++;
              }
            };
            cov_1n48hgzlok.s[199]++;
            this._draw = function () {
              cov_1n48hgzlok.f[18]++;
              var now = (cov_1n48hgzlok.s[200]++, window.performance.now());
              var time_since_last = (cov_1n48hgzlok.s[201]++, now - _this._lastTargetFrameTime);
              var target_time_between_frames = (cov_1n48hgzlok.s[202]++, 1000 / _this._targetFrameRate); // only draw if we really need to; don't overextend the browser.
              // draw if we're within 5ms of when our next frame should paint
              // (this will prevent us from giving up opportunities to draw
              // again when it's really about time for us to do so). fixes an
              // issue where the frameRate is too low if our refresh loop isn't
              // in sync with the browser. note that we have to draw once even
              // if looping is off, so we bypass the time delay if that
              // is the case.
              var epsilon = (cov_1n48hgzlok.s[203]++, 5);
              cov_1n48hgzlok.s[204]++;
              if ((cov_1n48hgzlok.b[62][0]++, !_this._loop) || (cov_1n48hgzlok.b[62][1]++, time_since_last >= target_time_between_frames - epsilon)) {
                cov_1n48hgzlok.b[61][0]++;
                cov_1n48hgzlok.s[205]++;
                //mandatory update values(matrixes and stack)
                _this.deltaTime = now - _this._lastRealFrameTime;
                cov_1n48hgzlok.s[206]++;
                _this._setProperty('deltaTime', _this.deltaTime);
                cov_1n48hgzlok.s[207]++;
                _this._frameRate = 1000 / _this.deltaTime;
                cov_1n48hgzlok.s[208]++;
                _this.redraw();
                cov_1n48hgzlok.s[209]++;
                _this._lastTargetFrameTime = Math.max(_this._lastTargetFrameTime + target_time_between_frames, now);
                cov_1n48hgzlok.s[210]++;
                _this._lastRealFrameTime = now; // If the user is actually using mouse module, then update
                // coordinates, otherwise skip. We can test this by simply
                // checking if any of the mouse functions are available or not.
                // NOTE : This reflects only in complete build or modular build.
                cov_1n48hgzlok.s[211]++;
                if (typeof _this._updateMouseCoords !== 'undefined') {
                  cov_1n48hgzlok.b[63][0]++;
                  cov_1n48hgzlok.s[212]++;
                  _this._updateMouseCoords(); //reset delta values so they reset even if there is no mouse event to set them
                  // for example if the mouse is outside the screen
                  cov_1n48hgzlok.s[213]++;
                  _this._setProperty('movedX', 0);
                  cov_1n48hgzlok.s[214]++;
                  _this._setProperty('movedY', 0);
                } else {
                  cov_1n48hgzlok.b[63][1]++;
                }
              } else {
                cov_1n48hgzlok.b[61][1]++;
              } // get notified the next time the browser gives us
              // an opportunity to draw.

              cov_1n48hgzlok.s[215]++;
              if (_this._loop) {
                cov_1n48hgzlok.b[64][0]++;
                cov_1n48hgzlok.s[216]++;
                _this._requestAnimId = window.requestAnimationFrame(_this._draw);
              } else {
                cov_1n48hgzlok.b[64][1]++;
              }
            };
            cov_1n48hgzlok.s[217]++;
            this._setProperty = function (prop, value) {
              cov_1n48hgzlok.f[19]++;
              cov_1n48hgzlok.s[218]++;
              _this[prop] = value;
              cov_1n48hgzlok.s[219]++;
              if (_this._isGlobal) {
                cov_1n48hgzlok.b[65][0]++;
                cov_1n48hgzlok.s[220]++;
                window[prop] = value;
              } else {
                cov_1n48hgzlok.b[65][1]++;
              }
            }; // call any registered init functions
            cov_1n48hgzlok.s[221]++;
            this._registeredMethods.init.forEach(function (f) {
              cov_1n48hgzlok.f[20]++;
              cov_1n48hgzlok.s[222]++;
              if (typeof f !== 'undefined') {
                cov_1n48hgzlok.b[66][0]++;
                cov_1n48hgzlok.s[223]++;
                f.call(this);
              } else {
                cov_1n48hgzlok.b[66][1]++;
              }
            }, this); // Set up promise preloads
            cov_1n48hgzlok.s[224]++;
            this._setupPromisePreloads();
            var friendlyBindGlobal = (cov_1n48hgzlok.s[225]++, this._createFriendlyGlobalFunctionBinder()); // If the user has created a global setup or draw function,
            // assume "global" mode and make everything global (i.e. on the window)
            cov_1n48hgzlok.s[226]++;
            if (!sketch) {
              cov_1n48hgzlok.b[67][0]++;
              cov_1n48hgzlok.s[227]++;
              this._isGlobal = true;
              cov_1n48hgzlok.s[228]++;
              p5sound.instance = this; // Loop through methods on the prototype and attach them to the window
              cov_1n48hgzlok.s[229]++;
              for (var p in p5sound.prototype) {
                cov_1n48hgzlok.s[230]++;
                if (typeof p5sound.prototype[p] === 'function') {
                  cov_1n48hgzlok.b[68][0]++;
                  var ev = (cov_1n48hgzlok.s[231]++, p.substring(2));
                  cov_1n48hgzlok.s[232]++;
                  if (!this._events.hasOwnProperty(ev)) {
                    cov_1n48hgzlok.b[69][0]++;
                    cov_1n48hgzlok.s[233]++;
                    if ((cov_1n48hgzlok.b[71][0]++, Math.hasOwnProperty(p)) && (cov_1n48hgzlok.b[71][1]++, Math[p] === p5sound.prototype[p])) {
                      cov_1n48hgzlok.b[70][0]++;
                      cov_1n48hgzlok.s[234]++;
                      // Multiple p5sound methods are just native Math functions. These can be
                      // called without any binding.
                      friendlyBindGlobal(p, p5sound.prototype[p]);
                    } else {
                      cov_1n48hgzlok.b[70][1]++;
                      cov_1n48hgzlok.s[235]++;
                      friendlyBindGlobal(p, p5sound.prototype[p].bind(this));
                    }
                  } else {
                    cov_1n48hgzlok.b[69][1]++;
                  }
                } else {
                  cov_1n48hgzlok.b[68][1]++;
                  cov_1n48hgzlok.s[236]++;
                  friendlyBindGlobal(p, p5sound.prototype[p]);
                }
              } // Attach its properties to the window

              cov_1n48hgzlok.s[237]++;
              for (var p2 in this) {
                cov_1n48hgzlok.s[238]++;
                if (this.hasOwnProperty(p2)) {
                  cov_1n48hgzlok.b[72][0]++;
                  cov_1n48hgzlok.s[239]++;
                  friendlyBindGlobal(p2, this[p2]);
                } else {
                  cov_1n48hgzlok.b[72][1]++;
                }
              }
            } else {
              cov_1n48hgzlok.b[67][1]++;
              cov_1n48hgzlok.s[240]++;
              // Else, the user has passed in a sketch closure that may set
              // user-provided 'setup', 'draw', etc. properties on this instance of p5
              sketch(this); // Run a check to see if the user has misspelled 'setup', 'draw', etc
              // detects capitalization mistakes only ( Setup, SETUP, MouseClicked, etc)
              cov_1n48hgzlok.s[241]++;
              p5sound._checkForUserDefinedFunctions(this);
            } // Bind events to window (not using container div bc key events don't work)

            cov_1n48hgzlok.s[242]++;
            for (var e in this._events) {
              var f = (cov_1n48hgzlok.s[243]++, this['_on'.concat(e)]);
              cov_1n48hgzlok.s[244]++;
              if (f) {
                cov_1n48hgzlok.b[73][0]++;
                var m = (cov_1n48hgzlok.s[245]++, f.bind(this));
                cov_1n48hgzlok.s[246]++;
                window.addEventListener(e, m, {
                  passive: false
                });
                cov_1n48hgzlok.s[247]++;
                this._events[e] = m;
              } else {
                cov_1n48hgzlok.b[73][1]++;
              }
            }
            cov_1n48hgzlok.s[248]++;
            var focusHandler = function focusHandler() {
              cov_1n48hgzlok.f[21]++;
              cov_1n48hgzlok.s[249]++;
              _this._setProperty('focused', true);
            };
            cov_1n48hgzlok.s[250]++;
            var blurHandler = function blurHandler() {
              cov_1n48hgzlok.f[22]++;
              cov_1n48hgzlok.s[251]++;
              _this._setProperty('focused', false);
            };
            cov_1n48hgzlok.s[252]++;
            window.addEventListener('focus', focusHandler);
            cov_1n48hgzlok.s[253]++;
            window.addEventListener('blur', blurHandler);
            cov_1n48hgzlok.s[254]++;
            this.registerMethod('remove', function () {
              cov_1n48hgzlok.f[23]++;
              cov_1n48hgzlok.s[255]++;
              window.removeEventListener('focus', focusHandler);
              cov_1n48hgzlok.s[256]++;
              window.removeEventListener('blur', blurHandler);
            });
            cov_1n48hgzlok.s[257]++;
            if (document.readyState === 'complete') {
              cov_1n48hgzlok.b[74][0]++;
              cov_1n48hgzlok.s[258]++;
              this._start();
            } else {
              cov_1n48hgzlok.b[74][1]++;
              cov_1n48hgzlok.s[259]++;
              window.addEventListener('load', this._start.bind(this), false);
            }
          }
          cov_1n48hgzlok.s[260]++;
          _createClass(p5sound, [
            {
              key: '_initializeInstanceVariables',
              value: function _initializeInstanceVariables() {
                cov_1n48hgzlok.f[24]++;
                cov_1n48hgzlok.s[261]++;
                this._accessibleOutputs = {
                  text: false,
                  grid: false,
                  textLabel: false,
                  gridLabel: false
                };
                cov_1n48hgzlok.s[262]++;
                this._styles = [
                ];
                cov_1n48hgzlok.s[263]++;
                this._bezierDetail = 20;
                cov_1n48hgzlok.s[264]++;
                this._curveDetail = 20;
                cov_1n48hgzlok.s[265]++;
                this._colorMode = constants.RGB;
                cov_1n48hgzlok.s[266]++;
                this._colorMaxes = {
                  rgb: [
                    255,
                    255,
                    255,
                    255
                  ],
                  hsb: [
                    360,
                    100,
                    100,
                    1
                  ],
                  hsl: [
                    360,
                    100,
                    100,
                    1
                  ]
                };
                cov_1n48hgzlok.s[267]++;
                this._downKeys = {
                }; //Holds the key codes of currently pressed keys
              }
            },
            {
              key: 'registerPreloadMethod',
              value: function registerPreloadMethod(fnString, obj) {
                cov_1n48hgzlok.f[25]++;
                cov_1n48hgzlok.s[268]++;
                // obj = obj || p5sound.prototype;
                if (!p5sound.prototype._preloadMethods.hasOwnProperty(fnString)) {
                  cov_1n48hgzlok.b[75][0]++;
                  cov_1n48hgzlok.s[269]++;
                  p5sound.prototype._preloadMethods[fnString] = obj;
                } else {
                  cov_1n48hgzlok.b[75][1]++;
                }
              }
            },
            {
              key: 'registerMethod',
              value: function registerMethod(name, m) {
                cov_1n48hgzlok.f[26]++;
                var target = (cov_1n48hgzlok.s[270]++, (cov_1n48hgzlok.b[76][0]++, this) || (cov_1n48hgzlok.b[76][1]++, p5sound.prototype));
                cov_1n48hgzlok.s[271]++;
                if (!target._registeredMethods.hasOwnProperty(name)) {
                  cov_1n48hgzlok.b[77][0]++;
                  cov_1n48hgzlok.s[272]++;
                  target._registeredMethods[name] = [
                  ];
                } else {
                  cov_1n48hgzlok.b[77][1]++;
                }
                cov_1n48hgzlok.s[273]++;
                target._registeredMethods[name].push(m);
              } // create a function which provides a standardized process for binding
              // globals; this is implemented as a factory primarily so that there's a
              // way to redefine what "global" means for the binding function so it
              // can be used in scenarios like unit testing where the window object
              // might not exist

            },
            {
              key: '_createFriendlyGlobalFunctionBinder',
              value: function _createFriendlyGlobalFunctionBinder() {
                cov_1n48hgzlok.f[27]++;
                var options = (cov_1n48hgzlok.s[274]++, (cov_1n48hgzlok.b[79][0]++, arguments.length > 0) && (cov_1n48hgzlok.b[79][1]++, arguments[0] !== undefined) ? (cov_1n48hgzlok.b[78][0]++, arguments[0]) : (cov_1n48hgzlok.b[78][1]++, {
                }));
                var globalObject = (cov_1n48hgzlok.s[275]++, (cov_1n48hgzlok.b[80][0]++, options.globalObject) || (cov_1n48hgzlok.b[80][1]++, window));
                var log = (cov_1n48hgzlok.s[276]++, (cov_1n48hgzlok.b[81][0]++, options.log) || (cov_1n48hgzlok.b[81][1]++, console.log.bind(console)));
                var propsToForciblyOverwrite = (cov_1n48hgzlok.s[277]++, {
                  // p5sound.print actually always overwrites an existing global function,
                  // albeit one that is very unlikely to be used:
                  //
                  //   https://developer.mozilla.org/en-US/docs/Web/API/Window/print
                  print: true
                });
                cov_1n48hgzlok.s[278]++;
                return function (prop, value) {
                  cov_1n48hgzlok.f[28]++;
                  cov_1n48hgzlok.s[279]++;
                  if ((cov_1n48hgzlok.b[83][0]++, !p5sound.disableFriendlyErrors) && (cov_1n48hgzlok.b[83][1]++, typeof IS_MINIFIED === 'undefined') && (cov_1n48hgzlok.b[83][2]++, typeof value === 'function') && (cov_1n48hgzlok.b[83][3]++, !(prop in p5sound.prototype._preloadMethods))) {
                    cov_1n48hgzlok.b[82][0]++;
                    cov_1n48hgzlok.s[280]++;
                    try {
                      cov_1n48hgzlok.s[281]++;
                      // Because p5sound has so many common function names, it's likely
                      // that users may accidentally overwrite global p5sound functions with
                      // their own variables. Let's allow this but log a warning to
                      // help users who may be doing this unintentionally.
                      //
                      // For more information, see:
                      //
                      //   https://github.com/processing/p5sound.js/issues/1317
                      if ((cov_1n48hgzlok.b[85][0]++, prop in globalObject) && (cov_1n48hgzlok.b[85][1]++, !(prop in propsToForciblyOverwrite))) {
                        cov_1n48hgzlok.b[84][0]++;
                        cov_1n48hgzlok.s[282]++;
                        throw new Error('global "'.concat(prop, '" already exists'));
                      } else {
                        cov_1n48hgzlok.b[84][1]++;
                      } // It's possible that this might throw an error because there
                      // are a lot of edge-cases in which `Object.defineProperty` might
                      // not succeed; since this functionality is only intended to
                      // help beginners anyways, we'll just catch such an exception
                      // if it occurs, and fall back to legacy behavior.

                      cov_1n48hgzlok.s[283]++;
                      Object.defineProperty(globalObject, prop, {
                        configurable: true,
                        enumerable: true,
                        get: function get() {
                          cov_1n48hgzlok.f[29]++;
                          cov_1n48hgzlok.s[284]++;
                          return value;
                        },
                        set: function set(newValue) {
                          cov_1n48hgzlok.f[30]++;
                          cov_1n48hgzlok.s[285]++;
                          Object.defineProperty(globalObject, prop, {
                            configurable: true,
                            enumerable: true,
                            value: newValue,
                            writable: true
                          });
                          cov_1n48hgzlok.s[286]++;
                          log('You just changed the value of "'.concat(prop, '", which was a p5sound function. This could cause problems later if you\'re not careful.'));
                        }
                      });
                    } catch (e) {
                      cov_1n48hgzlok.s[287]++;
                      globalObject[prop] = value;
                    }
                  } else {
                    cov_1n48hgzlok.b[82][1]++;
                    cov_1n48hgzlok.s[288]++;
                    globalObject[prop] = value;
                  }
                };
              }
            }
          ]);
          cov_1n48hgzlok.s[289]++;
          return p5sound;
        }()); // This is a pointer to our global mode p5sound instance, if we're in
        // global mode.
        cov_1n48hgzlok.s[290]++;
        p5sound.instance = null; // attach constants to p5sound prototype
        cov_1n48hgzlok.s[291]++;
        for (var k in constants) {
          cov_1n48hgzlok.s[292]++;
          p5sound.prototype[k] = constants[k];
        } // makes the `VERSION` constant available on the p5sound object
        // in instance mode, even if it hasn't been instatiated yet

        cov_1n48hgzlok.s[293]++;
        p5sound.VERSION = constants.VERSION; // functions that cause preload to wait
        // more can be added by using registerPreloadMethod(func)
        cov_1n48hgzlok.s[294]++;
        p5sound.prototype._preloadMethods = {
          loadImage: p5sound.prototype,
          loadBytes: p5sound.prototype,
          loadShader: p5sound.prototype
        };
        cov_1n48hgzlok.s[295]++;
        p5sound.prototype._registeredMethods = {
          init: [
          ],
          pre: [
          ],
          post: [
          ],
          remove: [
          ]
        };
        cov_1n48hgzlok.s[296]++;
        p5sound.prototype._registeredPreloadMethods = {
        };
        var _default = (cov_1n48hgzlok.s[297]++, p5sound);
        cov_1n48hgzlok.s[298]++;
        exports.default = _default;
      },
      {
        './constants': 145,
        'core-js/modules/es.array.for-each': 118,
        'core-js/modules/es.array.iterator': 120,
        'core-js/modules/es.array.slice': 123,
        'core-js/modules/es.object.get-own-property-descriptor': 125,
        'core-js/modules/es.object.get-own-property-names': 126,
        'core-js/modules/es.object.to-string': 127,
        'core-js/modules/es.string.iterator': 133,
        'core-js/modules/es.symbol': 137,
        'core-js/modules/es.symbol.description': 135,
        'core-js/modules/es.symbol.iterator': 136,
        'core-js/modules/es.weak-map': 138,
        'core-js/modules/web.dom-collections.for-each': 139,
        'core-js/modules/web.dom-collections.iterator': 140
      }
    ],
    149: [
      function (_dereq_, module, exports) {
        'use strict';
        var cov_17bmp2bo7 = function () {
          var path = '/Users/montoyamoraga/github/processing/p5.sound.js/src/core/p5sound.Element.js';
          var hash = '776936819ed4c53b4de024291039e2b39b2332bc';
          var global = new Function('return this') ();
          var gcv = '__coverage__';
          var coverageData = {
            path: '/Users/montoyamoraga/github/processing/p5.sound.js/src/core/p5sound.Element.js',
            statementMap: {
              '0': {
                start: {
                  line: 3,
                  column: 0
                },
                end: {
                  line: 5,
                  column: 3
                }
              },
              '1': {
                start: {
                  line: 6,
                  column: 0
                },
                end: {
                  line: 6,
                  column: 25
                }
              },
              '2': {
                start: {
                  line: 8,
                  column: 12
                },
                end: {
                  line: 8,
                  column: 53
                }
              },
              '3': {
                start: {
                  line: 10,
                  column: 39
                },
                end: {
                  line: 10,
                  column: 93
                }
              },
              '4': {
                start: {
                  line: 12,
                  column: 50
                },
                end: {
                  line: 12,
                  column: 151
                }
              },
              '5': {
                start: {
                  line: 12,
                  column: 92
                },
                end: {
                  line: 12,
                  column: 149
                }
              },
              '6': {
                start: {
                  line: 14,
                  column: 44
                },
                end: {
                  line: 14,
                  column: 315
                }
              },
              '7': {
                start: {
                  line: 14,
                  column: 57
                },
                end: {
                  line: 14,
                  column: 58
                }
              },
              '8': {
                start: {
                  line: 14,
                  column: 102
                },
                end: {
                  line: 14,
                  column: 110
                }
              },
              '9': {
                start: {
                  line: 14,
                  column: 112
                },
                end: {
                  line: 14,
                  column: 167
                }
              },
              '10': {
                start: {
                  line: 14,
                  column: 168
                },
                end: {
                  line: 14,
                  column: 199
                }
              },
              '11': {
                start: {
                  line: 14,
                  column: 200
                },
                end: {
                  line: 14,
                  column: 254
                }
              },
              '12': {
                start: {
                  line: 14,
                  column: 227
                },
                end: {
                  line: 14,
                  column: 254
                }
              },
              '13': {
                start: {
                  line: 14,
                  column: 255
                },
                end: {
                  line: 14,
                  column: 313
                }
              },
              '14': {
                start: {
                  line: 16,
                  column: 62
                },
                end: {
                  line: 16,
                  column: 131
                }
              },
              '15': {
                start: {
                  line: 16,
                  column: 78
                },
                end: {
                  line: 16,
                  column: 131
                }
              },
              '16': {
                start: {
                  line: 16,
                  column: 132
                },
                end: {
                  line: 16,
                  column: 193
                }
              },
              '17': {
                start: {
                  line: 16,
                  column: 149
                },
                end: {
                  line: 16,
                  column: 193
                }
              },
              '18': {
                start: {
                  line: 16,
                  column: 194
                },
                end: {
                  line: 16,
                  column: 213
                }
              },
              '19': {
                start: {
                  line: 29,
                  column: 0
                },
                end: {
                  line: 257,
                  column: 4
                }
              },
              '20': {
                start: {
                  line: 33,
                  column: 4
                },
                end: {
                  line: 33,
                  column: 34
                }
              },
              '21': {
                start: {
                  line: 54,
                  column: 4
                },
                end: {
                  line: 54,
                  column: 19
                }
              },
              '22': {
                start: {
                  line: 55,
                  column: 4
                },
                end: {
                  line: 55,
                  column: 44
                }
              },
              '23': {
                start: {
                  line: 56,
                  column: 4
                },
                end: {
                  line: 56,
                  column: 22
                }
              },
              '24': {
                start: {
                  line: 57,
                  column: 4
                },
                end: {
                  line: 57,
                  column: 38
                }
              },
              '25': {
                start: {
                  line: 58,
                  column: 4
                },
                end: {
                  line: 58,
                  column: 40
                }
              },
              '26': {
                start: {
                  line: 113,
                  column: 2
                },
                end: {
                  line: 254,
                  column: 6
                }
              },
              '27': {
                start: {
                  line: 116,
                  column: 6
                },
                end: {
                  line: 118,
                  column: 7
                }
              },
              '28': {
                start: {
                  line: 117,
                  column: 8
                },
                end: {
                  line: 117,
                  column: 35
                }
              },
              '29': {
                start: {
                  line: 120,
                  column: 6
                },
                end: {
                  line: 128,
                  column: 7
                }
              },
              '30': {
                start: {
                  line: 121,
                  column: 8
                },
                end: {
                  line: 123,
                  column: 9
                }
              },
              '31': {
                start: {
                  line: 122,
                  column: 10
                },
                end: {
                  line: 122,
                  column: 29
                }
              },
              '32': {
                start: {
                  line: 125,
                  column: 8
                },
                end: {
                  line: 125,
                  column: 39
                }
              },
              '33': {
                start: {
                  line: 126,
                  column: 13
                },
                end: {
                  line: 128,
                  column: 7
                }
              },
              '34': {
                start: {
                  line: 127,
                  column: 8
                },
                end: {
                  line: 127,
                  column: 18
                }
              },
              '35': {
                start: {
                  line: 130,
                  column: 6
                },
                end: {
                  line: 130,
                  column: 30
                }
              },
              '36': {
                start: {
                  line: 131,
                  column: 6
                },
                end: {
                  line: 131,
                  column: 18
                }
              },
              '37': {
                start: {
                  line: 167,
                  column: 6
                },
                end: {
                  line: 169,
                  column: 7
                }
              },
              '38': {
                start: {
                  line: 168,
                  column: 8
                },
                end: {
                  line: 168,
                  column: 27
                }
              },
              '39': {
                start: {
                  line: 171,
                  column: 6
                },
                end: {
                  line: 171,
                  column: 24
                }
              },
              '40': {
                start: {
                  line: 172,
                  column: 6
                },
                end: {
                  line: 172,
                  column: 40
                }
              },
              '41': {
                start: {
                  line: 173,
                  column: 6
                },
                end: {
                  line: 173,
                  column: 42
                }
              },
              '42': {
                start: {
                  line: 174,
                  column: 6
                },
                end: {
                  line: 174,
                  column: 18
                }
              },
              '43': {
                start: {
                  line: 207,
                  column: 6
                },
                end: {
                  line: 209,
                  column: 7
                }
              },
              '44': {
                start: {
                  line: 208,
                  column: 8
                },
                end: {
                  line: 208,
                  column: 34
                }
              },
              '45': {
                start: {
                  line: 211,
                  column: 6
                },
                end: {
                  line: 211,
                  column: 29
                }
              },
              '46': {
                start: {
                  line: 212,
                  column: 6
                },
                end: {
                  line: 212,
                  column: 18
                }
              },
              '47': {
                start: {
                  line: 222,
                  column: 6
                },
                end: {
                  line: 222,
                  column: 25
                }
              },
              '48': {
                start: {
                  line: 227,
                  column: 6
                },
                end: {
                  line: 231,
                  column: 7
                }
              },
              '49': {
                start: {
                  line: 228,
                  column: 8
                },
                end: {
                  line: 228,
                  column: 55
                }
              },
              '50': {
                start: {
                  line: 230,
                  column: 8
                },
                end: {
                  line: 230,
                  column: 60
                }
              },
              '51': {
                start: {
                  line: 233,
                  column: 6
                },
                end: {
                  line: 233,
                  column: 18
                }
              },
              '52': {
                start: {
                  line: 239,
                  column: 6
                },
                end: {
                  line: 241,
                  column: 7
                }
              },
              '53': {
                start: {
                  line: 240,
                  column: 8
                },
                end: {
                  line: 240,
                  column: 55
                }
              },
              '54': {
                start: {
                  line: 243,
                  column: 14
                },
                end: {
                  line: 243,
                  column: 27
                }
              },
              '55': {
                start: {
                  line: 244,
                  column: 6
                },
                end: {
                  line: 244,
                  column: 45
                }
              },
              '56': {
                start: {
                  line: 245,
                  column: 6
                },
                end: {
                  line: 245,
                  column: 26
                }
              },
              '57': {
                start: {
                  line: 250,
                  column: 14
                },
                end: {
                  line: 250,
                  column: 29
                }
              },
              '58': {
                start: {
                  line: 251,
                  column: 6
                },
                end: {
                  line: 251,
                  column: 48
                }
              },
              '59': {
                start: {
                  line: 252,
                  column: 6
                },
                end: {
                  line: 252,
                  column: 29
                }
              },
              '60': {
                start: {
                  line: 256,
                  column: 2
                },
                end: {
                  line: 256,
                  column: 16
                }
              },
              '61': {
                start: {
                  line: 259,
                  column: 15
                },
                end: {
                  line: 259,
                  column: 36
                }
              },
              '62': {
                start: {
                  line: 260,
                  column: 0
                },
                end: {
                  line: 260,
                  column: 27
                }
              }
            },
            fnMap: {
              '0': {
                name: '_interopRequireDefault',
                decl: {
                  start: {
                    line: 10,
                    column: 9
                  },
                  end: {
                    line: 10,
                    column: 31
                  }
                },
                loc: {
                  start: {
                    line: 10,
                    column: 37
                  },
                  end: {
                    line: 10,
                    column: 95
                  }
                },
                line: 10
              },
              '1': {
                name: '_classCallCheck',
                decl: {
                  start: {
                    line: 12,
                    column: 9
                  },
                  end: {
                    line: 12,
                    column: 24
                  }
                },
                loc: {
                  start: {
                    line: 12,
                    column: 48
                  },
                  end: {
                    line: 12,
                    column: 153
                  }
                },
                line: 12
              },
              '2': {
                name: '_defineProperties',
                decl: {
                  start: {
                    line: 14,
                    column: 9
                  },
                  end: {
                    line: 14,
                    column: 26
                  }
                },
                loc: {
                  start: {
                    line: 14,
                    column: 42
                  },
                  end: {
                    line: 14,
                    column: 317
                  }
                },
                line: 14
              },
              '3': {
                name: '_createClass',
                decl: {
                  start: {
                    line: 16,
                    column: 9
                  },
                  end: {
                    line: 16,
                    column: 21
                  }
                },
                loc: {
                  start: {
                    line: 16,
                    column: 60
                  },
                  end: {
                    line: 16,
                    column: 215
                  }
                },
                line: 16
              },
              '4': {
                name: '(anonymous_4)',
                decl: {
                  start: {
                    line: 31,
                    column: 0
                  },
                  end: {
                    line: 31,
                    column: 1
                  }
                },
                loc: {
                  start: {
                    line: 31,
                    column: 12
                  },
                  end: {
                    line: 257,
                    column: 1
                  }
                },
                line: 31
              },
              '5': {
                name: '_class',
                decl: {
                  start: {
                    line: 32,
                    column: 11
                  },
                  end: {
                    line: 32,
                    column: 17
                  }
                },
                loc: {
                  start: {
                    line: 32,
                    column: 30
                  },
                  end: {
                    line: 59,
                    column: 3
                  }
                },
                line: 32
              },
              '6': {
                name: 'parent',
                decl: {
                  start: {
                    line: 115,
                    column: 20
                  },
                  end: {
                    line: 115,
                    column: 26
                  }
                },
                loc: {
                  start: {
                    line: 115,
                    column: 30
                  },
                  end: {
                    line: 132,
                    column: 5
                  }
                },
                line: 115
              },
              '7': {
                name: 'id',
                decl: {
                  start: {
                    line: 166,
                    column: 20
                  },
                  end: {
                    line: 166,
                    column: 22
                  }
                },
                loc: {
                  start: {
                    line: 166,
                    column: 28
                  },
                  end: {
                    line: 175,
                    column: 5
                  }
                },
                line: 166
              },
              '8': {
                name: '_class',
                decl: {
                  start: {
                    line: 206,
                    column: 20
                  },
                  end: {
                    line: 206,
                    column: 26
                  }
                },
                loc: {
                  start: {
                    line: 206,
                    column: 30
                  },
                  end: {
                    line: 213,
                    column: 5
                  }
                },
                line: 206
              },
              '9': {
                name: '_setProperty',
                decl: {
                  start: {
                    line: 221,
                    column: 20
                  },
                  end: {
                    line: 221,
                    column: 32
                  }
                },
                loc: {
                  start: {
                    line: 221,
                    column: 46
                  },
                  end: {
                    line: 223,
                    column: 5
                  }
                },
                line: 221
              },
              '10': {
                name: '_adjustListener',
                decl: {
                  start: {
                    line: 226,
                    column: 20
                  },
                  end: {
                    line: 226,
                    column: 35
                  }
                },
                loc: {
                  start: {
                    line: 226,
                    column: 50
                  },
                  end: {
                    line: 234,
                    column: 5
                  }
                },
                line: 226
              },
              '11': {
                name: '_attachListener',
                decl: {
                  start: {
                    line: 237,
                    column: 20
                  },
                  end: {
                    line: 237,
                    column: 35
                  }
                },
                loc: {
                  start: {
                    line: 237,
                    column: 50
                  },
                  end: {
                    line: 246,
                    column: 5
                  }
                },
                line: 237
              },
              '12': {
                name: '_detachListener',
                decl: {
                  start: {
                    line: 249,
                    column: 20
                  },
                  end: {
                    line: 249,
                    column: 35
                  }
                },
                loc: {
                  start: {
                    line: 249,
                    column: 45
                  },
                  end: {
                    line: 253,
                    column: 5
                  }
                },
                line: 249
              }
            },
            branchMap: {
              '0': {
                loc: {
                  start: {
                    line: 10,
                    column: 46
                  },
                  end: {
                    line: 10,
                    column: 92
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 10,
                      column: 70
                    },
                    end: {
                      line: 10,
                      column: 73
                    }
                  },
                  {
                    start: {
                      line: 10,
                      column: 76
                    },
                    end: {
                      line: 10,
                      column: 92
                    }
                  }
                ],
                line: 10
              },
              '1': {
                loc: {
                  start: {
                    line: 10,
                    column: 46
                  },
                  end: {
                    line: 10,
                    column: 67
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 10,
                      column: 46
                    },
                    end: {
                      line: 10,
                      column: 49
                    }
                  },
                  {
                    start: {
                      line: 10,
                      column: 53
                    },
                    end: {
                      line: 10,
                      column: 67
                    }
                  }
                ],
                line: 10
              },
              '2': {
                loc: {
                  start: {
                    line: 12,
                    column: 50
                  },
                  end: {
                    line: 12,
                    column: 151
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 12,
                      column: 50
                    },
                    end: {
                      line: 12,
                      column: 151
                    }
                  },
                  {
                    start: {
                      line: 12,
                      column: 50
                    },
                    end: {
                      line: 12,
                      column: 151
                    }
                  }
                ],
                line: 12
              },
              '3': {
                loc: {
                  start: {
                    line: 14,
                    column: 136
                  },
                  end: {
                    line: 14,
                    column: 166
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 14,
                      column: 136
                    },
                    end: {
                      line: 14,
                      column: 157
                    }
                  },
                  {
                    start: {
                      line: 14,
                      column: 161
                    },
                    end: {
                      line: 14,
                      column: 166
                    }
                  }
                ],
                line: 14
              },
              '4': {
                loc: {
                  start: {
                    line: 14,
                    column: 200
                  },
                  end: {
                    line: 14,
                    column: 254
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 14,
                      column: 200
                    },
                    end: {
                      line: 14,
                      column: 254
                    }
                  },
                  {
                    start: {
                      line: 14,
                      column: 200
                    },
                    end: {
                      line: 14,
                      column: 254
                    }
                  }
                ],
                line: 14
              },
              '5': {
                loc: {
                  start: {
                    line: 16,
                    column: 62
                  },
                  end: {
                    line: 16,
                    column: 131
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 16,
                      column: 62
                    },
                    end: {
                      line: 16,
                      column: 131
                    }
                  },
                  {
                    start: {
                      line: 16,
                      column: 62
                    },
                    end: {
                      line: 16,
                      column: 131
                    }
                  }
                ],
                line: 16
              },
              '6': {
                loc: {
                  start: {
                    line: 16,
                    column: 132
                  },
                  end: {
                    line: 16,
                    column: 193
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 16,
                      column: 132
                    },
                    end: {
                      line: 16,
                      column: 193
                    }
                  },
                  {
                    start: {
                      line: 16,
                      column: 132
                    },
                    end: {
                      line: 16,
                      column: 193
                    }
                  }
                ],
                line: 16
              },
              '7': {
                loc: {
                  start: {
                    line: 116,
                    column: 6
                  },
                  end: {
                    line: 118,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 116,
                      column: 6
                    },
                    end: {
                      line: 118,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 116,
                      column: 6
                    },
                    end: {
                      line: 118,
                      column: 7
                    }
                  }
                ],
                line: 116
              },
              '8': {
                loc: {
                  start: {
                    line: 120,
                    column: 6
                  },
                  end: {
                    line: 128,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 120,
                      column: 6
                    },
                    end: {
                      line: 128,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 120,
                      column: 6
                    },
                    end: {
                      line: 128,
                      column: 7
                    }
                  }
                ],
                line: 120
              },
              '9': {
                loc: {
                  start: {
                    line: 121,
                    column: 8
                  },
                  end: {
                    line: 123,
                    column: 9
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 121,
                      column: 8
                    },
                    end: {
                      line: 123,
                      column: 9
                    }
                  },
                  {
                    start: {
                      line: 121,
                      column: 8
                    },
                    end: {
                      line: 123,
                      column: 9
                    }
                  }
                ],
                line: 121
              },
              '10': {
                loc: {
                  start: {
                    line: 126,
                    column: 13
                  },
                  end: {
                    line: 128,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 126,
                      column: 13
                    },
                    end: {
                      line: 128,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 126,
                      column: 13
                    },
                    end: {
                      line: 128,
                      column: 7
                    }
                  }
                ],
                line: 126
              },
              '11': {
                loc: {
                  start: {
                    line: 167,
                    column: 6
                  },
                  end: {
                    line: 169,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 167,
                      column: 6
                    },
                    end: {
                      line: 169,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 167,
                      column: 6
                    },
                    end: {
                      line: 169,
                      column: 7
                    }
                  }
                ],
                line: 167
              },
              '12': {
                loc: {
                  start: {
                    line: 207,
                    column: 6
                  },
                  end: {
                    line: 209,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 207,
                      column: 6
                    },
                    end: {
                      line: 209,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 207,
                      column: 6
                    },
                    end: {
                      line: 209,
                      column: 7
                    }
                  }
                ],
                line: 207
              },
              '13': {
                loc: {
                  start: {
                    line: 227,
                    column: 6
                  },
                  end: {
                    line: 231,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 227,
                      column: 6
                    },
                    end: {
                      line: 231,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 227,
                      column: 6
                    },
                    end: {
                      line: 231,
                      column: 7
                    }
                  }
                ],
                line: 227
              },
              '14': {
                loc: {
                  start: {
                    line: 239,
                    column: 6
                  },
                  end: {
                    line: 241,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 239,
                      column: 6
                    },
                    end: {
                      line: 241,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 239,
                      column: 6
                    },
                    end: {
                      line: 241,
                      column: 7
                    }
                  }
                ],
                line: 239
              }
            },
            s: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0,
              '10': 0,
              '11': 0,
              '12': 0,
              '13': 0,
              '14': 0,
              '15': 0,
              '16': 0,
              '17': 0,
              '18': 0,
              '19': 0,
              '20': 0,
              '21': 0,
              '22': 0,
              '23': 0,
              '24': 0,
              '25': 0,
              '26': 0,
              '27': 0,
              '28': 0,
              '29': 0,
              '30': 0,
              '31': 0,
              '32': 0,
              '33': 0,
              '34': 0,
              '35': 0,
              '36': 0,
              '37': 0,
              '38': 0,
              '39': 0,
              '40': 0,
              '41': 0,
              '42': 0,
              '43': 0,
              '44': 0,
              '45': 0,
              '46': 0,
              '47': 0,
              '48': 0,
              '49': 0,
              '50': 0,
              '51': 0,
              '52': 0,
              '53': 0,
              '54': 0,
              '55': 0,
              '56': 0,
              '57': 0,
              '58': 0,
              '59': 0,
              '60': 0,
              '61': 0,
              '62': 0
            },
            f: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0,
              '10': 0,
              '11': 0,
              '12': 0
            },
            b: {
              '0': [
                0,
                0
              ],
              '1': [
                0,
                0
              ],
              '2': [
                0,
                0
              ],
              '3': [
                0,
                0
              ],
              '4': [
                0,
                0
              ],
              '5': [
                0,
                0
              ],
              '6': [
                0,
                0
              ],
              '7': [
                0,
                0
              ],
              '8': [
                0,
                0
              ],
              '9': [
                0,
                0
              ],
              '10': [
                0,
                0
              ],
              '11': [
                0,
                0
              ],
              '12': [
                0,
                0
              ],
              '13': [
                0,
                0
              ],
              '14': [
                0,
                0
              ]
            },
            _coverageSchema: '43e27e138ebf9cfc5966b082cf9a028302ed4184',
            hash: '776936819ed4c53b4de024291039e2b39b2332bc'
          };
          var coverage = global[gcv] || (global[gcv] = {
          });
          if (coverage[path] && coverage[path].hash === hash) {
            return coverage[path];
          }
          return coverage[path] = coverageData;
        }();
        cov_17bmp2bo7.s[0]++;
        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        cov_17bmp2bo7.s[1]++;
        exports.default = void 0;
        var _main = (cov_17bmp2bo7.s[2]++, _interopRequireDefault(_dereq_('./main')));
        function _interopRequireDefault(obj) {
          cov_17bmp2bo7.f[0]++;
          cov_17bmp2bo7.s[3]++;
          return (cov_17bmp2bo7.b[1][0]++, obj) && (cov_17bmp2bo7.b[1][1]++, obj.__esModule) ? (cov_17bmp2bo7.b[0][0]++, obj) : (cov_17bmp2bo7.b[0][1]++, {
          default:
            obj
          });
        }
        function _classCallCheck(instance, Constructor) {
          cov_17bmp2bo7.f[1]++;
          cov_17bmp2bo7.s[4]++;
          if (!(instance instanceof Constructor)) {
            cov_17bmp2bo7.b[2][0]++;
            cov_17bmp2bo7.s[5]++;
            throw new TypeError('Cannot call a class as a function');
          } else {
            cov_17bmp2bo7.b[2][1]++;
          }
        }
        function _defineProperties(target, props) {
          cov_17bmp2bo7.f[2]++;
          cov_17bmp2bo7.s[6]++;
          for (var i = (cov_17bmp2bo7.s[7]++, 0); i < props.length; i++) {
            var descriptor = (cov_17bmp2bo7.s[8]++, props[i]);
            cov_17bmp2bo7.s[9]++;
            descriptor.enumerable = (cov_17bmp2bo7.b[3][0]++, descriptor.enumerable) || (cov_17bmp2bo7.b[3][1]++, false);
            cov_17bmp2bo7.s[10]++;
            descriptor.configurable = true;
            cov_17bmp2bo7.s[11]++;
            if ('value' in descriptor) {
              cov_17bmp2bo7.b[4][0]++;
              cov_17bmp2bo7.s[12]++;
              descriptor.writable = true;
            } else {
              cov_17bmp2bo7.b[4][1]++;
            }
            cov_17bmp2bo7.s[13]++;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        function _createClass(Constructor, protoProps, staticProps) {
          cov_17bmp2bo7.f[3]++;
          cov_17bmp2bo7.s[14]++;
          if (protoProps) {
            cov_17bmp2bo7.b[5][0]++;
            cov_17bmp2bo7.s[15]++;
            _defineProperties(Constructor.prototype, protoProps);
          } else {
            cov_17bmp2bo7.b[5][1]++;
          }
          cov_17bmp2bo7.s[16]++;
          if (staticProps) {
            cov_17bmp2bo7.b[6][0]++;
            cov_17bmp2bo7.s[17]++;
            _defineProperties(Constructor, staticProps);
          } else {
            cov_17bmp2bo7.b[6][1]++;
          }
          cov_17bmp2bo7.s[18]++;
          return Constructor;
        }        /**
 * Base class for all elements added to a sketch, including canvas,
 * buffers, and other HTML elements. It is not called directly, but <a href="#/p5sound.Element">p5sound.Element</a>
 * objects are created by calling <a href="#/p5/createCanvas">createCanvas()</a>,
 * <a href="#/p5/createDiv">createDiv()</a>, <a href="#/p5/createImg">createImg()</a>, <a href="#/p5/createInput">createInput()</a>, etc.
 *
 * @class p5sound.Element
 * @constructor
 * @param {String} elt DOM node that is wrapped
 * @param {p5sound} [pInst] pointer to p5sound instance
 */

        cov_17bmp2bo7.s[19]++;
        _main.default.Element =        /*#__PURE__*/
        function () {
          cov_17bmp2bo7.f[4]++;
          function _class(elt, pInst) {
            cov_17bmp2bo7.f[5]++;
            cov_17bmp2bo7.s[20]++;
            _classCallCheck(this, _class);
            /**
     * Underlying HTML element. All normal HTML methods can be called on this.
     * @example
     * <div>
     * <code>
     * function setup() {
     *   let c = createCanvas(50, 50);
     *   c.elt.style.border = '5px solid red';
     * }
     *
     * function draw() {
     *   background(220);
     * }
     * </code>
     * </div>
     *
     * @property elt
     * @readOnly
     */
            cov_17bmp2bo7.s[21]++;
            this.elt = elt;
            cov_17bmp2bo7.s[22]++;
            this._pInst = this._pixelsState = pInst;
            cov_17bmp2bo7.s[23]++;
            this._events = {
            };
            cov_17bmp2bo7.s[24]++;
            this.width = this.elt.offsetWidth;
            cov_17bmp2bo7.s[25]++;
            this.height = this.elt.offsetHeight;
          }          /**
   *
   * Attaches the element to the parent specified. A way of setting
   * the container for the element. Accepts either a string ID, DOM
   * node, or <a href="#/p5sound.Element">p5sound.Element</a>. If no arguments are given, parent node is returned.
   * For more ways to position the canvas, see the
   * <a href='https://github.com/processing/p5sound.js/wiki/Positioning-your-canvas'>
   * positioning the canvas</a> wiki page.
   *
   * @method parent
   * @param  {String|p5sound.Element|Object} parent the ID, DOM node, or <a href="#/p5sound.Element">p5sound.Element</a>
   *                         of desired parent element
   * @chainable
   *
   * @example
   * <div class="norender notest"><code>
   * // Add the following comment to html file.
   * // &lt;div id="myContainer">&lt;/div>
   *
   * // The js code
   * let cnv = createCanvas(100, 100);
   * cnv.parent('myContainer');
   * </code></div>
   *
   * <div class='norender'><code>
   * let div0 = createDiv('this is the parent');
   * let div1 = createDiv('this is the child');
   * div1.parent(div0); // use p5sound.Element
   * </code></div>
   *
   * <div class='norender'><code>
   * let div0 = createDiv('this is the parent');
   * div0.id('apples');
   * let div1 = createDiv('this is the child');
   * div1.parent('apples'); // use id
   * </code></div>
   *
   * <div class='norender notest'><code>
   * let elt = document.getElementById('myParentDiv');
   * let div1 = createDiv('this is the child');
   * div1.parent(elt); // use element from page
   * </code></div>
   *
   * @alt
   * no display.
   */
          /**
   * @method parent
   * @return {p5sound.Element}
   */

          cov_17bmp2bo7.s[26]++;
          _createClass(_class, [
            {
              key: 'parent',
              value: function parent(p) {
                cov_17bmp2bo7.f[6]++;
                cov_17bmp2bo7.s[27]++;
                if (typeof p === 'undefined') {
                  cov_17bmp2bo7.b[7][0]++;
                  cov_17bmp2bo7.s[28]++;
                  return this.elt.parentNode;
                } else {
                  cov_17bmp2bo7.b[7][1]++;
                }
                cov_17bmp2bo7.s[29]++;
                if (typeof p === 'string') {
                  cov_17bmp2bo7.b[8][0]++;
                  cov_17bmp2bo7.s[30]++;
                  if (p[0] === '#') {
                    cov_17bmp2bo7.b[9][0]++;
                    cov_17bmp2bo7.s[31]++;
                    p = p.substring(1);
                  } else {
                    cov_17bmp2bo7.b[9][1]++;
                  }
                  cov_17bmp2bo7.s[32]++;
                  p = document.getElementById(p);
                } else {
                  cov_17bmp2bo7.b[8][1]++;
                  cov_17bmp2bo7.s[33]++;
                  if (p instanceof _main.default.Element) {
                    cov_17bmp2bo7.b[10][0]++;
                    cov_17bmp2bo7.s[34]++;
                    p = p.elt;
                  } else {
                    cov_17bmp2bo7.b[10][1]++;
                  }
                }
                cov_17bmp2bo7.s[35]++;
                p.appendChild(this.elt);
                cov_17bmp2bo7.s[36]++;
                return this;
              }              /**
     *
     * Sets the ID of the element. If no ID argument is passed in, it instead
     * returns the current ID of the element.
     * Note that only one element can have a particular id in a page.
     * The <a href="#/p5sound.Element/class">class()</a> method can be used
     * to identify multiple elements with the same class name.
     *
     * @method id
     * @param  {String} id ID of the element
     * @chainable
     *
     * @example
     * <div class='norender'><code>
     * function setup() {
     *   let cnv = createCanvas(100, 100);
     *   // Assigns a CSS selector ID to
     *   // the canvas element.
     *   cnv.id('mycanvas');
     * }
     * </code></div>
     *
     * @alt
     * no display.
     */
              /**
     * @method id
     * @return {String} the id of the element
     */

            },
            {
              key: 'id',
              value: function id(_id) {
                cov_17bmp2bo7.f[7]++;
                cov_17bmp2bo7.s[37]++;
                if (typeof _id === 'undefined') {
                  cov_17bmp2bo7.b[11][0]++;
                  cov_17bmp2bo7.s[38]++;
                  return this.elt.id;
                } else {
                  cov_17bmp2bo7.b[11][1]++;
                }
                cov_17bmp2bo7.s[39]++;
                this.elt.id = _id;
                cov_17bmp2bo7.s[40]++;
                this.width = this.elt.offsetWidth;
                cov_17bmp2bo7.s[41]++;
                this.height = this.elt.offsetHeight;
                cov_17bmp2bo7.s[42]++;
                return this;
              }              /**
     *
     * Adds given class to the element. If no class argument is passed in, it
     * instead returns a string containing the current class(es) of the element.
     *
     * @method class
     * @param  {String} class class to add
     * @chainable
     *
     * @example
     * <div class='norender'><code>
     * function setup() {
     *   let cnv = createCanvas(100, 100);
     *   // Assigns a CSS selector class 'small'
     *   // to the canvas element.
     *   cnv.class('small');
     * }
     * </code></div>
     *
     * @alt
     * no display.
     */
              /**
     * @method class
     * @return {String} the class of the element
     */

            },
            {
              key: 'class',
              value: function _class(c) {
                cov_17bmp2bo7.f[8]++;
                cov_17bmp2bo7.s[43]++;
                if (typeof c === 'undefined') {
                  cov_17bmp2bo7.b[12][0]++;
                  cov_17bmp2bo7.s[44]++;
                  return this.elt.className;
                } else {
                  cov_17bmp2bo7.b[12][1]++;
                }
                cov_17bmp2bo7.s[45]++;
                this.elt.className = c;
                cov_17bmp2bo7.s[46]++;
                return this;
              } // General handler for event attaching and detaching

            },
            {
              key: '_setProperty',
              /**
     * Helper fxn for sharing pixel methods
     */
              value: function _setProperty(prop, value) {
                cov_17bmp2bo7.f[9]++;
                cov_17bmp2bo7.s[47]++;
                this[prop] = value;
              }
            }
          ], [
            {
              key: '_adjustListener',
              value: function _adjustListener(ev, fxn, ctx) {
                cov_17bmp2bo7.f[10]++;
                cov_17bmp2bo7.s[48]++;
                if (fxn === false) {
                  cov_17bmp2bo7.b[13][0]++;
                  cov_17bmp2bo7.s[49]++;
                  _main.default.Element._detachListener(ev, ctx);
                } else {
                  cov_17bmp2bo7.b[13][1]++;
                  cov_17bmp2bo7.s[50]++;
                  _main.default.Element._attachListener(ev, fxn, ctx);
                }
                cov_17bmp2bo7.s[51]++;
                return this;
              }
            },
            {
              key: '_attachListener',
              value: function _attachListener(ev, fxn, ctx) {
                cov_17bmp2bo7.f[11]++;
                cov_17bmp2bo7.s[52]++;
                // detach the old listener if there was one
                if (ctx._events[ev]) {
                  cov_17bmp2bo7.b[14][0]++;
                  cov_17bmp2bo7.s[53]++;
                  _main.default.Element._detachListener(ev, ctx);
                } else {
                  cov_17bmp2bo7.b[14][1]++;
                }
                var f = (cov_17bmp2bo7.s[54]++, fxn.bind(ctx));
                cov_17bmp2bo7.s[55]++;
                ctx.elt.addEventListener(ev, f, false);
                cov_17bmp2bo7.s[56]++;
                ctx._events[ev] = f;
              }
            },
            {
              key: '_detachListener',
              value: function _detachListener(ev, ctx) {
                cov_17bmp2bo7.f[12]++;
                var f = (cov_17bmp2bo7.s[57]++, ctx._events[ev]);
                cov_17bmp2bo7.s[58]++;
                ctx.elt.removeEventListener(ev, f, false);
                cov_17bmp2bo7.s[59]++;
                ctx._events[ev] = null;
              }
            }
          ]);
          cov_17bmp2bo7.s[60]++;
          return _class;
        }();
        var _default = (cov_17bmp2bo7.s[61]++, _main.default.Element);
        cov_17bmp2bo7.s[62]++;
        exports.default = _default;
      },
      {
        './main': 148
      }
    ],
    150: [
      function (_dereq_, module, exports) {
        'use strict';
        var cov_1t4x8dvnen = function () {
          var path = '/Users/montoyamoraga/github/processing/p5.sound.js/src/core/p5sound.Renderer.js';
          var hash = '1a4a857359fa64e3b75794c428b444f6cb84dcd4';
          var global = new Function('return this') ();
          var gcv = '__coverage__';
          var coverageData = {
            path: '/Users/montoyamoraga/github/processing/p5.sound.js/src/core/p5sound.Renderer.js',
            statementMap: {
              '0': {
                start: {
                  line: 3,
                  column: 24
                },
                end: {
                  line: 3,
                  column: 328
                }
              },
              '1': {
                start: {
                  line: 3,
                  column: 99
                },
                end: {
                  line: 3,
                  column: 154
                }
              },
              '2': {
                start: {
                  line: 3,
                  column: 133
                },
                end: {
                  line: 3,
                  column: 151
                }
              },
              '3': {
                start: {
                  line: 3,
                  column: 164
                },
                end: {
                  line: 3,
                  column: 326
                }
              },
              '4': {
                start: {
                  line: 3,
                  column: 198
                },
                end: {
                  line: 3,
                  column: 323
                }
              },
              '5': {
                start: {
                  line: 3,
                  column: 329
                },
                end: {
                  line: 3,
                  column: 349
                }
              },
              '6': {
                start: {
                  line: 5,
                  column: 0
                },
                end: {
                  line: 5,
                  column: 44
                }
              },
              '7': {
                start: {
                  line: 7,
                  column: 0
                },
                end: {
                  line: 9,
                  column: 3
                }
              },
              '8': {
                start: {
                  line: 10,
                  column: 0
                },
                end: {
                  line: 10,
                  column: 25
                }
              },
              '9': {
                start: {
                  line: 12,
                  column: 12
                },
                end: {
                  line: 12,
                  column: 53
                }
              },
              '10': {
                start: {
                  line: 14,
                  column: 16
                },
                end: {
                  line: 14,
                  column: 69
                }
              },
              '11': {
                start: {
                  line: 16,
                  column: 38
                },
                end: {
                  line: 16,
                  column: 85
                }
              },
              '12': {
                start: {
                  line: 16,
                  column: 73
                },
                end: {
                  line: 16,
                  column: 85
                }
              },
              '13': {
                start: {
                  line: 16,
                  column: 98
                },
                end: {
                  line: 16,
                  column: 111
                }
              },
              '14': {
                start: {
                  line: 16,
                  column: 113
                },
                end: {
                  line: 16,
                  column: 194
                }
              },
              '15': {
                start: {
                  line: 16,
                  column: 178
                },
                end: {
                  line: 16,
                  column: 191
                }
              },
              '16': {
                start: {
                  line: 16,
                  column: 195
                },
                end: {
                  line: 16,
                  column: 208
                }
              },
              '17': {
                start: {
                  line: 18,
                  column: 40
                },
                end: {
                  line: 18,
                  column: 82
                }
              },
              '18': {
                start: {
                  line: 18,
                  column: 69
                },
                end: {
                  line: 18,
                  column: 80
                }
              },
              '19': {
                start: {
                  line: 18,
                  column: 83
                },
                end: {
                  line: 18,
                  column: 187
                }
              },
              '20': {
                start: {
                  line: 18,
                  column: 161
                },
                end: {
                  line: 18,
                  column: 185
                }
              },
              '21': {
                start: {
                  line: 18,
                  column: 200
                },
                end: {
                  line: 18,
                  column: 226
                }
              },
              '22': {
                start: {
                  line: 18,
                  column: 228
                },
                end: {
                  line: 18,
                  column: 283
                }
              },
              '23': {
                start: {
                  line: 18,
                  column: 259
                },
                end: {
                  line: 18,
                  column: 281
                }
              },
              '24': {
                start: {
                  line: 18,
                  column: 297
                },
                end: {
                  line: 18,
                  column: 299
                }
              },
              '25': {
                start: {
                  line: 18,
                  column: 329
                },
                end: {
                  line: 18,
                  column: 385
                }
              },
              '26': {
                start: {
                  line: 18,
                  column: 387
                },
                end: {
                  line: 18,
                  column: 667
                }
              },
              '27': {
                start: {
                  line: 18,
                  column: 410
                },
                end: {
                  line: 18,
                  column: 665
                }
              },
              '28': {
                start: {
                  line: 18,
                  column: 475
                },
                end: {
                  line: 18,
                  column: 547
                }
              },
              '29': {
                start: {
                  line: 18,
                  column: 549
                },
                end: {
                  line: 18,
                  column: 663
                }
              },
              '30': {
                start: {
                  line: 18,
                  column: 587
                },
                end: {
                  line: 18,
                  column: 628
                }
              },
              '31': {
                start: {
                  line: 18,
                  column: 638
                },
                end: {
                  line: 18,
                  column: 661
                }
              },
              '32': {
                start: {
                  line: 18,
                  column: 668
                },
                end: {
                  line: 18,
                  column: 689
                }
              },
              '33': {
                start: {
                  line: 18,
                  column: 690
                },
                end: {
                  line: 18,
                  column: 728
                }
              },
              '34': {
                start: {
                  line: 18,
                  column: 703
                },
                end: {
                  line: 18,
                  column: 726
                }
              },
              '35': {
                start: {
                  line: 18,
                  column: 729
                },
                end: {
                  line: 18,
                  column: 743
                }
              },
              '36': {
                start: {
                  line: 20,
                  column: 39
                },
                end: {
                  line: 20,
                  column: 93
                }
              },
              '37': {
                start: {
                  line: 40,
                  column: 0
                },
                end: {
                  line: 68,
                  column: 2
                }
              },
              '38': {
                start: {
                  line: 41,
                  column: 2
                },
                end: {
                  line: 41,
                  column: 47
                }
              },
              '39': {
                start: {
                  line: 43,
                  column: 2
                },
                end: {
                  line: 43,
                  column: 20
                }
              },
              '40': {
                start: {
                  line: 44,
                  column: 2
                },
                end: {
                  line: 44,
                  column: 28
                }
              },
              '41': {
                start: {
                  line: 46,
                  column: 2
                },
                end: {
                  line: 60,
                  column: 3
                }
              },
              '42': {
                start: {
                  line: 47,
                  column: 4
                },
                end: {
                  line: 47,
                  column: 30
                }
              },
              '43': {
                start: {
                  line: 49,
                  column: 4
                },
                end: {
                  line: 49,
                  column: 50
                }
              },
              '44': {
                start: {
                  line: 51,
                  column: 4
                },
                end: {
                  line: 51,
                  column: 52
                }
              },
              '45': {
                start: {
                  line: 53,
                  column: 4
                },
                end: {
                  line: 53,
                  column: 50
                }
              },
              '46': {
                start: {
                  line: 55,
                  column: 4
                },
                end: {
                  line: 55,
                  column: 52
                }
              },
              '47': {
                start: {
                  line: 58,
                  column: 4
                },
                end: {
                  line: 58,
                  column: 39
                }
              },
              '48': {
                start: {
                  line: 59,
                  column: 4
                },
                end: {
                  line: 59,
                  column: 22
                }
              },
              '49': {
                start: {
                  line: 62,
                  column: 2
                },
                end: {
                  line: 62,
                  column: 39
                }
              },
              '50': {
                start: {
                  line: 63,
                  column: 2
                },
                end: {
                  line: 63,
                  column: 27
                }
              },
              '51': {
                start: {
                  line: 64,
                  column: 2
                },
                end: {
                  line: 64,
                  column: 24
                }
              },
              '52': {
                start: {
                  line: 65,
                  column: 2
                },
                end: {
                  line: 65,
                  column: 22
                }
              },
              '53': {
                start: {
                  line: 66,
                  column: 2
                },
                end: {
                  line: 66,
                  column: 26
                }
              },
              '54': {
                start: {
                  line: 67,
                  column: 2
                },
                end: {
                  line: 67,
                  column: 24
                }
              },
              '55': {
                start: {
                  line: 70,
                  column: 0
                },
                end: {
                  line: 70,
                  column: 82
                }
              },
              '56': {
                start: {
                  line: 73,
                  column: 0
                },
                end: {
                  line: 84,
                  column: 2
                }
              },
              '57': {
                start: {
                  line: 74,
                  column: 2
                },
                end: {
                  line: 83,
                  column: 4
                }
              },
              '58': {
                start: {
                  line: 89,
                  column: 0
                },
                end: {
                  line: 94,
                  column: 2
                }
              },
              '59': {
                start: {
                  line: 90,
                  column: 2
                },
                end: {
                  line: 93,
                  column: 3
                }
              },
              '60': {
                start: {
                  line: 92,
                  column: 4
                },
                end: {
                  line: 92,
                  column: 42
                }
              },
              '61': {
                start: {
                  line: 100,
                  column: 0
                },
                end: {
                  line: 113,
                  column: 2
                }
              },
              '62': {
                start: {
                  line: 101,
                  column: 2
                },
                end: {
                  line: 101,
                  column: 17
                }
              },
              '63': {
                start: {
                  line: 102,
                  column: 2
                },
                end: {
                  line: 102,
                  column: 18
                }
              },
              '64': {
                start: {
                  line: 103,
                  column: 2
                },
                end: {
                  line: 103,
                  column: 49
                }
              },
              '65': {
                start: {
                  line: 104,
                  column: 2
                },
                end: {
                  line: 104,
                  column: 50
                }
              },
              '66': {
                start: {
                  line: 105,
                  column: 2
                },
                end: {
                  line: 105,
                  column: 44
                }
              },
              '67': {
                start: {
                  line: 106,
                  column: 2
                },
                end: {
                  line: 106,
                  column: 45
                }
              },
              '68': {
                start: {
                  line: 108,
                  column: 2
                },
                end: {
                  line: 112,
                  column: 3
                }
              },
              '69': {
                start: {
                  line: 109,
                  column: 4
                },
                end: {
                  line: 109,
                  column: 50
                }
              },
              '70': {
                start: {
                  line: 111,
                  column: 4
                },
                end: {
                  line: 111,
                  column: 52
                }
              },
              '71': {
                start: {
                  line: 115,
                  column: 0
                },
                end: {
                  line: 143,
                  column: 2
                }
              },
              '72': {
                start: {
                  line: 116,
                  column: 20
                },
                end: {
                  line: 116,
                  column: 37
                }
              },
              '73': {
                start: {
                  line: 117,
                  column: 11
                },
                end: {
                  line: 117,
                  column: 36
                }
              },
              '74': {
                start: {
                  line: 118,
                  column: 15
                },
                end: {
                  line: 118,
                  column: 26
                }
              },
              '75': {
                start: {
                  line: 120,
                  column: 2
                },
                end: {
                  line: 138,
                  column: 3
                }
              },
              '76': {
                start: {
                  line: 122,
                  column: 4
                },
                end: {
                  line: 122,
                  column: 14
                }
              },
              '77': {
                start: {
                  line: 123,
                  column: 4
                },
                end: {
                  line: 123,
                  column: 26
                }
              },
              '78': {
                start: {
                  line: 124,
                  column: 4
                },
                end: {
                  line: 124,
                  column: 27
                }
              },
              '79': {
                start: {
                  line: 126,
                  column: 4
                },
                end: {
                  line: 126,
                  column: 12
                }
              },
              '80': {
                start: {
                  line: 127,
                  column: 4
                },
                end: {
                  line: 127,
                  column: 12
                }
              },
              '81': {
                start: {
                  line: 129,
                  column: 4
                },
                end: {
                  line: 136,
                  column: 5
                }
              },
              '82': {
                start: {
                  line: 131,
                  column: 6
                },
                end: {
                  line: 133,
                  column: 7
                }
              },
              '83': {
                start: {
                  line: 132,
                  column: 8
                },
                end: {
                  line: 132,
                  column: 28
                }
              },
              '84': {
                start: {
                  line: 135,
                  column: 6
                },
                end: {
                  line: 135,
                  column: 34
                }
              },
              '85': {
                start: {
                  line: 140,
                  column: 15
                },
                end: {
                  line: 140,
                  column: 44
                }
              },
              '86': {
                start: {
                  line: 141,
                  column: 2
                },
                end: {
                  line: 141,
                  column: 85
                }
              },
              '87': {
                start: {
                  line: 142,
                  column: 2
                },
                end: {
                  line: 142,
                  column: 16
                }
              },
              '88': {
                start: {
                  line: 145,
                  column: 0
                },
                end: {
                  line: 147,
                  column: 2
                }
              },
              '89': {
                start: {
                  line: 146,
                  column: 2
                },
                end: {
                  line: 146,
                  column: 14
                }
              },
              '90': {
                start: {
                  line: 149,
                  column: 15
                },
                end: {
                  line: 149,
                  column: 37
                }
              },
              '91': {
                start: {
                  line: 150,
                  column: 0
                },
                end: {
                  line: 150,
                  column: 27
                }
              }
            },
            fnMap: {
              '0': {
                name: '_typeof',
                decl: {
                  start: {
                    line: 3,
                    column: 9
                  },
                  end: {
                    line: 3,
                    column: 16
                  }
                },
                loc: {
                  start: {
                    line: 3,
                    column: 22
                  },
                  end: {
                    line: 3,
                    column: 351
                  }
                },
                line: 3
              },
              '1': {
                name: '_typeof',
                decl: {
                  start: {
                    line: 3,
                    column: 118
                  },
                  end: {
                    line: 3,
                    column: 125
                  }
                },
                loc: {
                  start: {
                    line: 3,
                    column: 131
                  },
                  end: {
                    line: 3,
                    column: 153
                  }
                },
                line: 3
              },
              '2': {
                name: '_typeof',
                decl: {
                  start: {
                    line: 3,
                    column: 183
                  },
                  end: {
                    line: 3,
                    column: 190
                  }
                },
                loc: {
                  start: {
                    line: 3,
                    column: 196
                  },
                  end: {
                    line: 3,
                    column: 325
                  }
                },
                line: 3
              },
              '3': {
                name: '_getRequireWildcardCache',
                decl: {
                  start: {
                    line: 16,
                    column: 9
                  },
                  end: {
                    line: 16,
                    column: 33
                  }
                },
                loc: {
                  start: {
                    line: 16,
                    column: 36
                  },
                  end: {
                    line: 16,
                    column: 210
                  }
                },
                line: 16
              },
              '4': {
                name: '_getRequireWildcardCache',
                decl: {
                  start: {
                    line: 16,
                    column: 149
                  },
                  end: {
                    line: 16,
                    column: 173
                  }
                },
                loc: {
                  start: {
                    line: 16,
                    column: 176
                  },
                  end: {
                    line: 16,
                    column: 193
                  }
                },
                line: 16
              },
              '5': {
                name: '_interopRequireWildcard',
                decl: {
                  start: {
                    line: 18,
                    column: 9
                  },
                  end: {
                    line: 18,
                    column: 32
                  }
                },
                loc: {
                  start: {
                    line: 18,
                    column: 38
                  },
                  end: {
                    line: 18,
                    column: 745
                  }
                },
                line: 18
              },
              '6': {
                name: '_interopRequireDefault',
                decl: {
                  start: {
                    line: 20,
                    column: 9
                  },
                  end: {
                    line: 20,
                    column: 31
                  }
                },
                loc: {
                  start: {
                    line: 20,
                    column: 37
                  },
                  end: {
                    line: 20,
                    column: 95
                  }
                },
                line: 20
              },
              '7': {
                name: '(anonymous_7)',
                decl: {
                  start: {
                    line: 40,
                    column: 25
                  },
                  end: {
                    line: 40,
                    column: 26
                  }
                },
                loc: {
                  start: {
                    line: 40,
                    column: 61
                  },
                  end: {
                    line: 68,
                    column: 1
                  }
                },
                line: 40
              },
              '8': {
                name: '(anonymous_8)',
                decl: {
                  start: {
                    line: 73,
                    column: 40
                  },
                  end: {
                    line: 73,
                    column: 41
                  }
                },
                loc: {
                  start: {
                    line: 73,
                    column: 52
                  },
                  end: {
                    line: 84,
                    column: 1
                  }
                },
                line: 73
              },
              '9': {
                name: '(anonymous_9)',
                decl: {
                  start: {
                    line: 89,
                    column: 39
                  },
                  end: {
                    line: 89,
                    column: 40
                  }
                },
                loc: {
                  start: {
                    line: 89,
                    column: 56
                  },
                  end: {
                    line: 94,
                    column: 1
                  }
                },
                line: 89
              },
              '10': {
                name: '(anonymous_10)',
                decl: {
                  start: {
                    line: 100,
                    column: 42
                  },
                  end: {
                    line: 100,
                    column: 43
                  }
                },
                loc: {
                  start: {
                    line: 100,
                    column: 58
                  },
                  end: {
                    line: 113,
                    column: 1
                  }
                },
                line: 100
              },
              '11': {
                name: '(anonymous_11)',
                decl: {
                  start: {
                    line: 115,
                    column: 39
                  },
                  end: {
                    line: 115,
                    column: 40
                  }
                },
                loc: {
                  start: {
                    line: 115,
                    column: 61
                  },
                  end: {
                    line: 143,
                    column: 1
                  }
                },
                line: 115
              },
              '12': {
                name: '(anonymous_12)',
                decl: {
                  start: {
                    line: 145,
                    column: 50
                  },
                  end: {
                    line: 145,
                    column: 51
                  }
                },
                loc: {
                  start: {
                    line: 145,
                    column: 62
                  },
                  end: {
                    line: 147,
                    column: 1
                  }
                },
                line: 145
              }
            },
            branchMap: {
              '0': {
                loc: {
                  start: {
                    line: 3,
                    column: 24
                  },
                  end: {
                    line: 3,
                    column: 328
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 3,
                      column: 24
                    },
                    end: {
                      line: 3,
                      column: 328
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 24
                    },
                    end: {
                      line: 3,
                      column: 328
                    }
                  }
                ],
                line: 3
              },
              '1': {
                loc: {
                  start: {
                    line: 3,
                    column: 28
                  },
                  end: {
                    line: 3,
                    column: 95
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 3,
                      column: 28
                    },
                    end: {
                      line: 3,
                      column: 56
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 60
                    },
                    end: {
                      line: 3,
                      column: 95
                    }
                  }
                ],
                line: 3
              },
              '2': {
                loc: {
                  start: {
                    line: 3,
                    column: 205
                  },
                  end: {
                    line: 3,
                    column: 322
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 3,
                      column: 301
                    },
                    end: {
                      line: 3,
                      column: 309
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 312
                    },
                    end: {
                      line: 3,
                      column: 322
                    }
                  }
                ],
                line: 3
              },
              '3': {
                loc: {
                  start: {
                    line: 3,
                    column: 205
                  },
                  end: {
                    line: 3,
                    column: 298
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 3,
                      column: 205
                    },
                    end: {
                      line: 3,
                      column: 208
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 212
                    },
                    end: {
                      line: 3,
                      column: 240
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 244
                    },
                    end: {
                      line: 3,
                      column: 270
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 274
                    },
                    end: {
                      line: 3,
                      column: 298
                    }
                  }
                ],
                line: 3
              },
              '4': {
                loc: {
                  start: {
                    line: 16,
                    column: 38
                  },
                  end: {
                    line: 16,
                    column: 85
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 16,
                      column: 38
                    },
                    end: {
                      line: 16,
                      column: 85
                    }
                  },
                  {
                    start: {
                      line: 16,
                      column: 38
                    },
                    end: {
                      line: 16,
                      column: 85
                    }
                  }
                ],
                line: 16
              },
              '5': {
                loc: {
                  start: {
                    line: 18,
                    column: 40
                  },
                  end: {
                    line: 18,
                    column: 82
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 18,
                      column: 40
                    },
                    end: {
                      line: 18,
                      column: 82
                    }
                  },
                  {
                    start: {
                      line: 18,
                      column: 40
                    },
                    end: {
                      line: 18,
                      column: 82
                    }
                  }
                ],
                line: 18
              },
              '6': {
                loc: {
                  start: {
                    line: 18,
                    column: 44
                  },
                  end: {
                    line: 18,
                    column: 65
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 18,
                      column: 44
                    },
                    end: {
                      line: 18,
                      column: 47
                    }
                  },
                  {
                    start: {
                      line: 18,
                      column: 51
                    },
                    end: {
                      line: 18,
                      column: 65
                    }
                  }
                ],
                line: 18
              },
              '7': {
                loc: {
                  start: {
                    line: 18,
                    column: 83
                  },
                  end: {
                    line: 18,
                    column: 187
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 18,
                      column: 83
                    },
                    end: {
                      line: 18,
                      column: 187
                    }
                  },
                  {
                    start: {
                      line: 18,
                      column: 83
                    },
                    end: {
                      line: 18,
                      column: 187
                    }
                  }
                ],
                line: 18
              },
              '8': {
                loc: {
                  start: {
                    line: 18,
                    column: 87
                  },
                  end: {
                    line: 18,
                    column: 157
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 18,
                      column: 87
                    },
                    end: {
                      line: 18,
                      column: 99
                    }
                  },
                  {
                    start: {
                      line: 18,
                      column: 103
                    },
                    end: {
                      line: 18,
                      column: 128
                    }
                  },
                  {
                    start: {
                      line: 18,
                      column: 132
                    },
                    end: {
                      line: 18,
                      column: 157
                    }
                  }
                ],
                line: 18
              },
              '9': {
                loc: {
                  start: {
                    line: 18,
                    column: 228
                  },
                  end: {
                    line: 18,
                    column: 283
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 18,
                      column: 228
                    },
                    end: {
                      line: 18,
                      column: 283
                    }
                  },
                  {
                    start: {
                      line: 18,
                      column: 228
                    },
                    end: {
                      line: 18,
                      column: 283
                    }
                  }
                ],
                line: 18
              },
              '10': {
                loc: {
                  start: {
                    line: 18,
                    column: 232
                  },
                  end: {
                    line: 18,
                    column: 255
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 18,
                      column: 232
                    },
                    end: {
                      line: 18,
                      column: 237
                    }
                  },
                  {
                    start: {
                      line: 18,
                      column: 241
                    },
                    end: {
                      line: 18,
                      column: 255
                    }
                  }
                ],
                line: 18
              },
              '11': {
                loc: {
                  start: {
                    line: 18,
                    column: 329
                  },
                  end: {
                    line: 18,
                    column: 385
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 18,
                      column: 329
                    },
                    end: {
                      line: 18,
                      column: 350
                    }
                  },
                  {
                    start: {
                      line: 18,
                      column: 354
                    },
                    end: {
                      line: 18,
                      column: 385
                    }
                  }
                ],
                line: 18
              },
              '12': {
                loc: {
                  start: {
                    line: 18,
                    column: 410
                  },
                  end: {
                    line: 18,
                    column: 665
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 18,
                      column: 410
                    },
                    end: {
                      line: 18,
                      column: 665
                    }
                  },
                  {
                    start: {
                      line: 18,
                      column: 410
                    },
                    end: {
                      line: 18,
                      column: 665
                    }
                  }
                ],
                line: 18
              },
              '13': {
                loc: {
                  start: {
                    line: 18,
                    column: 475
                  },
                  end: {
                    line: 18,
                    column: 547
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 18,
                      column: 499
                    },
                    end: {
                      line: 18,
                      column: 540
                    }
                  },
                  {
                    start: {
                      line: 18,
                      column: 543
                    },
                    end: {
                      line: 18,
                      column: 547
                    }
                  }
                ],
                line: 18
              },
              '14': {
                loc: {
                  start: {
                    line: 18,
                    column: 549
                  },
                  end: {
                    line: 18,
                    column: 663
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 18,
                      column: 549
                    },
                    end: {
                      line: 18,
                      column: 663
                    }
                  },
                  {
                    start: {
                      line: 18,
                      column: 549
                    },
                    end: {
                      line: 18,
                      column: 663
                    }
                  }
                ],
                line: 18
              },
              '15': {
                loc: {
                  start: {
                    line: 18,
                    column: 553
                  },
                  end: {
                    line: 18,
                    column: 583
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 18,
                      column: 553
                    },
                    end: {
                      line: 18,
                      column: 557
                    }
                  },
                  {
                    start: {
                      line: 18,
                      column: 562
                    },
                    end: {
                      line: 18,
                      column: 570
                    }
                  },
                  {
                    start: {
                      line: 18,
                      column: 574
                    },
                    end: {
                      line: 18,
                      column: 582
                    }
                  }
                ],
                line: 18
              },
              '16': {
                loc: {
                  start: {
                    line: 18,
                    column: 690
                  },
                  end: {
                    line: 18,
                    column: 728
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 18,
                      column: 690
                    },
                    end: {
                      line: 18,
                      column: 728
                    }
                  },
                  {
                    start: {
                      line: 18,
                      column: 690
                    },
                    end: {
                      line: 18,
                      column: 728
                    }
                  }
                ],
                line: 18
              },
              '17': {
                loc: {
                  start: {
                    line: 20,
                    column: 46
                  },
                  end: {
                    line: 20,
                    column: 92
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 20,
                      column: 70
                    },
                    end: {
                      line: 20,
                      column: 73
                    }
                  },
                  {
                    start: {
                      line: 20,
                      column: 76
                    },
                    end: {
                      line: 20,
                      column: 92
                    }
                  }
                ],
                line: 20
              },
              '18': {
                loc: {
                  start: {
                    line: 20,
                    column: 46
                  },
                  end: {
                    line: 20,
                    column: 67
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 20,
                      column: 46
                    },
                    end: {
                      line: 20,
                      column: 49
                    }
                  },
                  {
                    start: {
                      line: 20,
                      column: 53
                    },
                    end: {
                      line: 20,
                      column: 67
                    }
                  }
                ],
                line: 20
              },
              '19': {
                loc: {
                  start: {
                    line: 46,
                    column: 2
                  },
                  end: {
                    line: 60,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 46,
                      column: 2
                    },
                    end: {
                      line: 60,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 46,
                      column: 2
                    },
                    end: {
                      line: 60,
                      column: 3
                    }
                  }
                ],
                line: 46
              },
              '20': {
                loc: {
                  start: {
                    line: 90,
                    column: 2
                  },
                  end: {
                    line: 93,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 90,
                      column: 2
                    },
                    end: {
                      line: 93,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 90,
                      column: 2
                    },
                    end: {
                      line: 93,
                      column: 3
                    }
                  }
                ],
                line: 90
              },
              '21': {
                loc: {
                  start: {
                    line: 108,
                    column: 2
                  },
                  end: {
                    line: 112,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 108,
                      column: 2
                    },
                    end: {
                      line: 112,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 108,
                      column: 2
                    },
                    end: {
                      line: 112,
                      column: 3
                    }
                  }
                ],
                line: 108
              },
              '22': {
                loc: {
                  start: {
                    line: 120,
                    column: 2
                  },
                  end: {
                    line: 138,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 120,
                      column: 2
                    },
                    end: {
                      line: 138,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 120,
                      column: 2
                    },
                    end: {
                      line: 138,
                      column: 3
                    }
                  }
                ],
                line: 120
              },
              '23': {
                loc: {
                  start: {
                    line: 120,
                    column: 6
                  },
                  end: {
                    line: 120,
                    column: 58
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 120,
                      column: 6
                    },
                    end: {
                      line: 120,
                      column: 30
                    }
                  },
                  {
                    start: {
                      line: 120,
                      column: 34
                    },
                    end: {
                      line: 120,
                      column: 58
                    }
                  }
                ],
                line: 120
              },
              '24': {
                loc: {
                  start: {
                    line: 129,
                    column: 4
                  },
                  end: {
                    line: 136,
                    column: 5
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 129,
                      column: 4
                    },
                    end: {
                      line: 136,
                      column: 5
                    }
                  },
                  {
                    start: {
                      line: 129,
                      column: 4
                    },
                    end: {
                      line: 136,
                      column: 5
                    }
                  }
                ],
                line: 129
              },
              '25': {
                loc: {
                  start: {
                    line: 129,
                    column: 8
                  },
                  end: {
                    line: 129,
                    column: 60
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 129,
                      column: 8
                    },
                    end: {
                      line: 129,
                      column: 32
                    }
                  },
                  {
                    start: {
                      line: 129,
                      column: 36
                    },
                    end: {
                      line: 129,
                      column: 60
                    }
                  }
                ],
                line: 129
              },
              '26': {
                loc: {
                  start: {
                    line: 131,
                    column: 6
                  },
                  end: {
                    line: 133,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 131,
                      column: 6
                    },
                    end: {
                      line: 133,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 131,
                      column: 6
                    },
                    end: {
                      line: 133,
                      column: 7
                    }
                  }
                ],
                line: 131
              },
              '27': {
                loc: {
                  start: {
                    line: 131,
                    column: 10
                  },
                  end: {
                    line: 131,
                    column: 67
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 131,
                      column: 10
                    },
                    end: {
                      line: 131,
                      column: 15
                    }
                  },
                  {
                    start: {
                      line: 131,
                      column: 19
                    },
                    end: {
                      line: 131,
                      column: 24
                    }
                  },
                  {
                    start: {
                      line: 131,
                      column: 28
                    },
                    end: {
                      line: 131,
                      column: 45
                    }
                  },
                  {
                    start: {
                      line: 131,
                      column: 49
                    },
                    end: {
                      line: 131,
                      column: 67
                    }
                  }
                ],
                line: 131
              }
            },
            s: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0,
              '10': 0,
              '11': 0,
              '12': 0,
              '13': 0,
              '14': 0,
              '15': 0,
              '16': 0,
              '17': 0,
              '18': 0,
              '19': 0,
              '20': 0,
              '21': 0,
              '22': 0,
              '23': 0,
              '24': 0,
              '25': 0,
              '26': 0,
              '27': 0,
              '28': 0,
              '29': 0,
              '30': 0,
              '31': 0,
              '32': 0,
              '33': 0,
              '34': 0,
              '35': 0,
              '36': 0,
              '37': 0,
              '38': 0,
              '39': 0,
              '40': 0,
              '41': 0,
              '42': 0,
              '43': 0,
              '44': 0,
              '45': 0,
              '46': 0,
              '47': 0,
              '48': 0,
              '49': 0,
              '50': 0,
              '51': 0,
              '52': 0,
              '53': 0,
              '54': 0,
              '55': 0,
              '56': 0,
              '57': 0,
              '58': 0,
              '59': 0,
              '60': 0,
              '61': 0,
              '62': 0,
              '63': 0,
              '64': 0,
              '65': 0,
              '66': 0,
              '67': 0,
              '68': 0,
              '69': 0,
              '70': 0,
              '71': 0,
              '72': 0,
              '73': 0,
              '74': 0,
              '75': 0,
              '76': 0,
              '77': 0,
              '78': 0,
              '79': 0,
              '80': 0,
              '81': 0,
              '82': 0,
              '83': 0,
              '84': 0,
              '85': 0,
              '86': 0,
              '87': 0,
              '88': 0,
              '89': 0,
              '90': 0,
              '91': 0
            },
            f: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0,
              '10': 0,
              '11': 0,
              '12': 0
            },
            b: {
              '0': [
                0,
                0
              ],
              '1': [
                0,
                0
              ],
              '2': [
                0,
                0
              ],
              '3': [
                0,
                0,
                0,
                0
              ],
              '4': [
                0,
                0
              ],
              '5': [
                0,
                0
              ],
              '6': [
                0,
                0
              ],
              '7': [
                0,
                0
              ],
              '8': [
                0,
                0,
                0
              ],
              '9': [
                0,
                0
              ],
              '10': [
                0,
                0
              ],
              '11': [
                0,
                0
              ],
              '12': [
                0,
                0
              ],
              '13': [
                0,
                0
              ],
              '14': [
                0,
                0
              ],
              '15': [
                0,
                0,
                0
              ],
              '16': [
                0,
                0
              ],
              '17': [
                0,
                0
              ],
              '18': [
                0,
                0
              ],
              '19': [
                0,
                0
              ],
              '20': [
                0,
                0
              ],
              '21': [
                0,
                0
              ],
              '22': [
                0,
                0
              ],
              '23': [
                0,
                0
              ],
              '24': [
                0,
                0
              ],
              '25': [
                0,
                0
              ],
              '26': [
                0,
                0
              ],
              '27': [
                0,
                0,
                0,
                0
              ]
            },
            _coverageSchema: '43e27e138ebf9cfc5966b082cf9a028302ed4184',
            hash: '1a4a857359fa64e3b75794c428b444f6cb84dcd4'
          };
          var coverage = global[gcv] || (global[gcv] = {
          });
          if (coverage[path] && coverage[path].hash === hash) {
            return coverage[path];
          }
          return coverage[path] = coverageData;
        }();
        _dereq_('core-js/modules/es.symbol');
        _dereq_('core-js/modules/es.symbol.description');
        _dereq_('core-js/modules/es.symbol.iterator');
        _dereq_('core-js/modules/es.array.iterator');
        _dereq_('core-js/modules/es.object.assign');
        _dereq_('core-js/modules/es.object.get-own-property-descriptor');
        _dereq_('core-js/modules/es.object.to-string');
        _dereq_('core-js/modules/es.string.iterator');
        _dereq_('core-js/modules/es.weak-map');
        _dereq_('core-js/modules/web.dom-collections.iterator');
        function _typeof2(obj) {
          if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {
            _typeof2 = function _typeof2(obj) {
              return typeof obj;
            };
          } else {
            _typeof2 = function _typeof2(obj) {
              return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;
            };
          }
          return _typeof2(obj);
        }
        function _typeof(obj) {
          cov_1t4x8dvnen.f[0]++;
          cov_1t4x8dvnen.s[0]++;
          if ((cov_1t4x8dvnen.b[1][0]++, typeof Symbol === 'function') && (cov_1t4x8dvnen.b[1][1]++, _typeof2(Symbol.iterator) === 'symbol')) {
            cov_1t4x8dvnen.b[0][0]++;
            cov_1t4x8dvnen.s[1]++;
            _typeof = function _typeof(obj) {
              cov_1t4x8dvnen.f[1]++;
              cov_1t4x8dvnen.s[2]++;
              return _typeof2(obj);
            };
          } else {
            cov_1t4x8dvnen.b[0][1]++;
            cov_1t4x8dvnen.s[3]++;
            _typeof = function _typeof(obj) {
              cov_1t4x8dvnen.f[2]++;
              cov_1t4x8dvnen.s[4]++;
              return (cov_1t4x8dvnen.b[3][0]++, obj) && (cov_1t4x8dvnen.b[3][1]++, typeof Symbol === 'function') && (cov_1t4x8dvnen.b[3][2]++, obj.constructor === Symbol) && (cov_1t4x8dvnen.b[3][3]++, obj !== Symbol.prototype) ? (cov_1t4x8dvnen.b[2][0]++, 'symbol') : (cov_1t4x8dvnen.b[2][1]++, _typeof2(obj));
            };
          }
          cov_1t4x8dvnen.s[5]++;
          return _typeof(obj);
        }
        cov_1t4x8dvnen.s[6]++;
        _dereq_('core-js/modules/es.object.assign');
        cov_1t4x8dvnen.s[7]++;
        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        cov_1t4x8dvnen.s[8]++;
        exports.default = void 0;
        var _main = (cov_1t4x8dvnen.s[9]++, _interopRequireDefault(_dereq_('./main')));
        var constants = (cov_1t4x8dvnen.s[10]++, _interopRequireWildcard(_dereq_('../core/constants')));
        function _getRequireWildcardCache() {
          cov_1t4x8dvnen.f[3]++;
          cov_1t4x8dvnen.s[11]++;
          if (typeof WeakMap !== 'function') {
            cov_1t4x8dvnen.b[4][0]++;
            cov_1t4x8dvnen.s[12]++;
            return null;
          } else {
            cov_1t4x8dvnen.b[4][1]++;
          }
          var cache = (cov_1t4x8dvnen.s[13]++, new WeakMap());
          cov_1t4x8dvnen.s[14]++;
          _getRequireWildcardCache = function _getRequireWildcardCache() {
            cov_1t4x8dvnen.f[4]++;
            cov_1t4x8dvnen.s[15]++;
            return cache;
          };
          cov_1t4x8dvnen.s[16]++;
          return cache;
        }
        function _interopRequireWildcard(obj) {
          cov_1t4x8dvnen.f[5]++;
          cov_1t4x8dvnen.s[17]++;
          if ((cov_1t4x8dvnen.b[6][0]++, obj) && (cov_1t4x8dvnen.b[6][1]++, obj.__esModule)) {
            cov_1t4x8dvnen.b[5][0]++;
            cov_1t4x8dvnen.s[18]++;
            return obj;
          } else {
            cov_1t4x8dvnen.b[5][1]++;
          }
          cov_1t4x8dvnen.s[19]++;
          if ((cov_1t4x8dvnen.b[8][0]++, obj === null) || (cov_1t4x8dvnen.b[8][1]++, _typeof(obj) !== 'object') && (cov_1t4x8dvnen.b[8][2]++, typeof obj !== 'function')) {
            cov_1t4x8dvnen.b[7][0]++;
            cov_1t4x8dvnen.s[20]++;
            return {
            default:
              obj
            };
          } else {
            cov_1t4x8dvnen.b[7][1]++;
          }
          var cache = (cov_1t4x8dvnen.s[21]++, _getRequireWildcardCache());
          cov_1t4x8dvnen.s[22]++;
          if ((cov_1t4x8dvnen.b[10][0]++, cache) && (cov_1t4x8dvnen.b[10][1]++, cache.has(obj))) {
            cov_1t4x8dvnen.b[9][0]++;
            cov_1t4x8dvnen.s[23]++;
            return cache.get(obj);
          } else {
            cov_1t4x8dvnen.b[9][1]++;
          }
          var newObj = (cov_1t4x8dvnen.s[24]++, {
          });
          var hasPropertyDescriptor = (cov_1t4x8dvnen.s[25]++, (cov_1t4x8dvnen.b[11][0]++, Object.defineProperty) && (cov_1t4x8dvnen.b[11][1]++, Object.getOwnPropertyDescriptor));
          cov_1t4x8dvnen.s[26]++;
          for (var key in obj) {
            cov_1t4x8dvnen.s[27]++;
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              cov_1t4x8dvnen.b[12][0]++;
              var desc = (cov_1t4x8dvnen.s[28]++, hasPropertyDescriptor ? (cov_1t4x8dvnen.b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) : (cov_1t4x8dvnen.b[13][1]++, null));
              cov_1t4x8dvnen.s[29]++;
              if ((cov_1t4x8dvnen.b[15][0]++, desc) && ((cov_1t4x8dvnen.b[15][1]++, desc.get) || (cov_1t4x8dvnen.b[15][2]++, desc.set))) {
                cov_1t4x8dvnen.b[14][0]++;
                cov_1t4x8dvnen.s[30]++;
                Object.defineProperty(newObj, key, desc);
              } else {
                cov_1t4x8dvnen.b[14][1]++;
                cov_1t4x8dvnen.s[31]++;
                newObj[key] = obj[key];
              }
            } else {
              cov_1t4x8dvnen.b[12][1]++;
            }
          }
          cov_1t4x8dvnen.s[32]++;
          newObj.default = obj;
          cov_1t4x8dvnen.s[33]++;
          if (cache) {
            cov_1t4x8dvnen.b[16][0]++;
            cov_1t4x8dvnen.s[34]++;
            cache.set(obj, newObj);
          } else {
            cov_1t4x8dvnen.b[16][1]++;
          }
          cov_1t4x8dvnen.s[35]++;
          return newObj;
        }
        function _interopRequireDefault(obj) {
          cov_1t4x8dvnen.f[6]++;
          cov_1t4x8dvnen.s[36]++;
          return (cov_1t4x8dvnen.b[18][0]++, obj) && (cov_1t4x8dvnen.b[18][1]++, obj.__esModule) ? (cov_1t4x8dvnen.b[17][0]++, obj) : (cov_1t4x8dvnen.b[17][1]++, {
          default:
            obj
          });
        }        /**
 * @module Rendering
 * @submodule Rendering
 * @for p5
 */
        /**
 * Main and rendering context, as well as the base API
 * implementation for p5sound.js "core". To be used as the superclass for
 * Renderer2D and Renderer3D classes, respectively.
 *
 * @class p5sound.Renderer
 * @constructor
 * @extends p5sound.Element
 * @param {String} elt DOM node that is wrapped
 * @param {p5sound} [pInst] pointer to p5sound instance
 * @param {Boolean} [isMainCanvas] whether we're using it as main canvas
 */

        cov_1t4x8dvnen.s[37]++;
        _main.default.Renderer = function (elt, pInst, isMainCanvas) {
          cov_1t4x8dvnen.f[7]++;
          cov_1t4x8dvnen.s[38]++;
          _main.default.Element.call(this, elt, pInst);
          cov_1t4x8dvnen.s[39]++;
          this.canvas = elt;
          cov_1t4x8dvnen.s[40]++;
          this._pixelsState = pInst;
          cov_1t4x8dvnen.s[41]++;
          if (isMainCanvas) {
            cov_1t4x8dvnen.b[19][0]++;
            cov_1t4x8dvnen.s[42]++;
            this._isMainCanvas = true; // for pixel method sharing with pimage
            cov_1t4x8dvnen.s[43]++;
            this._pInst._setProperty('_curElement', this);
            cov_1t4x8dvnen.s[44]++;
            this._pInst._setProperty('canvas', this.canvas);
            cov_1t4x8dvnen.s[45]++;
            this._pInst._setProperty('width', this.width);
            cov_1t4x8dvnen.s[46]++;
            this._pInst._setProperty('height', this.height);
          } else {
            cov_1t4x8dvnen.b[19][1]++;
            cov_1t4x8dvnen.s[47]++;
            // hide if offscreen buffer by default
            this.canvas.style.display = 'none';
            cov_1t4x8dvnen.s[48]++;
            this._styles = [
            ]; // non-main elt styles stored in p5sound.Renderer
          }
          cov_1t4x8dvnen.s[49]++;
          this._ellipseMode = constants.CENTER;
          cov_1t4x8dvnen.s[50]++;
          this._curveTightness = 0;
          cov_1t4x8dvnen.s[51]++;
          this._doStroke = true;
          cov_1t4x8dvnen.s[52]++;
          this._doFill = true;
          cov_1t4x8dvnen.s[53]++;
          this._strokeSet = false;
          cov_1t4x8dvnen.s[54]++;
          this._fillSet = false;
        };
        cov_1t4x8dvnen.s[55]++;
        _main.default.Renderer.prototype = Object.create(_main.default.Element.prototype); // the renderer should return a 'style' object that it wishes to
        // store on the push stack.
        cov_1t4x8dvnen.s[56]++;
        _main.default.Renderer.prototype.push = function () {
          cov_1t4x8dvnen.f[8]++;
          cov_1t4x8dvnen.s[57]++;
          return {
            properties: {
              _doStroke: this._doStroke,
              _strokeSet: this._strokeSet,
              _doFill: this._doFill,
              _fillSet: this._fillSet,
              _imageMode: this._imageMode,
              _ellipseMode: this._ellipseMode
            }
          };
        }; // a pop() operation is in progress
        // the renderer is passed the 'style' object that it returned
        // from its push() method.
        cov_1t4x8dvnen.s[58]++;
        _main.default.Renderer.prototype.pop = function (style) {
          cov_1t4x8dvnen.f[9]++;
          cov_1t4x8dvnen.s[59]++;
          if (style.properties) {
            cov_1t4x8dvnen.b[20][0]++;
            cov_1t4x8dvnen.s[60]++;
            // copy the style properties back into the renderer
            Object.assign(this, style.properties);
          } else {
            cov_1t4x8dvnen.b[20][1]++;
          }
        };
        /**
 * Resize our canvas element.s
 */
        cov_1t4x8dvnen.s[61]++;
        _main.default.Renderer.prototype.resize = function (w, h) {
          cov_1t4x8dvnen.f[10]++;
          cov_1t4x8dvnen.s[62]++;
          this.width = w;
          cov_1t4x8dvnen.s[63]++;
          this.height = h;
          cov_1t4x8dvnen.s[64]++;
          this.elt.width = w * this._pInst._pixelDensity;
          cov_1t4x8dvnen.s[65]++;
          this.elt.height = h * this._pInst._pixelDensity;
          cov_1t4x8dvnen.s[66]++;
          this.elt.style.width = ''.concat(w, 'px');
          cov_1t4x8dvnen.s[67]++;
          this.elt.style.height = ''.concat(h, 'px');
          cov_1t4x8dvnen.s[68]++;
          if (this._isMainCanvas) {
            cov_1t4x8dvnen.b[21][0]++;
            cov_1t4x8dvnen.s[69]++;
            this._pInst._setProperty('width', this.width);
            cov_1t4x8dvnen.s[70]++;
            this._pInst._setProperty('height', this.height);
          } else {
            cov_1t4x8dvnen.b[21][1]++;
          }
        };
        cov_1t4x8dvnen.s[71]++;
        _main.default.Renderer.prototype.get = function (x, y, w, h) {
          cov_1t4x8dvnen.f[11]++;
          var pixelsState = (cov_1t4x8dvnen.s[72]++, this._pixelsState);
          var pd = (cov_1t4x8dvnen.s[73]++, pixelsState._pixelDensity);
          var canvas = (cov_1t4x8dvnen.s[74]++, this.canvas);
          cov_1t4x8dvnen.s[75]++;
          if ((cov_1t4x8dvnen.b[23][0]++, typeof x === 'undefined') && (cov_1t4x8dvnen.b[23][1]++, typeof y === 'undefined')) {
            cov_1t4x8dvnen.b[22][0]++;
            cov_1t4x8dvnen.s[76]++;
            // get()
            x = y = 0;
            cov_1t4x8dvnen.s[77]++;
            w = pixelsState.width;
            cov_1t4x8dvnen.s[78]++;
            h = pixelsState.height;
          } else {
            cov_1t4x8dvnen.b[22][1]++;
            cov_1t4x8dvnen.s[79]++;
            x *= pd;
            cov_1t4x8dvnen.s[80]++;
            y *= pd;
            cov_1t4x8dvnen.s[81]++;
            if ((cov_1t4x8dvnen.b[25][0]++, typeof w === 'undefined') && (cov_1t4x8dvnen.b[25][1]++, typeof h === 'undefined')) {
              cov_1t4x8dvnen.b[24][0]++;
              cov_1t4x8dvnen.s[82]++;
              // get(x,y)
              if ((cov_1t4x8dvnen.b[27][0]++, x < 0) || (cov_1t4x8dvnen.b[27][1]++, y < 0) || (cov_1t4x8dvnen.b[27][2]++, x >= canvas.width) || (cov_1t4x8dvnen.b[27][3]++, y >= canvas.height)) {
                cov_1t4x8dvnen.b[26][0]++;
                cov_1t4x8dvnen.s[83]++;
                return [0,
                0,
                0,
                0];
              } else {
                cov_1t4x8dvnen.b[26][1]++;
              }
              cov_1t4x8dvnen.s[84]++;
              return this._getPixel(x, y);
            } else {
              cov_1t4x8dvnen.b[24][1]++;
            } // get(x,y,w,h)

          }
          var region = (cov_1t4x8dvnen.s[85]++, new _main.default.Image(w, h));
          cov_1t4x8dvnen.s[86]++;
          region.canvas.getContext('2d').drawImage(canvas, x, y, w * pd, h * pd, 0, 0, w, h);
          cov_1t4x8dvnen.s[87]++;
          return region;
        };
        cov_1t4x8dvnen.s[88]++;
        _main.default.Renderer.prototype._applyDefaults = function () {
          cov_1t4x8dvnen.f[12]++;
          cov_1t4x8dvnen.s[89]++;
          return this;
        };
        var _default = (cov_1t4x8dvnen.s[90]++, _main.default.Renderer);
        cov_1t4x8dvnen.s[91]++;
        exports.default = _default;
      },
      {
        '../core/constants': 145,
        './main': 148,
        'core-js/modules/es.array.iterator': 120,
        'core-js/modules/es.object.assign': 124,
        'core-js/modules/es.object.get-own-property-descriptor': 125,
        'core-js/modules/es.object.to-string': 127,
        'core-js/modules/es.string.iterator': 133,
        'core-js/modules/es.symbol': 137,
        'core-js/modules/es.symbol.description': 135,
        'core-js/modules/es.symbol.iterator': 136,
        'core-js/modules/es.weak-map': 138,
        'core-js/modules/web.dom-collections.iterator': 140
      }
    ],
    151: [
      function (_dereq_, module, exports) {
        'use strict';
        var cov_sdj34h0ao = function () {
          var path = '/Users/montoyamoraga/github/processing/p5.sound.js/src/core/p5sound.Renderer2D.js';
          var hash = '99fc88684441b827a42ffd09c16fcb521eed4198';
          var global = new Function('return this') ();
          var gcv = '__coverage__';
          var coverageData = {
            path: '/Users/montoyamoraga/github/processing/p5.sound.js/src/core/p5sound.Renderer2D.js',
            statementMap: {
              '0': {
                start: {
                  line: 3,
                  column: 24
                },
                end: {
                  line: 3,
                  column: 328
                }
              },
              '1': {
                start: {
                  line: 3,
                  column: 99
                },
                end: {
                  line: 3,
                  column: 154
                }
              },
              '2': {
                start: {
                  line: 3,
                  column: 133
                },
                end: {
                  line: 3,
                  column: 151
                }
              },
              '3': {
                start: {
                  line: 3,
                  column: 164
                },
                end: {
                  line: 3,
                  column: 326
                }
              },
              '4': {
                start: {
                  line: 3,
                  column: 198
                },
                end: {
                  line: 3,
                  column: 323
                }
              },
              '5': {
                start: {
                  line: 3,
                  column: 329
                },
                end: {
                  line: 3,
                  column: 349
                }
              },
              '6': {
                start: {
                  line: 5,
                  column: 0
                },
                end: {
                  line: 5,
                  column: 41
                }
              },
              '7': {
                start: {
                  line: 7,
                  column: 0
                },
                end: {
                  line: 7,
                  column: 47
                }
              },
              '8': {
                start: {
                  line: 9,
                  column: 0
                },
                end: {
                  line: 9,
                  column: 47
                }
              },
              '9': {
                start: {
                  line: 11,
                  column: 0
                },
                end: {
                  line: 13,
                  column: 3
                }
              },
              '10': {
                start: {
                  line: 14,
                  column: 0
                },
                end: {
                  line: 14,
                  column: 25
                }
              },
              '11': {
                start: {
                  line: 16,
                  column: 12
                },
                end: {
                  line: 16,
                  column: 53
                }
              },
              '12': {
                start: {
                  line: 18,
                  column: 16
                },
                end: {
                  line: 18,
                  column: 63
                }
              },
              '13': {
                start: {
                  line: 20,
                  column: 0
                },
                end: {
                  line: 20,
                  column: 30
                }
              },
              '14': {
                start: {
                  line: 22,
                  column: 38
                },
                end: {
                  line: 22,
                  column: 85
                }
              },
              '15': {
                start: {
                  line: 22,
                  column: 73
                },
                end: {
                  line: 22,
                  column: 85
                }
              },
              '16': {
                start: {
                  line: 22,
                  column: 98
                },
                end: {
                  line: 22,
                  column: 111
                }
              },
              '17': {
                start: {
                  line: 22,
                  column: 113
                },
                end: {
                  line: 22,
                  column: 194
                }
              },
              '18': {
                start: {
                  line: 22,
                  column: 178
                },
                end: {
                  line: 22,
                  column: 191
                }
              },
              '19': {
                start: {
                  line: 22,
                  column: 195
                },
                end: {
                  line: 22,
                  column: 208
                }
              },
              '20': {
                start: {
                  line: 24,
                  column: 40
                },
                end: {
                  line: 24,
                  column: 82
                }
              },
              '21': {
                start: {
                  line: 24,
                  column: 69
                },
                end: {
                  line: 24,
                  column: 80
                }
              },
              '22': {
                start: {
                  line: 24,
                  column: 83
                },
                end: {
                  line: 24,
                  column: 187
                }
              },
              '23': {
                start: {
                  line: 24,
                  column: 161
                },
                end: {
                  line: 24,
                  column: 185
                }
              },
              '24': {
                start: {
                  line: 24,
                  column: 200
                },
                end: {
                  line: 24,
                  column: 226
                }
              },
              '25': {
                start: {
                  line: 24,
                  column: 228
                },
                end: {
                  line: 24,
                  column: 283
                }
              },
              '26': {
                start: {
                  line: 24,
                  column: 259
                },
                end: {
                  line: 24,
                  column: 281
                }
              },
              '27': {
                start: {
                  line: 24,
                  column: 297
                },
                end: {
                  line: 24,
                  column: 299
                }
              },
              '28': {
                start: {
                  line: 24,
                  column: 329
                },
                end: {
                  line: 24,
                  column: 385
                }
              },
              '29': {
                start: {
                  line: 24,
                  column: 387
                },
                end: {
                  line: 24,
                  column: 667
                }
              },
              '30': {
                start: {
                  line: 24,
                  column: 410
                },
                end: {
                  line: 24,
                  column: 665
                }
              },
              '31': {
                start: {
                  line: 24,
                  column: 475
                },
                end: {
                  line: 24,
                  column: 547
                }
              },
              '32': {
                start: {
                  line: 24,
                  column: 549
                },
                end: {
                  line: 24,
                  column: 663
                }
              },
              '33': {
                start: {
                  line: 24,
                  column: 587
                },
                end: {
                  line: 24,
                  column: 628
                }
              },
              '34': {
                start: {
                  line: 24,
                  column: 638
                },
                end: {
                  line: 24,
                  column: 661
                }
              },
              '35': {
                start: {
                  line: 24,
                  column: 668
                },
                end: {
                  line: 24,
                  column: 689
                }
              },
              '36': {
                start: {
                  line: 24,
                  column: 690
                },
                end: {
                  line: 24,
                  column: 728
                }
              },
              '37': {
                start: {
                  line: 24,
                  column: 703
                },
                end: {
                  line: 24,
                  column: 726
                }
              },
              '38': {
                start: {
                  line: 24,
                  column: 729
                },
                end: {
                  line: 24,
                  column: 743
                }
              },
              '39': {
                start: {
                  line: 26,
                  column: 39
                },
                end: {
                  line: 26,
                  column: 93
                }
              },
              '40': {
                start: {
                  line: 33,
                  column: 17
                },
                end: {
                  line: 33,
                  column: 32
                }
              },
              '41': {
                start: {
                  line: 35,
                  column: 0
                },
                end: {
                  line: 43,
                  column: 2
                }
              },
              '42': {
                start: {
                  line: 36,
                  column: 2
                },
                end: {
                  line: 36,
                  column: 62
                }
              },
              '43': {
                start: {
                  line: 38,
                  column: 2
                },
                end: {
                  line: 38,
                  column: 53
                }
              },
              '44': {
                start: {
                  line: 40,
                  column: 2
                },
                end: {
                  line: 40,
                  column: 66
                }
              },
              '45': {
                start: {
                  line: 42,
                  column: 2
                },
                end: {
                  line: 42,
                  column: 14
                }
              },
              '46': {
                start: {
                  line: 45,
                  column: 0
                },
                end: {
                  line: 45,
                  column: 85
                }
              },
              '47': {
                start: {
                  line: 47,
                  column: 0
                },
                end: {
                  line: 57,
                  column: 2
                }
              },
              '48': {
                start: {
                  line: 48,
                  column: 2
                },
                end: {
                  line: 48,
                  column: 62
                }
              },
              '49': {
                start: {
                  line: 49,
                  column: 2
                },
                end: {
                  line: 49,
                  column: 42
                }
              },
              '50': {
                start: {
                  line: 51,
                  column: 2
                },
                end: {
                  line: 51,
                  column: 41
                }
              },
              '51': {
                start: {
                  line: 53,
                  column: 2
                },
                end: {
                  line: 53,
                  column: 45
                }
              },
              '52': {
                start: {
                  line: 55,
                  column: 2
                },
                end: {
                  line: 55,
                  column: 48
                }
              },
              '53': {
                start: {
                  line: 56,
                  column: 2
                },
                end: {
                  line: 56,
                  column: 54
                }
              },
              '54': {
                start: {
                  line: 59,
                  column: 0
                },
                end: {
                  line: 63,
                  column: 2
                }
              },
              '55': {
                start: {
                  line: 60,
                  column: 2
                },
                end: {
                  line: 60,
                  column: 59
                }
              },
              '56': {
                start: {
                  line: 62,
                  column: 2
                },
                end: {
                  line: 62,
                  column: 82
                }
              },
              '57': {
                start: {
                  line: 68,
                  column: 0
                },
                end: {
                  line: 87,
                  column: 2
                }
              },
              '58': {
                start: {
                  line: 71,
                  column: 2
                },
                end: {
                  line: 71,
                  column: 29
                }
              },
              '59': {
                start: {
                  line: 73,
                  column: 16
                },
                end: {
                  line: 73,
                  column: 31
                }
              },
              '60': {
                start: {
                  line: 76,
                  column: 14
                },
                end: {
                  line: 76,
                  column: 79
                }
              },
              '61': {
                start: {
                  line: 78,
                  column: 16
                },
                end: {
                  line: 78,
                  column: 32
                }
              },
              '62': {
                start: {
                  line: 80,
                  column: 2
                },
                end: {
                  line: 80,
                  column: 25
                }
              },
              '63': {
                start: {
                  line: 82,
                  column: 2
                },
                end: {
                  line: 82,
                  column: 62
                }
              },
              '64': {
                start: {
                  line: 84,
                  column: 2
                },
                end: {
                  line: 84,
                  column: 25
                }
              },
              '65': {
                start: {
                  line: 86,
                  column: 2
                },
                end: {
                  line: 86,
                  column: 32
                }
              },
              '66': {
                start: {
                  line: 89,
                  column: 0
                },
                end: {
                  line: 93,
                  column: 2
                }
              },
              '67': {
                start: {
                  line: 90,
                  column: 2
                },
                end: {
                  line: 90,
                  column: 29
                }
              },
              '68': {
                start: {
                  line: 91,
                  column: 2
                },
                end: {
                  line: 91,
                  column: 63
                }
              },
              '69': {
                start: {
                  line: 92,
                  column: 2
                },
                end: {
                  line: 92,
                  column: 32
                }
              },
              '70': {
                start: {
                  line: 95,
                  column: 0
                },
                end: {
                  line: 101,
                  column: 2
                }
              },
              '71': {
                start: {
                  line: 98,
                  column: 14
                },
                end: {
                  line: 98,
                  column: 81
                }
              },
              '72': {
                start: {
                  line: 100,
                  column: 2
                },
                end: {
                  line: 100,
                  column: 34
                }
              },
              '73': {
                start: {
                  line: 103,
                  column: 0
                },
                end: {
                  line: 109,
                  column: 2
                }
              },
              '74': {
                start: {
                  line: 106,
                  column: 14
                },
                end: {
                  line: 106,
                  column: 81
                }
              },
              '75': {
                start: {
                  line: 108,
                  column: 2
                },
                end: {
                  line: 108,
                  column: 36
                }
              },
              '76': {
                start: {
                  line: 122,
                  column: 0
                },
                end: {
                  line: 168,
                  column: 2
                }
              },
              '77': {
                start: {
                  line: 123,
                  column: 12
                },
                end: {
                  line: 123,
                  column: 31
                }
              },
              '78': {
                start: {
                  line: 124,
                  column: 15
                },
                end: {
                  line: 124,
                  column: 27
                }
              },
              '79': {
                start: {
                  line: 125,
                  column: 17
                },
                end: {
                  line: 125,
                  column: 31
                }
              },
              '80': {
                start: {
                  line: 126,
                  column: 10
                },
                end: {
                  line: 126,
                  column: 29
                }
              },
              '81': {
                start: {
                  line: 127,
                  column: 10
                },
                end: {
                  line: 127,
                  column: 29
                }
              },
              '82': {
                start: {
                  line: 128,
                  column: 10
                },
                end: {
                  line: 128,
                  column: 29
                }
              },
              '83': {
                start: {
                  line: 129,
                  column: 10
                },
                end: {
                  line: 129,
                  column: 29
                }
              },
              '84': {
                start: {
                  line: 131,
                  column: 2
                },
                end: {
                  line: 139,
                  column: 3
                }
              },
              '85': {
                start: {
                  line: 132,
                  column: 4
                },
                end: {
                  line: 134,
                  column: 5
                }
              },
              '86': {
                start: {
                  line: 133,
                  column: 6
                },
                end: {
                  line: 133,
                  column: 18
                }
              },
              '87': {
                start: {
                  line: 135,
                  column: 9
                },
                end: {
                  line: 139,
                  column: 3
                }
              },
              '88': {
                start: {
                  line: 136,
                  column: 4
                },
                end: {
                  line: 138,
                  column: 5
                }
              },
              '89': {
                start: {
                  line: 137,
                  column: 6
                },
                end: {
                  line: 137,
                  column: 18
                }
              },
              '90': {
                start: {
                  line: 141,
                  column: 14
                },
                end: {
                  line: 141,
                  column: 26
                }
              },
              '91': {
                start: {
                  line: 143,
                  column: 7
                },
                end: {
                  line: 143,
                  column: 20
                }
              },
              '92': {
                start: {
                  line: 145,
                  column: 7
                },
                end: {
                  line: 145,
                  column: 20
                }
              },
              '93': {
                start: {
                  line: 147,
                  column: 7
                },
                end: {
                  line: 147,
                  column: 12
                }
              },
              '94': {
                start: {
                  line: 149,
                  column: 7
                },
                end: {
                  line: 149,
                  column: 12
                }
              },
              '95': {
                start: {
                  line: 151,
                  column: 7
                },
                end: {
                  line: 151,
                  column: 16
                }
              },
              '96': {
                start: {
                  line: 152,
                  column: 11
                },
                end: {
                  line: 152,
                  column: 20
                }
              },
              '97': {
                start: {
                  line: 154,
                  column: 2
                },
                end: {
                  line: 154,
                  column: 18
                }
              },
              '98': {
                start: {
                  line: 155,
                  column: 2
                },
                end: {
                  line: 155,
                  column: 20
                }
              },
              '99': {
                start: {
                  line: 156,
                  column: 2
                },
                end: {
                  line: 156,
                  column: 51
                }
              },
              '100': {
                start: {
                  line: 157,
                  column: 2
                },
                end: {
                  line: 157,
                  column: 53
                }
              },
              '101': {
                start: {
                  line: 158,
                  column: 2
                },
                end: {
                  line: 158,
                  column: 54
                }
              },
              '102': {
                start: {
                  line: 159,
                  column: 2
                },
                end: {
                  line: 159,
                  column: 52
                }
              },
              '103': {
                start: {
                  line: 161,
                  column: 2
                },
                end: {
                  line: 163,
                  column: 3
                }
              },
              '104': {
                start: {
                  line: 162,
                  column: 4
                },
                end: {
                  line: 162,
                  column: 15
                }
              },
              '105': {
                start: {
                  line: 165,
                  column: 2
                },
                end: {
                  line: 167,
                  column: 3
                }
              },
              '106': {
                start: {
                  line: 166,
                  column: 4
                },
                end: {
                  line: 166,
                  column: 17
                }
              },
              '107': {
                start: {
                  line: 173,
                  column: 0
                },
                end: {
                  line: 179,
                  column: 2
                }
              },
              '108': {
                start: {
                  line: 174,
                  column: 2
                },
                end: {
                  line: 176,
                  column: 3
                }
              },
              '109': {
                start: {
                  line: 175,
                  column: 4
                },
                end: {
                  line: 175,
                  column: 38
                }
              },
              '110': {
                start: {
                  line: 178,
                  column: 2
                },
                end: {
                  line: 178,
                  column: 14
                }
              },
              '111': {
                start: {
                  line: 181,
                  column: 0
                },
                end: {
                  line: 187,
                  column: 2
                }
              },
              '112': {
                start: {
                  line: 182,
                  column: 2
                },
                end: {
                  line: 184,
                  column: 3
                }
              },
              '113': {
                start: {
                  line: 183,
                  column: 4
                },
                end: {
                  line: 183,
                  column: 40
                }
              },
              '114': {
                start: {
                  line: 186,
                  column: 2
                },
                end: {
                  line: 186,
                  column: 14
                }
              },
              '115': {
                start: {
                  line: 189,
                  column: 0
                },
                end: {
                  line: 198,
                  column: 2
                }
              },
              '116': {
                start: {
                  line: 190,
                  column: 2
                },
                end: {
                  line: 195,
                  column: 3
                }
              },
              '117': {
                start: {
                  line: 192,
                  column: 4
                },
                end: {
                  line: 192,
                  column: 43
                }
              },
              '118': {
                start: {
                  line: 194,
                  column: 4
                },
                end: {
                  line: 194,
                  column: 38
                }
              },
              '119': {
                start: {
                  line: 197,
                  column: 2
                },
                end: {
                  line: 197,
                  column: 14
                }
              },
              '120': {
                start: {
                  line: 200,
                  column: 0
                },
                end: {
                  line: 206,
                  column: 2
                }
              },
              '121': {
                start: {
                  line: 201,
                  column: 2
                },
                end: {
                  line: 203,
                  column: 3
                }
              },
              '122': {
                start: {
                  line: 202,
                  column: 4
                },
                end: {
                  line: 202,
                  column: 58
                }
              },
              '123': {
                start: {
                  line: 205,
                  column: 2
                },
                end: {
                  line: 205,
                  column: 31
                }
              },
              '124': {
                start: {
                  line: 208,
                  column: 0
                },
                end: {
                  line: 213,
                  column: 2
                }
              },
              '125': {
                start: {
                  line: 209,
                  column: 2
                },
                end: {
                  line: 212,
                  column: 3
                }
              },
              '126': {
                start: {
                  line: 210,
                  column: 4
                },
                end: {
                  line: 210,
                  column: 46
                }
              },
              '127': {
                start: {
                  line: 211,
                  column: 4
                },
                end: {
                  line: 211,
                  column: 38
                }
              },
              '128': {
                start: {
                  line: 215,
                  column: 0
                },
                end: {
                  line: 221,
                  column: 2
                }
              },
              '129': {
                start: {
                  line: 216,
                  column: 2
                },
                end: {
                  line: 218,
                  column: 3
                }
              },
              '130': {
                start: {
                  line: 217,
                  column: 4
                },
                end: {
                  line: 217,
                  column: 62
                }
              },
              '131': {
                start: {
                  line: 220,
                  column: 2
                },
                end: {
                  line: 220,
                  column: 33
                }
              },
              '132': {
                start: {
                  line: 223,
                  column: 0
                },
                end: {
                  line: 228,
                  column: 2
                }
              },
              '133': {
                start: {
                  line: 224,
                  column: 2
                },
                end: {
                  line: 227,
                  column: 3
                }
              },
              '134': {
                start: {
                  line: 225,
                  column: 4
                },
                end: {
                  line: 225,
                  column: 50
                }
              },
              '135': {
                start: {
                  line: 226,
                  column: 4
                },
                end: {
                  line: 226,
                  column: 42
                }
              },
              '136': {
                start: {
                  line: 233,
                  column: 0
                },
                end: {
                  line: 243,
                  column: 2
                }
              },
              '137': {
                start: {
                  line: 234,
                  column: 2
                },
                end: {
                  line: 234,
                  column: 27
                }
              },
              '138': {
                start: {
                  line: 236,
                  column: 2
                },
                end: {
                  line: 236,
                  column: 29
                }
              },
              '139': {
                start: {
                  line: 238,
                  column: 2
                },
                end: {
                  line: 238,
                  column: 51
                }
              },
              '140': {
                start: {
                  line: 240,
                  column: 2
                },
                end: {
                  line: 240,
                  column: 25
                }
              },
              '141': {
                start: {
                  line: 242,
                  column: 2
                },
                end: {
                  line: 242,
                  column: 14
                }
              },
              '142': {
                start: {
                  line: 245,
                  column: 0
                },
                end: {
                  line: 259,
                  column: 2
                }
              },
              '143': {
                start: {
                  line: 246,
                  column: 2
                },
                end: {
                  line: 246,
                  column: 27
                }
              },
              '144': {
                start: {
                  line: 248,
                  column: 2
                },
                end: {
                  line: 248,
                  column: 34
                }
              },
              '145': {
                start: {
                  line: 250,
                  column: 2
                },
                end: {
                  line: 250,
                  column: 34
                }
              },
              '146': {
                start: {
                  line: 252,
                  column: 2
                },
                end: {
                  line: 252,
                  column: 34
                }
              },
              '147': {
                start: {
                  line: 254,
                  column: 2
                },
                end: {
                  line: 254,
                  column: 34
                }
              },
              '148': {
                start: {
                  line: 256,
                  column: 2
                },
                end: {
                  line: 256,
                  column: 25
                }
              },
              '149': {
                start: {
                  line: 258,
                  column: 2
                },
                end: {
                  line: 258,
                  column: 14
                }
              },
              '150': {
                start: {
                  line: 264,
                  column: 0
                },
                end: {
                  line: 276,
                  column: 2
                }
              },
              '151': {
                start: {
                  line: 265,
                  column: 2
                },
                end: {
                  line: 267,
                  column: 3
                }
              },
              '152': {
                start: {
                  line: 266,
                  column: 4
                },
                end: {
                  line: 266,
                  column: 36
                }
              },
              '153': {
                start: {
                  line: 269,
                  column: 2
                },
                end: {
                  line: 271,
                  column: 3
                }
              },
              '154': {
                start: {
                  line: 270,
                  column: 4
                },
                end: {
                  line: 270,
                  column: 31
                }
              },
              '155': {
                start: {
                  line: 273,
                  column: 2
                },
                end: {
                  line: 275,
                  column: 3
                }
              },
              '156': {
                start: {
                  line: 274,
                  column: 4
                },
                end: {
                  line: 274,
                  column: 33
                }
              },
              '157': {
                start: {
                  line: 278,
                  column: 15
                },
                end: {
                  line: 278,
                  column: 39
                }
              },
              '158': {
                start: {
                  line: 279,
                  column: 0
                },
                end: {
                  line: 279,
                  column: 27
                }
              }
            },
            fnMap: {
              '0': {
                name: '_typeof',
                decl: {
                  start: {
                    line: 3,
                    column: 9
                  },
                  end: {
                    line: 3,
                    column: 16
                  }
                },
                loc: {
                  start: {
                    line: 3,
                    column: 22
                  },
                  end: {
                    line: 3,
                    column: 351
                  }
                },
                line: 3
              },
              '1': {
                name: '_typeof',
                decl: {
                  start: {
                    line: 3,
                    column: 118
                  },
                  end: {
                    line: 3,
                    column: 125
                  }
                },
                loc: {
                  start: {
                    line: 3,
                    column: 131
                  },
                  end: {
                    line: 3,
                    column: 153
                  }
                },
                line: 3
              },
              '2': {
                name: '_typeof',
                decl: {
                  start: {
                    line: 3,
                    column: 183
                  },
                  end: {
                    line: 3,
                    column: 190
                  }
                },
                loc: {
                  start: {
                    line: 3,
                    column: 196
                  },
                  end: {
                    line: 3,
                    column: 325
                  }
                },
                line: 3
              },
              '3': {
                name: '_getRequireWildcardCache',
                decl: {
                  start: {
                    line: 22,
                    column: 9
                  },
                  end: {
                    line: 22,
                    column: 33
                  }
                },
                loc: {
                  start: {
                    line: 22,
                    column: 36
                  },
                  end: {
                    line: 22,
                    column: 210
                  }
                },
                line: 22
              },
              '4': {
                name: '_getRequireWildcardCache',
                decl: {
                  start: {
                    line: 22,
                    column: 149
                  },
                  end: {
                    line: 22,
                    column: 173
                  }
                },
                loc: {
                  start: {
                    line: 22,
                    column: 176
                  },
                  end: {
                    line: 22,
                    column: 193
                  }
                },
                line: 22
              },
              '5': {
                name: '_interopRequireWildcard',
                decl: {
                  start: {
                    line: 24,
                    column: 9
                  },
                  end: {
                    line: 24,
                    column: 32
                  }
                },
                loc: {
                  start: {
                    line: 24,
                    column: 38
                  },
                  end: {
                    line: 24,
                    column: 745
                  }
                },
                line: 24
              },
              '6': {
                name: '_interopRequireDefault',
                decl: {
                  start: {
                    line: 26,
                    column: 9
                  },
                  end: {
                    line: 26,
                    column: 31
                  }
                },
                loc: {
                  start: {
                    line: 26,
                    column: 37
                  },
                  end: {
                    line: 26,
                    column: 95
                  }
                },
                line: 26
              },
              '7': {
                name: '(anonymous_7)',
                decl: {
                  start: {
                    line: 35,
                    column: 27
                  },
                  end: {
                    line: 35,
                    column: 28
                  }
                },
                loc: {
                  start: {
                    line: 35,
                    column: 63
                  },
                  end: {
                    line: 43,
                    column: 1
                  }
                },
                line: 35
              },
              '8': {
                name: '(anonymous_8)',
                decl: {
                  start: {
                    line: 47,
                    column: 52
                  },
                  end: {
                    line: 47,
                    column: 53
                  }
                },
                loc: {
                  start: {
                    line: 47,
                    column: 64
                  },
                  end: {
                    line: 57,
                    column: 1
                  }
                },
                line: 47
              },
              '9': {
                name: '(anonymous_9)',
                decl: {
                  start: {
                    line: 59,
                    column: 44
                  },
                  end: {
                    line: 59,
                    column: 45
                  }
                },
                loc: {
                  start: {
                    line: 59,
                    column: 60
                  },
                  end: {
                    line: 63,
                    column: 1
                  }
                },
                line: 59
              },
              '10': {
                name: '(anonymous_10)',
                decl: {
                  start: {
                    line: 68,
                    column: 48
                  },
                  end: {
                    line: 68,
                    column: 49
                  }
                },
                loc: {
                  start: {
                    line: 68,
                    column: 60
                  },
                  end: {
                    line: 87,
                    column: 1
                  }
                },
                line: 68
              },
              '11': {
                name: '(anonymous_11)',
                decl: {
                  start: {
                    line: 89,
                    column: 43
                  },
                  end: {
                    line: 89,
                    column: 44
                  }
                },
                loc: {
                  start: {
                    line: 89,
                    column: 55
                  },
                  end: {
                    line: 93,
                    column: 1
                  }
                },
                line: 89
              },
              '12': {
                name: '(anonymous_12)',
                decl: {
                  start: {
                    line: 95,
                    column: 42
                  },
                  end: {
                    line: 95,
                    column: 43
                  }
                },
                loc: {
                  start: {
                    line: 95,
                    column: 54
                  },
                  end: {
                    line: 101,
                    column: 1
                  }
                },
                line: 95
              },
              '13': {
                name: '(anonymous_13)',
                decl: {
                  start: {
                    line: 103,
                    column: 44
                  },
                  end: {
                    line: 103,
                    column: 45
                  }
                },
                loc: {
                  start: {
                    line: 103,
                    column: 56
                  },
                  end: {
                    line: 109,
                    column: 1
                  }
                },
                line: 103
              },
              '14': {
                name: '(anonymous_14)',
                decl: {
                  start: {
                    line: 122,
                    column: 45
                  },
                  end: {
                    line: 122,
                    column: 46
                  }
                },
                loc: {
                  start: {
                    line: 122,
                    column: 61
                  },
                  end: {
                    line: 168,
                    column: 1
                  }
                },
                line: 122
              },
              '15': {
                name: '(anonymous_15)',
                decl: {
                  start: {
                    line: 173,
                    column: 47
                  },
                  end: {
                    line: 173,
                    column: 48
                  }
                },
                loc: {
                  start: {
                    line: 173,
                    column: 62
                  },
                  end: {
                    line: 179,
                    column: 1
                  }
                },
                line: 173
              },
              '16': {
                name: '(anonymous_16)',
                decl: {
                  start: {
                    line: 181,
                    column: 48
                  },
                  end: {
                    line: 181,
                    column: 49
                  }
                },
                loc: {
                  start: {
                    line: 181,
                    column: 64
                  },
                  end: {
                    line: 187,
                    column: 1
                  }
                },
                line: 181
              },
              '17': {
                name: '(anonymous_17)',
                decl: {
                  start: {
                    line: 189,
                    column: 50
                  },
                  end: {
                    line: 189,
                    column: 51
                  }
                },
                loc: {
                  start: {
                    line: 189,
                    column: 63
                  },
                  end: {
                    line: 198,
                    column: 1
                  }
                },
                line: 189
              },
              '18': {
                name: '(anonymous_18)',
                decl: {
                  start: {
                    line: 200,
                    column: 46
                  },
                  end: {
                    line: 200,
                    column: 47
                  }
                },
                loc: {
                  start: {
                    line: 200,
                    column: 58
                  },
                  end: {
                    line: 206,
                    column: 1
                  }
                },
                line: 200
              },
              '19': {
                name: '(anonymous_19)',
                decl: {
                  start: {
                    line: 208,
                    column: 46
                  },
                  end: {
                    line: 208,
                    column: 47
                  }
                },
                loc: {
                  start: {
                    line: 208,
                    column: 67
                  },
                  end: {
                    line: 213,
                    column: 1
                  }
                },
                line: 208
              },
              '20': {
                name: '(anonymous_20)',
                decl: {
                  start: {
                    line: 215,
                    column: 48
                  },
                  end: {
                    line: 215,
                    column: 49
                  }
                },
                loc: {
                  start: {
                    line: 215,
                    column: 60
                  },
                  end: {
                    line: 221,
                    column: 1
                  }
                },
                line: 215
              },
              '21': {
                name: '(anonymous_21)',
                decl: {
                  start: {
                    line: 223,
                    column: 48
                  },
                  end: {
                    line: 223,
                    column: 49
                  }
                },
                loc: {
                  start: {
                    line: 223,
                    column: 71
                  },
                  end: {
                    line: 228,
                    column: 1
                  }
                },
                line: 223
              },
              '22': {
                name: '(anonymous_22)',
                decl: {
                  start: {
                    line: 233,
                    column: 44
                  },
                  end: {
                    line: 233,
                    column: 45
                  }
                },
                loc: {
                  start: {
                    line: 233,
                    column: 86
                  },
                  end: {
                    line: 243,
                    column: 1
                  }
                },
                line: 233
              },
              '23': {
                name: '(anonymous_23)',
                decl: {
                  start: {
                    line: 245,
                    column: 43
                  },
                  end: {
                    line: 245,
                    column: 44
                  }
                },
                loc: {
                  start: {
                    line: 245,
                    column: 85
                  },
                  end: {
                    line: 259,
                    column: 1
                  }
                },
                line: 245
              },
              '24': {
                name: '(anonymous_24)',
                decl: {
                  start: {
                    line: 264,
                    column: 56
                  },
                  end: {
                    line: 264,
                    column: 57
                  }
                },
                loc: {
                  start: {
                    line: 264,
                    column: 78
                  },
                  end: {
                    line: 276,
                    column: 1
                  }
                },
                line: 264
              }
            },
            branchMap: {
              '0': {
                loc: {
                  start: {
                    line: 3,
                    column: 24
                  },
                  end: {
                    line: 3,
                    column: 328
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 3,
                      column: 24
                    },
                    end: {
                      line: 3,
                      column: 328
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 24
                    },
                    end: {
                      line: 3,
                      column: 328
                    }
                  }
                ],
                line: 3
              },
              '1': {
                loc: {
                  start: {
                    line: 3,
                    column: 28
                  },
                  end: {
                    line: 3,
                    column: 95
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 3,
                      column: 28
                    },
                    end: {
                      line: 3,
                      column: 56
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 60
                    },
                    end: {
                      line: 3,
                      column: 95
                    }
                  }
                ],
                line: 3
              },
              '2': {
                loc: {
                  start: {
                    line: 3,
                    column: 205
                  },
                  end: {
                    line: 3,
                    column: 322
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 3,
                      column: 301
                    },
                    end: {
                      line: 3,
                      column: 309
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 312
                    },
                    end: {
                      line: 3,
                      column: 322
                    }
                  }
                ],
                line: 3
              },
              '3': {
                loc: {
                  start: {
                    line: 3,
                    column: 205
                  },
                  end: {
                    line: 3,
                    column: 298
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 3,
                      column: 205
                    },
                    end: {
                      line: 3,
                      column: 208
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 212
                    },
                    end: {
                      line: 3,
                      column: 240
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 244
                    },
                    end: {
                      line: 3,
                      column: 270
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 274
                    },
                    end: {
                      line: 3,
                      column: 298
                    }
                  }
                ],
                line: 3
              },
              '4': {
                loc: {
                  start: {
                    line: 22,
                    column: 38
                  },
                  end: {
                    line: 22,
                    column: 85
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 22,
                      column: 38
                    },
                    end: {
                      line: 22,
                      column: 85
                    }
                  },
                  {
                    start: {
                      line: 22,
                      column: 38
                    },
                    end: {
                      line: 22,
                      column: 85
                    }
                  }
                ],
                line: 22
              },
              '5': {
                loc: {
                  start: {
                    line: 24,
                    column: 40
                  },
                  end: {
                    line: 24,
                    column: 82
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 24,
                      column: 40
                    },
                    end: {
                      line: 24,
                      column: 82
                    }
                  },
                  {
                    start: {
                      line: 24,
                      column: 40
                    },
                    end: {
                      line: 24,
                      column: 82
                    }
                  }
                ],
                line: 24
              },
              '6': {
                loc: {
                  start: {
                    line: 24,
                    column: 44
                  },
                  end: {
                    line: 24,
                    column: 65
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 24,
                      column: 44
                    },
                    end: {
                      line: 24,
                      column: 47
                    }
                  },
                  {
                    start: {
                      line: 24,
                      column: 51
                    },
                    end: {
                      line: 24,
                      column: 65
                    }
                  }
                ],
                line: 24
              },
              '7': {
                loc: {
                  start: {
                    line: 24,
                    column: 83
                  },
                  end: {
                    line: 24,
                    column: 187
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 24,
                      column: 83
                    },
                    end: {
                      line: 24,
                      column: 187
                    }
                  },
                  {
                    start: {
                      line: 24,
                      column: 83
                    },
                    end: {
                      line: 24,
                      column: 187
                    }
                  }
                ],
                line: 24
              },
              '8': {
                loc: {
                  start: {
                    line: 24,
                    column: 87
                  },
                  end: {
                    line: 24,
                    column: 157
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 24,
                      column: 87
                    },
                    end: {
                      line: 24,
                      column: 99
                    }
                  },
                  {
                    start: {
                      line: 24,
                      column: 103
                    },
                    end: {
                      line: 24,
                      column: 128
                    }
                  },
                  {
                    start: {
                      line: 24,
                      column: 132
                    },
                    end: {
                      line: 24,
                      column: 157
                    }
                  }
                ],
                line: 24
              },
              '9': {
                loc: {
                  start: {
                    line: 24,
                    column: 228
                  },
                  end: {
                    line: 24,
                    column: 283
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 24,
                      column: 228
                    },
                    end: {
                      line: 24,
                      column: 283
                    }
                  },
                  {
                    start: {
                      line: 24,
                      column: 228
                    },
                    end: {
                      line: 24,
                      column: 283
                    }
                  }
                ],
                line: 24
              },
              '10': {
                loc: {
                  start: {
                    line: 24,
                    column: 232
                  },
                  end: {
                    line: 24,
                    column: 255
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 24,
                      column: 232
                    },
                    end: {
                      line: 24,
                      column: 237
                    }
                  },
                  {
                    start: {
                      line: 24,
                      column: 241
                    },
                    end: {
                      line: 24,
                      column: 255
                    }
                  }
                ],
                line: 24
              },
              '11': {
                loc: {
                  start: {
                    line: 24,
                    column: 329
                  },
                  end: {
                    line: 24,
                    column: 385
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 24,
                      column: 329
                    },
                    end: {
                      line: 24,
                      column: 350
                    }
                  },
                  {
                    start: {
                      line: 24,
                      column: 354
                    },
                    end: {
                      line: 24,
                      column: 385
                    }
                  }
                ],
                line: 24
              },
              '12': {
                loc: {
                  start: {
                    line: 24,
                    column: 410
                  },
                  end: {
                    line: 24,
                    column: 665
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 24,
                      column: 410
                    },
                    end: {
                      line: 24,
                      column: 665
                    }
                  },
                  {
                    start: {
                      line: 24,
                      column: 410
                    },
                    end: {
                      line: 24,
                      column: 665
                    }
                  }
                ],
                line: 24
              },
              '13': {
                loc: {
                  start: {
                    line: 24,
                    column: 475
                  },
                  end: {
                    line: 24,
                    column: 547
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 24,
                      column: 499
                    },
                    end: {
                      line: 24,
                      column: 540
                    }
                  },
                  {
                    start: {
                      line: 24,
                      column: 543
                    },
                    end: {
                      line: 24,
                      column: 547
                    }
                  }
                ],
                line: 24
              },
              '14': {
                loc: {
                  start: {
                    line: 24,
                    column: 549
                  },
                  end: {
                    line: 24,
                    column: 663
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 24,
                      column: 549
                    },
                    end: {
                      line: 24,
                      column: 663
                    }
                  },
                  {
                    start: {
                      line: 24,
                      column: 549
                    },
                    end: {
                      line: 24,
                      column: 663
                    }
                  }
                ],
                line: 24
              },
              '15': {
                loc: {
                  start: {
                    line: 24,
                    column: 553
                  },
                  end: {
                    line: 24,
                    column: 583
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 24,
                      column: 553
                    },
                    end: {
                      line: 24,
                      column: 557
                    }
                  },
                  {
                    start: {
                      line: 24,
                      column: 562
                    },
                    end: {
                      line: 24,
                      column: 570
                    }
                  },
                  {
                    start: {
                      line: 24,
                      column: 574
                    },
                    end: {
                      line: 24,
                      column: 582
                    }
                  }
                ],
                line: 24
              },
              '16': {
                loc: {
                  start: {
                    line: 24,
                    column: 690
                  },
                  end: {
                    line: 24,
                    column: 728
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 24,
                      column: 690
                    },
                    end: {
                      line: 24,
                      column: 728
                    }
                  },
                  {
                    start: {
                      line: 24,
                      column: 690
                    },
                    end: {
                      line: 24,
                      column: 728
                    }
                  }
                ],
                line: 24
              },
              '17': {
                loc: {
                  start: {
                    line: 26,
                    column: 46
                  },
                  end: {
                    line: 26,
                    column: 92
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 26,
                      column: 70
                    },
                    end: {
                      line: 26,
                      column: 73
                    }
                  },
                  {
                    start: {
                      line: 26,
                      column: 76
                    },
                    end: {
                      line: 26,
                      column: 92
                    }
                  }
                ],
                line: 26
              },
              '18': {
                loc: {
                  start: {
                    line: 26,
                    column: 46
                  },
                  end: {
                    line: 26,
                    column: 67
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 26,
                      column: 46
                    },
                    end: {
                      line: 26,
                      column: 49
                    }
                  },
                  {
                    start: {
                      line: 26,
                      column: 53
                    },
                    end: {
                      line: 26,
                      column: 67
                    }
                  }
                ],
                line: 26
              },
              '19': {
                loc: {
                  start: {
                    line: 131,
                    column: 2
                  },
                  end: {
                    line: 139,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 131,
                      column: 2
                    },
                    end: {
                      line: 139,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 131,
                      column: 2
                    },
                    end: {
                      line: 139,
                      column: 3
                    }
                  }
                ],
                line: 131
              },
              '20': {
                loc: {
                  start: {
                    line: 131,
                    column: 6
                  },
                  end: {
                    line: 131,
                    column: 25
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 131,
                      column: 6
                    },
                    end: {
                      line: 131,
                      column: 12
                    }
                  },
                  {
                    start: {
                      line: 131,
                      column: 16
                    },
                    end: {
                      line: 131,
                      column: 25
                    }
                  }
                ],
                line: 131
              },
              '21': {
                loc: {
                  start: {
                    line: 132,
                    column: 4
                  },
                  end: {
                    line: 134,
                    column: 5
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 132,
                      column: 4
                    },
                    end: {
                      line: 134,
                      column: 5
                    }
                  },
                  {
                    start: {
                      line: 132,
                      column: 4
                    },
                    end: {
                      line: 134,
                      column: 5
                    }
                  }
                ],
                line: 132
              },
              '22': {
                loc: {
                  start: {
                    line: 135,
                    column: 9
                  },
                  end: {
                    line: 139,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 135,
                      column: 9
                    },
                    end: {
                      line: 139,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 135,
                      column: 9
                    },
                    end: {
                      line: 139,
                      column: 3
                    }
                  }
                ],
                line: 135
              },
              '23': {
                loc: {
                  start: {
                    line: 135,
                    column: 13
                  },
                  end: {
                    line: 135,
                    column: 32
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 135,
                      column: 13
                    },
                    end: {
                      line: 135,
                      column: 20
                    }
                  },
                  {
                    start: {
                      line: 135,
                      column: 24
                    },
                    end: {
                      line: 135,
                      column: 32
                    }
                  }
                ],
                line: 135
              },
              '24': {
                loc: {
                  start: {
                    line: 136,
                    column: 4
                  },
                  end: {
                    line: 138,
                    column: 5
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 136,
                      column: 4
                    },
                    end: {
                      line: 138,
                      column: 5
                    }
                  },
                  {
                    start: {
                      line: 136,
                      column: 4
                    },
                    end: {
                      line: 138,
                      column: 5
                    }
                  }
                ],
                line: 136
              },
              '25': {
                loc: {
                  start: {
                    line: 161,
                    column: 2
                  },
                  end: {
                    line: 163,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 161,
                      column: 2
                    },
                    end: {
                      line: 163,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 161,
                      column: 2
                    },
                    end: {
                      line: 163,
                      column: 3
                    }
                  }
                ],
                line: 161
              },
              '26': {
                loc: {
                  start: {
                    line: 165,
                    column: 2
                  },
                  end: {
                    line: 167,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 165,
                      column: 2
                    },
                    end: {
                      line: 167,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 165,
                      column: 2
                    },
                    end: {
                      line: 167,
                      column: 3
                    }
                  }
                ],
                line: 165
              },
              '27': {
                loc: {
                  start: {
                    line: 174,
                    column: 2
                  },
                  end: {
                    line: 176,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 174,
                      column: 2
                    },
                    end: {
                      line: 176,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 174,
                      column: 2
                    },
                    end: {
                      line: 176,
                      column: 3
                    }
                  }
                ],
                line: 174
              },
              '28': {
                loc: {
                  start: {
                    line: 174,
                    column: 6
                  },
                  end: {
                    line: 174,
                    column: 86
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 174,
                      column: 6
                    },
                    end: {
                      line: 174,
                      column: 29
                    }
                  },
                  {
                    start: {
                      line: 174,
                      column: 33
                    },
                    end: {
                      line: 174,
                      column: 57
                    }
                  },
                  {
                    start: {
                      line: 174,
                      column: 61
                    },
                    end: {
                      line: 174,
                      column: 86
                    }
                  }
                ],
                line: 174
              },
              '29': {
                loc: {
                  start: {
                    line: 182,
                    column: 2
                  },
                  end: {
                    line: 184,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 182,
                      column: 2
                    },
                    end: {
                      line: 184,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 182,
                      column: 2
                    },
                    end: {
                      line: 184,
                      column: 3
                    }
                  }
                ],
                line: 182
              },
              '30': {
                loc: {
                  start: {
                    line: 182,
                    column: 6
                  },
                  end: {
                    line: 182,
                    column: 86
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 182,
                      column: 6
                    },
                    end: {
                      line: 182,
                      column: 30
                    }
                  },
                  {
                    start: {
                      line: 182,
                      column: 34
                    },
                    end: {
                      line: 182,
                      column: 58
                    }
                  },
                  {
                    start: {
                      line: 182,
                      column: 62
                    },
                    end: {
                      line: 182,
                      column: 86
                    }
                  }
                ],
                line: 182
              },
              '31': {
                loc: {
                  start: {
                    line: 190,
                    column: 2
                  },
                  end: {
                    line: 195,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 190,
                      column: 2
                    },
                    end: {
                      line: 195,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 190,
                      column: 2
                    },
                    end: {
                      line: 195,
                      column: 3
                    }
                  }
                ],
                line: 190
              },
              '32': {
                loc: {
                  start: {
                    line: 190,
                    column: 6
                  },
                  end: {
                    line: 190,
                    column: 41
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 190,
                      column: 6
                    },
                    end: {
                      line: 190,
                      column: 30
                    }
                  },
                  {
                    start: {
                      line: 190,
                      column: 34
                    },
                    end: {
                      line: 190,
                      column: 41
                    }
                  }
                ],
                line: 190
              },
              '33': {
                loc: {
                  start: {
                    line: 201,
                    column: 2
                  },
                  end: {
                    line: 203,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 201,
                      column: 2
                    },
                    end: {
                      line: 203,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 201,
                      column: 2
                    },
                    end: {
                      line: 203,
                      column: 3
                    }
                  }
                ],
                line: 201
              },
              '34': {
                loc: {
                  start: {
                    line: 209,
                    column: 2
                  },
                  end: {
                    line: 212,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 209,
                      column: 2
                    },
                    end: {
                      line: 212,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 209,
                      column: 2
                    },
                    end: {
                      line: 212,
                      column: 3
                    }
                  }
                ],
                line: 209
              },
              '35': {
                loc: {
                  start: {
                    line: 216,
                    column: 2
                  },
                  end: {
                    line: 218,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 216,
                      column: 2
                    },
                    end: {
                      line: 218,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 216,
                      column: 2
                    },
                    end: {
                      line: 218,
                      column: 3
                    }
                  }
                ],
                line: 216
              },
              '36': {
                loc: {
                  start: {
                    line: 224,
                    column: 2
                  },
                  end: {
                    line: 227,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 224,
                      column: 2
                    },
                    end: {
                      line: 227,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 224,
                      column: 2
                    },
                    end: {
                      line: 227,
                      column: 3
                    }
                  }
                ],
                line: 224
              },
              '37': {
                loc: {
                  start: {
                    line: 265,
                    column: 2
                  },
                  end: {
                    line: 267,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 265,
                      column: 2
                    },
                    end: {
                      line: 267,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 265,
                      column: 2
                    },
                    end: {
                      line: 267,
                      column: 3
                    }
                  }
                ],
                line: 265
              },
              '38': {
                loc: {
                  start: {
                    line: 269,
                    column: 2
                  },
                  end: {
                    line: 271,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 269,
                      column: 2
                    },
                    end: {
                      line: 271,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 269,
                      column: 2
                    },
                    end: {
                      line: 271,
                      column: 3
                    }
                  }
                ],
                line: 269
              },
              '39': {
                loc: {
                  start: {
                    line: 273,
                    column: 2
                  },
                  end: {
                    line: 275,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 273,
                      column: 2
                    },
                    end: {
                      line: 275,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 273,
                      column: 2
                    },
                    end: {
                      line: 275,
                      column: 3
                    }
                  }
                ],
                line: 273
              }
            },
            s: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0,
              '10': 0,
              '11': 0,
              '12': 0,
              '13': 0,
              '14': 0,
              '15': 0,
              '16': 0,
              '17': 0,
              '18': 0,
              '19': 0,
              '20': 0,
              '21': 0,
              '22': 0,
              '23': 0,
              '24': 0,
              '25': 0,
              '26': 0,
              '27': 0,
              '28': 0,
              '29': 0,
              '30': 0,
              '31': 0,
              '32': 0,
              '33': 0,
              '34': 0,
              '35': 0,
              '36': 0,
              '37': 0,
              '38': 0,
              '39': 0,
              '40': 0,
              '41': 0,
              '42': 0,
              '43': 0,
              '44': 0,
              '45': 0,
              '46': 0,
              '47': 0,
              '48': 0,
              '49': 0,
              '50': 0,
              '51': 0,
              '52': 0,
              '53': 0,
              '54': 0,
              '55': 0,
              '56': 0,
              '57': 0,
              '58': 0,
              '59': 0,
              '60': 0,
              '61': 0,
              '62': 0,
              '63': 0,
              '64': 0,
              '65': 0,
              '66': 0,
              '67': 0,
              '68': 0,
              '69': 0,
              '70': 0,
              '71': 0,
              '72': 0,
              '73': 0,
              '74': 0,
              '75': 0,
              '76': 0,
              '77': 0,
              '78': 0,
              '79': 0,
              '80': 0,
              '81': 0,
              '82': 0,
              '83': 0,
              '84': 0,
              '85': 0,
              '86': 0,
              '87': 0,
              '88': 0,
              '89': 0,
              '90': 0,
              '91': 0,
              '92': 0,
              '93': 0,
              '94': 0,
              '95': 0,
              '96': 0,
              '97': 0,
              '98': 0,
              '99': 0,
              '100': 0,
              '101': 0,
              '102': 0,
              '103': 0,
              '104': 0,
              '105': 0,
              '106': 0,
              '107': 0,
              '108': 0,
              '109': 0,
              '110': 0,
              '111': 0,
              '112': 0,
              '113': 0,
              '114': 0,
              '115': 0,
              '116': 0,
              '117': 0,
              '118': 0,
              '119': 0,
              '120': 0,
              '121': 0,
              '122': 0,
              '123': 0,
              '124': 0,
              '125': 0,
              '126': 0,
              '127': 0,
              '128': 0,
              '129': 0,
              '130': 0,
              '131': 0,
              '132': 0,
              '133': 0,
              '134': 0,
              '135': 0,
              '136': 0,
              '137': 0,
              '138': 0,
              '139': 0,
              '140': 0,
              '141': 0,
              '142': 0,
              '143': 0,
              '144': 0,
              '145': 0,
              '146': 0,
              '147': 0,
              '148': 0,
              '149': 0,
              '150': 0,
              '151': 0,
              '152': 0,
              '153': 0,
              '154': 0,
              '155': 0,
              '156': 0,
              '157': 0,
              '158': 0
            },
            f: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0,
              '10': 0,
              '11': 0,
              '12': 0,
              '13': 0,
              '14': 0,
              '15': 0,
              '16': 0,
              '17': 0,
              '18': 0,
              '19': 0,
              '20': 0,
              '21': 0,
              '22': 0,
              '23': 0,
              '24': 0
            },
            b: {
              '0': [
                0,
                0
              ],
              '1': [
                0,
                0
              ],
              '2': [
                0,
                0
              ],
              '3': [
                0,
                0,
                0,
                0
              ],
              '4': [
                0,
                0
              ],
              '5': [
                0,
                0
              ],
              '6': [
                0,
                0
              ],
              '7': [
                0,
                0
              ],
              '8': [
                0,
                0,
                0
              ],
              '9': [
                0,
                0
              ],
              '10': [
                0,
                0
              ],
              '11': [
                0,
                0
              ],
              '12': [
                0,
                0
              ],
              '13': [
                0,
                0
              ],
              '14': [
                0,
                0
              ],
              '15': [
                0,
                0,
                0
              ],
              '16': [
                0,
                0
              ],
              '17': [
                0,
                0
              ],
              '18': [
                0,
                0
              ],
              '19': [
                0,
                0
              ],
              '20': [
                0,
                0
              ],
              '21': [
                0,
                0
              ],
              '22': [
                0,
                0
              ],
              '23': [
                0,
                0
              ],
              '24': [
                0,
                0
              ],
              '25': [
                0,
                0
              ],
              '26': [
                0,
                0
              ],
              '27': [
                0,
                0
              ],
              '28': [
                0,
                0,
                0
              ],
              '29': [
                0,
                0
              ],
              '30': [
                0,
                0,
                0
              ],
              '31': [
                0,
                0
              ],
              '32': [
                0,
                0
              ],
              '33': [
                0,
                0
              ],
              '34': [
                0,
                0
              ],
              '35': [
                0,
                0
              ],
              '36': [
                0,
                0
              ],
              '37': [
                0,
                0
              ],
              '38': [
                0,
                0
              ],
              '39': [
                0,
                0
              ]
            },
            _coverageSchema: '43e27e138ebf9cfc5966b082cf9a028302ed4184',
            hash: '99fc88684441b827a42ffd09c16fcb521eed4198'
          };
          var coverage = global[gcv] || (global[gcv] = {
          });
          if (coverage[path] && coverage[path].hash === hash) {
            return coverage[path];
          }
          return coverage[path] = coverageData;
        }();
        _dereq_('core-js/modules/es.symbol');
        _dereq_('core-js/modules/es.symbol.description');
        _dereq_('core-js/modules/es.symbol.iterator');
        _dereq_('core-js/modules/es.array.fill');
        _dereq_('core-js/modules/es.array.iterator');
        _dereq_('core-js/modules/es.object.get-own-property-descriptor');
        _dereq_('core-js/modules/es.object.to-string');
        _dereq_('core-js/modules/es.regexp.to-string');
        _dereq_('core-js/modules/es.string.iterator');
        _dereq_('core-js/modules/es.weak-map');
        _dereq_('core-js/modules/web.dom-collections.iterator');
        function _typeof2(obj) {
          if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {
            _typeof2 = function _typeof2(obj) {
              return typeof obj;
            };
          } else {
            _typeof2 = function _typeof2(obj) {
              return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;
            };
          }
          return _typeof2(obj);
        }
        function _typeof(obj) {
          cov_sdj34h0ao.f[0]++;
          cov_sdj34h0ao.s[0]++;
          if ((cov_sdj34h0ao.b[1][0]++, typeof Symbol === 'function') && (cov_sdj34h0ao.b[1][1]++, _typeof2(Symbol.iterator) === 'symbol')) {
            cov_sdj34h0ao.b[0][0]++;
            cov_sdj34h0ao.s[1]++;
            _typeof = function _typeof(obj) {
              cov_sdj34h0ao.f[1]++;
              cov_sdj34h0ao.s[2]++;
              return _typeof2(obj);
            };
          } else {
            cov_sdj34h0ao.b[0][1]++;
            cov_sdj34h0ao.s[3]++;
            _typeof = function _typeof(obj) {
              cov_sdj34h0ao.f[2]++;
              cov_sdj34h0ao.s[4]++;
              return (cov_sdj34h0ao.b[3][0]++, obj) && (cov_sdj34h0ao.b[3][1]++, typeof Symbol === 'function') && (cov_sdj34h0ao.b[3][2]++, obj.constructor === Symbol) && (cov_sdj34h0ao.b[3][3]++, obj !== Symbol.prototype) ? (cov_sdj34h0ao.b[2][0]++, 'symbol') : (cov_sdj34h0ao.b[2][1]++, _typeof2(obj));
            };
          }
          cov_sdj34h0ao.s[5]++;
          return _typeof(obj);
        }
        cov_sdj34h0ao.s[6]++;
        _dereq_('core-js/modules/es.array.fill');
        cov_sdj34h0ao.s[7]++;
        _dereq_('core-js/modules/es.object.to-string');
        cov_sdj34h0ao.s[8]++;
        _dereq_('core-js/modules/es.regexp.to-string');
        cov_sdj34h0ao.s[9]++;
        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        cov_sdj34h0ao.s[10]++;
        exports.default = void 0;
        var _main = (cov_sdj34h0ao.s[11]++, _interopRequireDefault(_dereq_('./main')));
        var constants = (cov_sdj34h0ao.s[12]++, _interopRequireWildcard(_dereq_('./constants')));
        cov_sdj34h0ao.s[13]++;
        _dereq_('./p5sound.Renderer');
        function _getRequireWildcardCache() {
          cov_sdj34h0ao.f[3]++;
          cov_sdj34h0ao.s[14]++;
          if (typeof WeakMap !== 'function') {
            cov_sdj34h0ao.b[4][0]++;
            cov_sdj34h0ao.s[15]++;
            return null;
          } else {
            cov_sdj34h0ao.b[4][1]++;
          }
          var cache = (cov_sdj34h0ao.s[16]++, new WeakMap());
          cov_sdj34h0ao.s[17]++;
          _getRequireWildcardCache = function _getRequireWildcardCache() {
            cov_sdj34h0ao.f[4]++;
            cov_sdj34h0ao.s[18]++;
            return cache;
          };
          cov_sdj34h0ao.s[19]++;
          return cache;
        }
        function _interopRequireWildcard(obj) {
          cov_sdj34h0ao.f[5]++;
          cov_sdj34h0ao.s[20]++;
          if ((cov_sdj34h0ao.b[6][0]++, obj) && (cov_sdj34h0ao.b[6][1]++, obj.__esModule)) {
            cov_sdj34h0ao.b[5][0]++;
            cov_sdj34h0ao.s[21]++;
            return obj;
          } else {
            cov_sdj34h0ao.b[5][1]++;
          }
          cov_sdj34h0ao.s[22]++;
          if ((cov_sdj34h0ao.b[8][0]++, obj === null) || (cov_sdj34h0ao.b[8][1]++, _typeof(obj) !== 'object') && (cov_sdj34h0ao.b[8][2]++, typeof obj !== 'function')) {
            cov_sdj34h0ao.b[7][0]++;
            cov_sdj34h0ao.s[23]++;
            return {
            default:
              obj
            };
          } else {
            cov_sdj34h0ao.b[7][1]++;
          }
          var cache = (cov_sdj34h0ao.s[24]++, _getRequireWildcardCache());
          cov_sdj34h0ao.s[25]++;
          if ((cov_sdj34h0ao.b[10][0]++, cache) && (cov_sdj34h0ao.b[10][1]++, cache.has(obj))) {
            cov_sdj34h0ao.b[9][0]++;
            cov_sdj34h0ao.s[26]++;
            return cache.get(obj);
          } else {
            cov_sdj34h0ao.b[9][1]++;
          }
          var newObj = (cov_sdj34h0ao.s[27]++, {
          });
          var hasPropertyDescriptor = (cov_sdj34h0ao.s[28]++, (cov_sdj34h0ao.b[11][0]++, Object.defineProperty) && (cov_sdj34h0ao.b[11][1]++, Object.getOwnPropertyDescriptor));
          cov_sdj34h0ao.s[29]++;
          for (var key in obj) {
            cov_sdj34h0ao.s[30]++;
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              cov_sdj34h0ao.b[12][0]++;
              var desc = (cov_sdj34h0ao.s[31]++, hasPropertyDescriptor ? (cov_sdj34h0ao.b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) : (cov_sdj34h0ao.b[13][1]++, null));
              cov_sdj34h0ao.s[32]++;
              if ((cov_sdj34h0ao.b[15][0]++, desc) && ((cov_sdj34h0ao.b[15][1]++, desc.get) || (cov_sdj34h0ao.b[15][2]++, desc.set))) {
                cov_sdj34h0ao.b[14][0]++;
                cov_sdj34h0ao.s[33]++;
                Object.defineProperty(newObj, key, desc);
              } else {
                cov_sdj34h0ao.b[14][1]++;
                cov_sdj34h0ao.s[34]++;
                newObj[key] = obj[key];
              }
            } else {
              cov_sdj34h0ao.b[12][1]++;
            }
          }
          cov_sdj34h0ao.s[35]++;
          newObj.default = obj;
          cov_sdj34h0ao.s[36]++;
          if (cache) {
            cov_sdj34h0ao.b[16][0]++;
            cov_sdj34h0ao.s[37]++;
            cache.set(obj, newObj);
          } else {
            cov_sdj34h0ao.b[16][1]++;
          }
          cov_sdj34h0ao.s[38]++;
          return newObj;
        }
        function _interopRequireDefault(obj) {
          cov_sdj34h0ao.f[6]++;
          cov_sdj34h0ao.s[39]++;
          return (cov_sdj34h0ao.b[18][0]++, obj) && (cov_sdj34h0ao.b[18][1]++, obj.__esModule) ? (cov_sdj34h0ao.b[17][0]++, obj) : (cov_sdj34h0ao.b[17][1]++, {
          default:
            obj
          });
        }        /**
 * p5sound.Renderer2D
 * The 2D canvas renderer class.
 * extends p5sound.Renderer
 */

        var styleEmpty = (cov_sdj34h0ao.s[40]++, 'rgba(0,0,0,0)'); // const alphaThreshold = 0.00125; // minimum visible
        cov_sdj34h0ao.s[41]++;
        _main.default.Renderer2D = function (elt, pInst, isMainCanvas) {
          cov_sdj34h0ao.f[7]++;
          cov_sdj34h0ao.s[42]++;
          _main.default.Renderer.call(this, elt, pInst, isMainCanvas);
          cov_sdj34h0ao.s[43]++;
          this.drawingContext = this.canvas.getContext('2d');
          cov_sdj34h0ao.s[44]++;
          this._pInst._setProperty('drawingContext', this.drawingContext);
          cov_sdj34h0ao.s[45]++;
          return this;
        };
        cov_sdj34h0ao.s[46]++;
        _main.default.Renderer2D.prototype = Object.create(_main.default.Renderer.prototype);
        cov_sdj34h0ao.s[47]++;
        _main.default.Renderer2D.prototype._applyDefaults = function () {
          cov_sdj34h0ao.f[8]++;
          cov_sdj34h0ao.s[48]++;
          this._cachedFillStyle = this._cachedStrokeStyle = undefined;
          cov_sdj34h0ao.s[49]++;
          this._cachedBlendMode = constants.BLEND;
          cov_sdj34h0ao.s[50]++;
          this._setFill(constants._DEFAULT_FILL);
          cov_sdj34h0ao.s[51]++;
          this._setStroke(constants._DEFAULT_STROKE);
          cov_sdj34h0ao.s[52]++;
          this.drawingContext.lineCap = constants.ROUND;
          cov_sdj34h0ao.s[53]++;
          this.drawingContext.font = 'normal 12px sans-serif';
        };
        cov_sdj34h0ao.s[54]++;
        _main.default.Renderer2D.prototype.resize = function (w, h) {
          cov_sdj34h0ao.f[9]++;
          cov_sdj34h0ao.s[55]++;
          _main.default.Renderer.prototype.resize.call(this, w, h);
          cov_sdj34h0ao.s[56]++;
          this.drawingContext.scale(this._pInst._pixelDensity, this._pInst._pixelDensity);
        }; //////////////////////////////////////////////
        // COLOR | Setting
        //////////////////////////////////////////////
        cov_sdj34h0ao.s[57]++;
        _main.default.Renderer2D.prototype.background = function () {
          cov_sdj34h0ao.f[10]++;
          var _this$_pInst;
          cov_sdj34h0ao.s[58]++;
          this.drawingContext.save();
          var curFill = (cov_sdj34h0ao.s[59]++, this._getFill()); // create background rect
          var color = (cov_sdj34h0ao.s[60]++, (_this$_pInst = this._pInst).color.apply(_this$_pInst, arguments));
          var newFill = (cov_sdj34h0ao.s[61]++, color.toString());
          cov_sdj34h0ao.s[62]++;
          this._setFill(newFill);
          cov_sdj34h0ao.s[63]++;
          this.drawingContext.fillRect(0, 0, this.width, this.height); // reset fill
          cov_sdj34h0ao.s[64]++;
          this._setFill(curFill);
          cov_sdj34h0ao.s[65]++;
          this.drawingContext.restore();
        };
        cov_sdj34h0ao.s[66]++;
        _main.default.Renderer2D.prototype.clear = function () {
          cov_sdj34h0ao.f[11]++;
          cov_sdj34h0ao.s[67]++;
          this.drawingContext.save();
          cov_sdj34h0ao.s[68]++;
          this.drawingContext.clearRect(0, 0, this.width, this.height);
          cov_sdj34h0ao.s[69]++;
          this.drawingContext.restore();
        };
        cov_sdj34h0ao.s[70]++;
        _main.default.Renderer2D.prototype.fill = function () {
          cov_sdj34h0ao.f[12]++;
          var _this$_pInst2;
          var color = (cov_sdj34h0ao.s[71]++, (_this$_pInst2 = this._pInst).color.apply(_this$_pInst2, arguments));
          cov_sdj34h0ao.s[72]++;
          this._setFill(color.toString());
        };
        cov_sdj34h0ao.s[73]++;
        _main.default.Renderer2D.prototype.stroke = function () {
          cov_sdj34h0ao.f[13]++;
          var _this$_pInst3;
          var color = (cov_sdj34h0ao.s[74]++, (_this$_pInst3 = this._pInst).color.apply(_this$_pInst3, arguments));
          cov_sdj34h0ao.s[75]++;
          this._setStroke(color.toString());
        }; //////////////////////////////////////////////
        // SHAPE | 2D Primitives
        //////////////////////////////////////////////
        /*
 * This function requires that:
 *
 *   0 <= start < TWO_PI
 *
 *   start <= stop < start + TWO_PI
 */
        cov_sdj34h0ao.s[76]++;
        _main.default.Renderer2D.prototype.ellipse = function (args) {
          cov_sdj34h0ao.f[14]++;
          var ctx = (cov_sdj34h0ao.s[77]++, this.drawingContext);
          var doFill = (cov_sdj34h0ao.s[78]++, this._doFill),
          doStroke = (cov_sdj34h0ao.s[79]++, this._doStroke);
          var x = (cov_sdj34h0ao.s[80]++, parseFloat(args[0])),
          y = (cov_sdj34h0ao.s[81]++, parseFloat(args[1])),
          w = (cov_sdj34h0ao.s[82]++, parseFloat(args[2])),
          h = (cov_sdj34h0ao.s[83]++, parseFloat(args[3]));
          cov_sdj34h0ao.s[84]++;
          if ((cov_sdj34h0ao.b[20][0]++, doFill) && (cov_sdj34h0ao.b[20][1]++, !doStroke)) {
            cov_sdj34h0ao.b[19][0]++;
            cov_sdj34h0ao.s[85]++;
            if (this._getFill() === styleEmpty) {
              cov_sdj34h0ao.b[21][0]++;
              cov_sdj34h0ao.s[86]++;
              return this;
            } else {
              cov_sdj34h0ao.b[21][1]++;
            }
          } else {
            cov_sdj34h0ao.b[19][1]++;
            cov_sdj34h0ao.s[87]++;
            if ((cov_sdj34h0ao.b[23][0]++, !doFill) && (cov_sdj34h0ao.b[23][1]++, doStroke)) {
              cov_sdj34h0ao.b[22][0]++;
              cov_sdj34h0ao.s[88]++;
              if (this._getStroke() === styleEmpty) {
                cov_sdj34h0ao.b[24][0]++;
                cov_sdj34h0ao.s[89]++;
                return this;
              } else {
                cov_sdj34h0ao.b[24][1]++;
              }
            } else {
              cov_sdj34h0ao.b[22][1]++;
            }
          }
          var kappa = (cov_sdj34h0ao.s[90]++, 0.5522847498),
          // control point offset horizontal
          ox = (cov_sdj34h0ao.s[91]++, w / 2 * kappa),
          // control point offset vertical
          oy = (cov_sdj34h0ao.s[92]++, h / 2 * kappa),
          // x-end
          xe = (cov_sdj34h0ao.s[93]++, x + w),
          // y-end
          ye = (cov_sdj34h0ao.s[94]++, y + h),
          // x-middle
          xm = (cov_sdj34h0ao.s[95]++, x + w / 2),
          ym = (cov_sdj34h0ao.s[96]++, y + h / 2); // y-middle
          cov_sdj34h0ao.s[97]++;
          ctx.beginPath();
          cov_sdj34h0ao.s[98]++;
          ctx.moveTo(x, ym);
          cov_sdj34h0ao.s[99]++;
          ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);
          cov_sdj34h0ao.s[100]++;
          ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);
          cov_sdj34h0ao.s[101]++;
          ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);
          cov_sdj34h0ao.s[102]++;
          ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);
          cov_sdj34h0ao.s[103]++;
          if (doFill) {
            cov_sdj34h0ao.b[25][0]++;
            cov_sdj34h0ao.s[104]++;
            ctx.fill();
          } else {
            cov_sdj34h0ao.b[25][1]++;
          }
          cov_sdj34h0ao.s[105]++;
          if (doStroke) {
            cov_sdj34h0ao.b[26][0]++;
            cov_sdj34h0ao.s[106]++;
            ctx.stroke();
          } else {
            cov_sdj34h0ao.b[26][1]++;
          }
        }; //////////////////////////////////////////////
        // SHAPE | Attributes
        //////////////////////////////////////////////
        cov_sdj34h0ao.s[107]++;
        _main.default.Renderer2D.prototype.strokeCap = function (cap) {
          cov_sdj34h0ao.f[15]++;
          cov_sdj34h0ao.s[108]++;
          if ((cov_sdj34h0ao.b[28][0]++, cap === constants.ROUND) || (cov_sdj34h0ao.b[28][1]++, cap === constants.SQUARE) || (cov_sdj34h0ao.b[28][2]++, cap === constants.PROJECT)) {
            cov_sdj34h0ao.b[27][0]++;
            cov_sdj34h0ao.s[109]++;
            this.drawingContext.lineCap = cap;
          } else {
            cov_sdj34h0ao.b[27][1]++;
          }
          cov_sdj34h0ao.s[110]++;
          return this;
        };
        cov_sdj34h0ao.s[111]++;
        _main.default.Renderer2D.prototype.strokeJoin = function (join) {
          cov_sdj34h0ao.f[16]++;
          cov_sdj34h0ao.s[112]++;
          if ((cov_sdj34h0ao.b[30][0]++, join === constants.ROUND) || (cov_sdj34h0ao.b[30][1]++, join === constants.BEVEL) || (cov_sdj34h0ao.b[30][2]++, join === constants.MITER)) {
            cov_sdj34h0ao.b[29][0]++;
            cov_sdj34h0ao.s[113]++;
            this.drawingContext.lineJoin = join;
          } else {
            cov_sdj34h0ao.b[29][1]++;
          }
          cov_sdj34h0ao.s[114]++;
          return this;
        };
        cov_sdj34h0ao.s[115]++;
        _main.default.Renderer2D.prototype.strokeWeight = function (w) {
          cov_sdj34h0ao.f[17]++;
          cov_sdj34h0ao.s[116]++;
          if ((cov_sdj34h0ao.b[32][0]++, typeof w === 'undefined') || (cov_sdj34h0ao.b[32][1]++, w === 0)) {
            cov_sdj34h0ao.b[31][0]++;
            cov_sdj34h0ao.s[117]++;
            // hack because lineWidth 0 doesn't work
            this.drawingContext.lineWidth = 0.0001;
          } else {
            cov_sdj34h0ao.b[31][1]++;
            cov_sdj34h0ao.s[118]++;
            this.drawingContext.lineWidth = w;
          }
          cov_sdj34h0ao.s[119]++;
          return this;
        };
        cov_sdj34h0ao.s[120]++;
        _main.default.Renderer2D.prototype._getFill = function () {
          cov_sdj34h0ao.f[18]++;
          cov_sdj34h0ao.s[121]++;
          if (!this._cachedFillStyle) {
            cov_sdj34h0ao.b[33][0]++;
            cov_sdj34h0ao.s[122]++;
            this._cachedFillStyle = this.drawingContext.fillStyle;
          } else {
            cov_sdj34h0ao.b[33][1]++;
          }
          cov_sdj34h0ao.s[123]++;
          return this._cachedFillStyle;
        };
        cov_sdj34h0ao.s[124]++;
        _main.default.Renderer2D.prototype._setFill = function (fillStyle) {
          cov_sdj34h0ao.f[19]++;
          cov_sdj34h0ao.s[125]++;
          if (fillStyle !== this._cachedFillStyle) {
            cov_sdj34h0ao.b[34][0]++;
            cov_sdj34h0ao.s[126]++;
            this.drawingContext.fillStyle = fillStyle;
            cov_sdj34h0ao.s[127]++;
            this._cachedFillStyle = fillStyle;
          } else {
            cov_sdj34h0ao.b[34][1]++;
          }
        };
        cov_sdj34h0ao.s[128]++;
        _main.default.Renderer2D.prototype._getStroke = function () {
          cov_sdj34h0ao.f[20]++;
          cov_sdj34h0ao.s[129]++;
          if (!this._cachedStrokeStyle) {
            cov_sdj34h0ao.b[35][0]++;
            cov_sdj34h0ao.s[130]++;
            this._cachedStrokeStyle = this.drawingContext.strokeStyle;
          } else {
            cov_sdj34h0ao.b[35][1]++;
          }
          cov_sdj34h0ao.s[131]++;
          return this._cachedStrokeStyle;
        };
        cov_sdj34h0ao.s[132]++;
        _main.default.Renderer2D.prototype._setStroke = function (strokeStyle) {
          cov_sdj34h0ao.f[21]++;
          cov_sdj34h0ao.s[133]++;
          if (strokeStyle !== this._cachedStrokeStyle) {
            cov_sdj34h0ao.b[36][0]++;
            cov_sdj34h0ao.s[134]++;
            this.drawingContext.strokeStyle = strokeStyle;
            cov_sdj34h0ao.s[135]++;
            this._cachedStrokeStyle = strokeStyle;
          } else {
            cov_sdj34h0ao.b[36][1]++;
          }
        }; //////////////////////////////////////////////
        // SHAPE | Curves
        //////////////////////////////////////////////
        cov_sdj34h0ao.s[136]++;
        _main.default.Renderer2D.prototype.bezier = function (x1, y1, x2, y2, x3, y3, x4, y4) {
          cov_sdj34h0ao.f[22]++;
          cov_sdj34h0ao.s[137]++;
          this._pInst.beginShape();
          cov_sdj34h0ao.s[138]++;
          this._pInst.vertex(x1, y1);
          cov_sdj34h0ao.s[139]++;
          this._pInst.bezierVertex(x2, y2, x3, y3, x4, y4);
          cov_sdj34h0ao.s[140]++;
          this._pInst.endShape();
          cov_sdj34h0ao.s[141]++;
          return this;
        };
        cov_sdj34h0ao.s[142]++;
        _main.default.Renderer2D.prototype.curve = function (x1, y1, x2, y2, x3, y3, x4, y4) {
          cov_sdj34h0ao.f[23]++;
          cov_sdj34h0ao.s[143]++;
          this._pInst.beginShape();
          cov_sdj34h0ao.s[144]++;
          this._pInst.curveVertex(x1, y1);
          cov_sdj34h0ao.s[145]++;
          this._pInst.curveVertex(x2, y2);
          cov_sdj34h0ao.s[146]++;
          this._pInst.curveVertex(x3, y3);
          cov_sdj34h0ao.s[147]++;
          this._pInst.curveVertex(x4, y4);
          cov_sdj34h0ao.s[148]++;
          this._pInst.endShape();
          cov_sdj34h0ao.s[149]++;
          return this;
        }; //////////////////////////////////////////////
        // SHAPE | Vertex
        //////////////////////////////////////////////
        cov_sdj34h0ao.s[150]++;
        _main.default.Renderer2D.prototype._doFillStrokeClose = function (closeShape) {
          cov_sdj34h0ao.f[24]++;
          cov_sdj34h0ao.s[151]++;
          if (closeShape) {
            cov_sdj34h0ao.b[37][0]++;
            cov_sdj34h0ao.s[152]++;
            this.drawingContext.closePath();
          } else {
            cov_sdj34h0ao.b[37][1]++;
          }
          cov_sdj34h0ao.s[153]++;
          if (this._doFill) {
            cov_sdj34h0ao.b[38][0]++;
            cov_sdj34h0ao.s[154]++;
            this.drawingContext.fill();
          } else {
            cov_sdj34h0ao.b[38][1]++;
          }
          cov_sdj34h0ao.s[155]++;
          if (this._doStroke) {
            cov_sdj34h0ao.b[39][0]++;
            cov_sdj34h0ao.s[156]++;
            this.drawingContext.stroke();
          } else {
            cov_sdj34h0ao.b[39][1]++;
          }
        };
        var _default = (cov_sdj34h0ao.s[157]++, _main.default.Renderer2D);
        cov_sdj34h0ao.s[158]++;
        exports.default = _default;
      },
      {
        './constants': 145,
        './main': 148,
        './p5sound.Renderer': 150,
        'core-js/modules/es.array.fill': 116,
        'core-js/modules/es.array.iterator': 120,
        'core-js/modules/es.object.get-own-property-descriptor': 125,
        'core-js/modules/es.object.to-string': 127,
        'core-js/modules/es.regexp.to-string': 131,
        'core-js/modules/es.string.iterator': 133,
        'core-js/modules/es.symbol': 137,
        'core-js/modules/es.symbol.description': 135,
        'core-js/modules/es.symbol.iterator': 136,
        'core-js/modules/es.weak-map': 138,
        'core-js/modules/web.dom-collections.iterator': 140
      }
    ],
    152: [
      function (_dereq_, module, exports) {
        'use strict';
        var cov_6ty7gufx1 = function () {
          var path = '/Users/montoyamoraga/github/processing/p5.sound.js/src/core/preload.js';
          var hash = 'c0648e8f55b0c819518d68d82723b22bad21e140';
          var global = new Function('return this') ();
          var gcv = '__coverage__';
          var coverageData = {
            path: '/Users/montoyamoraga/github/processing/p5.sound.js/src/core/preload.js',
            statementMap: {
              '0': {
                start: {
                  line: 3,
                  column: 0
                },
                end: {
                  line: 3,
                  column: 37
                }
              },
              '1': {
                start: {
                  line: 5,
                  column: 0
                },
                end: {
                  line: 5,
                  column: 49
                }
              },
              '2': {
                start: {
                  line: 7,
                  column: 0
                },
                end: {
                  line: 7,
                  column: 46
                }
              },
              '3': {
                start: {
                  line: 9,
                  column: 0
                },
                end: {
                  line: 9,
                  column: 45
                }
              },
              '4': {
                start: {
                  line: 11,
                  column: 0
                },
                end: {
                  line: 11,
                  column: 44
                }
              },
              '5': {
                start: {
                  line: 13,
                  column: 0
                },
                end: {
                  line: 13,
                  column: 47
                }
              },
              '6': {
                start: {
                  line: 15,
                  column: 0
                },
                end: {
                  line: 15,
                  column: 38
                }
              },
              '7': {
                start: {
                  line: 17,
                  column: 0
                },
                end: {
                  line: 17,
                  column: 46
                }
              },
              '8': {
                start: {
                  line: 19,
                  column: 0
                },
                end: {
                  line: 19,
                  column: 56
                }
              },
              '9': {
                start: {
                  line: 21,
                  column: 12
                },
                end: {
                  line: 21,
                  column: 53
                }
              },
              '10': {
                start: {
                  line: 23,
                  column: 39
                },
                end: {
                  line: 23,
                  column: 93
                }
              },
              '11': {
                start: {
                  line: 25,
                  column: 0
                },
                end: {
                  line: 39,
                  column: 2
                }
              },
              '12': {
                start: {
                  line: 41,
                  column: 0
                },
                end: {
                  line: 43,
                  column: 2
                }
              },
              '13': {
                start: {
                  line: 42,
                  column: 2
                },
                end: {
                  line: 42,
                  column: 55
                }
              },
              '14': {
                start: {
                  line: 45,
                  column: 22
                },
                end: {
                  line: 45,
                  column: 27
                }
              },
              '15': {
                start: {
                  line: 47,
                  column: 0
                },
                end: {
                  line: 99,
                  column: 2
                }
              },
              '16': {
                start: {
                  line: 48,
                  column: 34
                },
                end: {
                  line: 48,
                  column: 38
                }
              },
              '17': {
                start: {
                  line: 49,
                  column: 26
                },
                end: {
                  line: 49,
                  column: 31
                }
              },
              '18': {
                start: {
                  line: 50,
                  column: 23
                },
                end: {
                  line: 50,
                  column: 32
                }
              },
              '19': {
                start: {
                  line: 52,
                  column: 2
                },
                end: {
                  line: 96,
                  column: 3
                }
              },
              '20': {
                start: {
                  line: 53,
                  column: 4
                },
                end: {
                  line: 82,
                  column: 5
                }
              },
              '21': {
                start: {
                  line: 53,
                  column: 25
                },
                end: {
                  line: 53,
                  column: 65
                }
              },
              '22': {
                start: {
                  line: 54,
                  column: 25
                },
                end: {
                  line: 54,
                  column: 36
                }
              },
              '23': {
                start: {
                  line: 55,
                  column: 22
                },
                end: {
                  line: 55,
                  column: 26
                }
              },
              '24': {
                start: {
                  line: 56,
                  column: 19
                },
                end: {
                  line: 56,
                  column: 38
                }
              },
              '25': {
                start: {
                  line: 57,
                  column: 25
                },
                end: {
                  line: 57,
                  column: 50
                }
              },
              '26': {
                start: {
                  line: 58,
                  column: 31
                },
                end: {
                  line: 58,
                  column: 62
                }
              },
              '27': {
                start: {
                  line: 61,
                  column: 19
                },
                end: {
                  line: 61,
                  column: 46
                }
              },
              '28': {
                start: {
                  line: 62,
                  column: 27
                },
                end: {
                  line: 62,
                  column: 54
                }
              },
              '29': {
                start: {
                  line: 64,
                  column: 6
                },
                end: {
                  line: 71,
                  column: 7
                }
              },
              '30': {
                start: {
                  line: 65,
                  column: 8
                },
                end: {
                  line: 67,
                  column: 9
                }
              },
              '31': {
                start: {
                  line: 66,
                  column: 10
                },
                end: {
                  line: 66,
                  column: 19
                }
              },
              '32': {
                start: {
                  line: 69,
                  column: 8
                },
                end: {
                  line: 69,
                  column: 25
                }
              },
              '33': {
                start: {
                  line: 70,
                  column: 8
                },
                end: {
                  line: 70,
                  column: 40
                }
              },
              '34': {
                start: {
                  line: 74,
                  column: 6
                },
                end: {
                  line: 74,
                  column: 89
                }
              },
              '35': {
                start: {
                  line: 76,
                  column: 6
                },
                end: {
                  line: 81,
                  column: 7
                }
              },
              '36': {
                start: {
                  line: 78,
                  column: 27
                },
                end: {
                  line: 78,
                  column: 52
                }
              },
              '37': {
                start: {
                  line: 80,
                  column: 8
                },
                end: {
                  line: 80,
                  column: 107
                }
              },
              '38': {
                start: {
                  line: 84,
                  column: 4
                },
                end: {
                  line: 84,
                  column: 29
                }
              },
              '39': {
                start: {
                  line: 85,
                  column: 4
                },
                end: {
                  line: 85,
                  column: 25
                }
              },
              '40': {
                start: {
                  line: 87,
                  column: 4
                },
                end: {
                  line: 95,
                  column: 5
                }
              },
              '41': {
                start: {
                  line: 88,
                  column: 6
                },
                end: {
                  line: 90,
                  column: 7
                }
              },
              '42': {
                start: {
                  line: 89,
                  column: 8
                },
                end: {
                  line: 89,
                  column: 27
                }
              },
              '43': {
                start: {
                  line: 92,
                  column: 6
                },
                end: {
                  line: 94,
                  column: 7
                }
              },
              '44': {
                start: {
                  line: 93,
                  column: 8
                },
                end: {
                  line: 93,
                  column: 29
                }
              },
              '45': {
                start: {
                  line: 98,
                  column: 2
                },
                end: {
                  line: 98,
                  column: 25
                }
              },
              '46': {
                start: {
                  line: 101,
                  column: 0
                },
                end: {
                  line: 156,
                  column: 2
                }
              },
              '47': {
                start: {
                  line: 102,
                  column: 28
                },
                end: {
                  line: 149,
                  column: 3
                }
              },
              '48': {
                start: {
                  line: 103,
                  column: 16
                },
                end: {
                  line: 103,
                  column: 20
                }
              },
              '49': {
                start: {
                  line: 106,
                  column: 4
                },
                end: {
                  line: 106,
                  column: 29
                }
              },
              '50': {
                start: {
                  line: 109,
                  column: 19
                },
                end: {
                  line: 109,
                  column: 23
                }
              },
              '51': {
                start: {
                  line: 111,
                  column: 24
                },
                end: {
                  line: 111,
                  column: 28
                }
              },
              '52': {
                start: {
                  line: 113,
                  column: 4
                },
                end: {
                  line: 115,
                  column: 5
                }
              },
              '53': {
                start: {
                  line: 113,
                  column: 20
                },
                end: {
                  line: 113,
                  column: 36
                }
              },
              '54': {
                start: {
                  line: 113,
                  column: 45
                },
                end: {
                  line: 113,
                  column: 60
                }
              },
              '55': {
                start: {
                  line: 113,
                  column: 69
                },
                end: {
                  line: 113,
                  column: 70
                }
              },
              '56': {
                start: {
                  line: 114,
                  column: 6
                },
                end: {
                  line: 114,
                  column: 35
                }
              },
              '57': {
                start: {
                  line: 117,
                  column: 4
                },
                end: {
                  line: 128,
                  column: 5
                }
              },
              '58': {
                start: {
                  line: 120,
                  column: 6
                },
                end: {
                  line: 127,
                  column: 7
                }
              },
              '59': {
                start: {
                  line: 120,
                  column: 19
                },
                end: {
                  line: 120,
                  column: 34
                }
              },
              '60': {
                start: {
                  line: 121,
                  column: 8
                },
                end: {
                  line: 123,
                  column: 9
                }
              },
              '61': {
                start: {
                  line: 122,
                  column: 10
                },
                end: {
                  line: 122,
                  column: 16
                }
              },
              '62': {
                start: {
                  line: 125,
                  column: 8
                },
                end: {
                  line: 125,
                  column: 33
                }
              },
              '63': {
                start: {
                  line: 126,
                  column: 8
                },
                end: {
                  line: 126,
                  column: 30
                }
              },
              '64': {
                start: {
                  line: 133,
                  column: 18
                },
                end: {
                  line: 133,
                  column: 55
                }
              },
              '65': {
                start: {
                  line: 135,
                  column: 4
                },
                end: {
                  line: 137,
                  column: 5
                }
              },
              '66': {
                start: {
                  line: 136,
                  column: 6
                },
                end: {
                  line: 136,
                  column: 29
                }
              },
              '67': {
                start: {
                  line: 139,
                  column: 4
                },
                end: {
                  line: 141,
                  column: 5
                }
              },
              '68': {
                start: {
                  line: 140,
                  column: 6
                },
                end: {
                  line: 140,
                  column: 35
                }
              },
              '69': {
                start: {
                  line: 144,
                  column: 4
                },
                end: {
                  line: 146,
                  column: 7
                }
              },
              '70': {
                start: {
                  line: 145,
                  column: 6
                },
                end: {
                  line: 145,
                  column: 39
                }
              },
              '71': {
                start: {
                  line: 148,
                  column: 4
                },
                end: {
                  line: 148,
                  column: 19
                }
              },
              '72': {
                start: {
                  line: 151,
                  column: 2
                },
                end: {
                  line: 153,
                  column: 3
                }
              },
              '73': {
                start: {
                  line: 152,
                  column: 4
                },
                end: {
                  line: 152,
                  column: 62
                }
              },
              '74': {
                start: {
                  line: 155,
                  column: 2
                },
                end: {
                  line: 155,
                  column: 29
                }
              },
              '75': {
                start: {
                  line: 158,
                  column: 20
                },
                end: {
                  line: 160,
                  column: 1
                }
              },
              '76': {
                start: {
                  line: 159,
                  column: 2
                },
                end: {
                  line: 159,
                  column: 12
                }
              },
              '77': {
                start: {
                  line: 162,
                  column: 0
                },
                end: {
                  line: 195,
                  column: 2
                }
              },
              '78': {
                start: {
                  line: 166,
                  column: 27
                },
                end: {
                  line: 166,
                  column: 79
                }
              },
              '79': {
                start: {
                  line: 168,
                  column: 25
                },
                end: {
                  line: 188,
                  column: 3
                }
              },
              '80': {
                start: {
                  line: 169,
                  column: 17
                },
                end: {
                  line: 169,
                  column: 21
                }
              },
              '81': {
                start: {
                  line: 172,
                  column: 4
                },
                end: {
                  line: 172,
                  column: 29
                }
              },
              '82': {
                start: {
                  line: 175,
                  column: 4
                },
                end: {
                  line: 177,
                  column: 5
                }
              },
              '83': {
                start: {
                  line: 175,
                  column: 21
                },
                end: {
                  line: 175,
                  column: 37
                }
              },
              '84': {
                start: {
                  line: 175,
                  column: 46
                },
                end: {
                  line: 175,
                  column: 62
                }
              },
              '85': {
                start: {
                  line: 175,
                  column: 72
                },
                end: {
                  line: 175,
                  column: 73
                }
              },
              '86': {
                start: {
                  line: 176,
                  column: 6
                },
                end: {
                  line: 176,
                  column: 37
                }
              },
              '87': {
                start: {
                  line: 179,
                  column: 22
                },
                end: {
                  line: 179,
                  column: 58
                }
              },
              '88': {
                start: {
                  line: 181,
                  column: 4
                },
                end: {
                  line: 186,
                  column: 7
                }
              },
              '89': {
                start: {
                  line: 183,
                  column: 6
                },
                end: {
                  line: 183,
                  column: 39
                }
              },
              '90': {
                start: {
                  line: 185,
                  column: 6
                },
                end: {
                  line: 185,
                  column: 33
                }
              },
              '91': {
                start: {
                  line: 187,
                  column: 4
                },
                end: {
                  line: 187,
                  column: 23
                }
              },
              '92': {
                start: {
                  line: 190,
                  column: 2
                },
                end: {
                  line: 192,
                  column: 3
                }
              },
              '93': {
                start: {
                  line: 191,
                  column: 4
                },
                end: {
                  line: 191,
                  column: 56
                }
              },
              '94': {
                start: {
                  line: 194,
                  column: 2
                },
                end: {
                  line: 194,
                  column: 26
                }
              }
            },
            fnMap: {
              '0': {
                name: '_interopRequireDefault',
                decl: {
                  start: {
                    line: 23,
                    column: 9
                  },
                  end: {
                    line: 23,
                    column: 31
                  }
                },
                loc: {
                  start: {
                    line: 23,
                    column: 37
                  },
                  end: {
                    line: 23,
                    column: 95
                  }
                },
                line: 23
              },
              '1': {
                name: '(anonymous_1)',
                decl: {
                  start: {
                    line: 41,
                    column: 49
                  },
                  end: {
                    line: 41,
                    column: 50
                  }
                },
                loc: {
                  start: {
                    line: 41,
                    column: 66
                  },
                  end: {
                    line: 43,
                    column: 1
                  }
                },
                line: 41
              },
              '2': {
                name: '(anonymous_2)',
                decl: {
                  start: {
                    line: 47,
                    column: 48
                  },
                  end: {
                    line: 47,
                    column: 49
                  }
                },
                loc: {
                  start: {
                    line: 47,
                    column: 60
                  },
                  end: {
                    line: 99,
                    column: 1
                  }
                },
                line: 47
              },
              '3': {
                name: '(anonymous_3)',
                decl: {
                  start: {
                    line: 101,
                    column: 46
                  },
                  end: {
                    line: 101,
                    column: 47
                  }
                },
                loc: {
                  start: {
                    line: 101,
                    column: 85
                  },
                  end: {
                    line: 156,
                    column: 1
                  }
                },
                line: 101
              },
              '4': {
                name: 'replacementFunction',
                decl: {
                  start: {
                    line: 102,
                    column: 37
                  },
                  end: {
                    line: 102,
                    column: 56
                  }
                },
                loc: {
                  start: {
                    line: 102,
                    column: 59
                  },
                  end: {
                    line: 149,
                    column: 3
                  }
                },
                line: 102
              },
              '5': {
                name: '(anonymous_5)',
                decl: {
                  start: {
                    line: 144,
                    column: 17
                  },
                  end: {
                    line: 144,
                    column: 18
                  }
                },
                loc: {
                  start: {
                    line: 144,
                    column: 29
                  },
                  end: {
                    line: 146,
                    column: 5
                  }
                },
                line: 144
              },
              '6': {
                name: 'objectCreator',
                decl: {
                  start: {
                    line: 158,
                    column: 29
                  },
                  end: {
                    line: 158,
                    column: 42
                  }
                },
                loc: {
                  start: {
                    line: 158,
                    column: 45
                  },
                  end: {
                    line: 160,
                    column: 1
                  }
                },
                line: 158
              },
              '7': {
                name: '(anonymous_7)',
                decl: {
                  start: {
                    line: 162,
                    column: 50
                  },
                  end: {
                    line: 162,
                    column: 51
                  }
                },
                loc: {
                  start: {
                    line: 162,
                    column: 95
                  },
                  end: {
                    line: 195,
                    column: 1
                  }
                },
                line: 162
              },
              '8': {
                name: 'returnedFunction',
                decl: {
                  start: {
                    line: 168,
                    column: 34
                  },
                  end: {
                    line: 168,
                    column: 50
                  }
                },
                loc: {
                  start: {
                    line: 168,
                    column: 53
                  },
                  end: {
                    line: 188,
                    column: 3
                  }
                },
                line: 168
              },
              '9': {
                name: '(anonymous_9)',
                decl: {
                  start: {
                    line: 181,
                    column: 30
                  },
                  end: {
                    line: 181,
                    column: 31
                  }
                },
                loc: {
                  start: {
                    line: 181,
                    column: 46
                  },
                  end: {
                    line: 186,
                    column: 5
                  }
                },
                line: 181
              }
            },
            branchMap: {
              '0': {
                loc: {
                  start: {
                    line: 23,
                    column: 46
                  },
                  end: {
                    line: 23,
                    column: 92
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 23,
                      column: 70
                    },
                    end: {
                      line: 23,
                      column: 73
                    }
                  },
                  {
                    start: {
                      line: 23,
                      column: 76
                    },
                    end: {
                      line: 23,
                      column: 92
                    }
                  }
                ],
                line: 23
              },
              '1': {
                loc: {
                  start: {
                    line: 23,
                    column: 46
                  },
                  end: {
                    line: 23,
                    column: 67
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 23,
                      column: 46
                    },
                    end: {
                      line: 23,
                      column: 49
                    }
                  },
                  {
                    start: {
                      line: 23,
                      column: 53
                    },
                    end: {
                      line: 23,
                      column: 67
                    }
                  }
                ],
                line: 23
              },
              '2': {
                loc: {
                  start: {
                    line: 61,
                    column: 19
                  },
                  end: {
                    line: 61,
                    column: 46
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 61,
                      column: 19
                    },
                    end: {
                      line: 61,
                      column: 38
                    }
                  },
                  {
                    start: {
                      line: 61,
                      column: 42
                    },
                    end: {
                      line: 61,
                      column: 46
                    }
                  }
                ],
                line: 61
              },
              '3': {
                loc: {
                  start: {
                    line: 64,
                    column: 6
                  },
                  end: {
                    line: 71,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 64,
                      column: 6
                    },
                    end: {
                      line: 71,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 64,
                      column: 6
                    },
                    end: {
                      line: 71,
                      column: 7
                    }
                  }
                ],
                line: 64
              },
              '4': {
                loc: {
                  start: {
                    line: 65,
                    column: 8
                  },
                  end: {
                    line: 67,
                    column: 9
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 65,
                      column: 8
                    },
                    end: {
                      line: 67,
                      column: 9
                    }
                  },
                  {
                    start: {
                      line: 65,
                      column: 8
                    },
                    end: {
                      line: 67,
                      column: 9
                    }
                  }
                ],
                line: 65
              },
              '5': {
                loc: {
                  start: {
                    line: 76,
                    column: 6
                  },
                  end: {
                    line: 81,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 76,
                      column: 6
                    },
                    end: {
                      line: 81,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 76,
                      column: 6
                    },
                    end: {
                      line: 81,
                      column: 7
                    }
                  }
                ],
                line: 76
              },
              '6': {
                loc: {
                  start: {
                    line: 88,
                    column: 6
                  },
                  end: {
                    line: 90,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 88,
                      column: 6
                    },
                    end: {
                      line: 90,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 88,
                      column: 6
                    },
                    end: {
                      line: 90,
                      column: 7
                    }
                  }
                ],
                line: 88
              },
              '7': {
                loc: {
                  start: {
                    line: 88,
                    column: 10
                  },
                  end: {
                    line: 88,
                    column: 64
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 88,
                      column: 10
                    },
                    end: {
                      line: 88,
                      column: 36
                    }
                  },
                  {
                    start: {
                      line: 88,
                      column: 40
                    },
                    end: {
                      line: 88,
                      column: 64
                    }
                  }
                ],
                line: 88
              },
              '8': {
                loc: {
                  start: {
                    line: 92,
                    column: 6
                  },
                  end: {
                    line: 94,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 92,
                      column: 6
                    },
                    end: {
                      line: 94,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 92,
                      column: 6
                    },
                    end: {
                      line: 94,
                      column: 7
                    }
                  }
                ],
                line: 92
              },
              '9': {
                loc: {
                  start: {
                    line: 117,
                    column: 4
                  },
                  end: {
                    line: 128,
                    column: 5
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 117,
                      column: 4
                    },
                    end: {
                      line: 128,
                      column: 5
                    }
                  },
                  {
                    start: {
                      line: 117,
                      column: 4
                    },
                    end: {
                      line: 128,
                      column: 5
                    }
                  }
                ],
                line: 117
              },
              '10': {
                loc: {
                  start: {
                    line: 120,
                    column: 36
                  },
                  end: {
                    line: 120,
                    column: 60
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 120,
                      column: 36
                    },
                    end: {
                      line: 120,
                      column: 42
                    }
                  },
                  {
                    start: {
                      line: 120,
                      column: 46
                    },
                    end: {
                      line: 120,
                      column: 60
                    }
                  }
                ],
                line: 120
              },
              '11': {
                loc: {
                  start: {
                    line: 121,
                    column: 8
                  },
                  end: {
                    line: 123,
                    column: 9
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 121,
                      column: 8
                    },
                    end: {
                      line: 123,
                      column: 9
                    }
                  },
                  {
                    start: {
                      line: 121,
                      column: 8
                    },
                    end: {
                      line: 123,
                      column: 9
                    }
                  }
                ],
                line: 121
              },
              '12': {
                loc: {
                  start: {
                    line: 135,
                    column: 4
                  },
                  end: {
                    line: 137,
                    column: 5
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 135,
                      column: 4
                    },
                    end: {
                      line: 137,
                      column: 5
                    }
                  },
                  {
                    start: {
                      line: 135,
                      column: 4
                    },
                    end: {
                      line: 137,
                      column: 5
                    }
                  }
                ],
                line: 135
              },
              '13': {
                loc: {
                  start: {
                    line: 139,
                    column: 4
                  },
                  end: {
                    line: 141,
                    column: 5
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 139,
                      column: 4
                    },
                    end: {
                      line: 141,
                      column: 5
                    }
                  },
                  {
                    start: {
                      line: 139,
                      column: 4
                    },
                    end: {
                      line: 141,
                      column: 5
                    }
                  }
                ],
                line: 139
              },
              '14': {
                loc: {
                  start: {
                    line: 151,
                    column: 2
                  },
                  end: {
                    line: 153,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 151,
                      column: 2
                    },
                    end: {
                      line: 153,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 151,
                      column: 2
                    },
                    end: {
                      line: 153,
                      column: 3
                    }
                  }
                ],
                line: 151
              },
              '15': {
                loc: {
                  start: {
                    line: 166,
                    column: 27
                  },
                  end: {
                    line: 166,
                    column: 79
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 166,
                      column: 27
                    },
                    end: {
                      line: 166,
                      column: 62
                    }
                  },
                  {
                    start: {
                      line: 166,
                      column: 66
                    },
                    end: {
                      line: 166,
                      column: 79
                    }
                  }
                ],
                line: 166
              },
              '16': {
                loc: {
                  start: {
                    line: 190,
                    column: 2
                  },
                  end: {
                    line: 192,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 190,
                      column: 2
                    },
                    end: {
                      line: 192,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 190,
                      column: 2
                    },
                    end: {
                      line: 192,
                      column: 3
                    }
                  }
                ],
                line: 190
              }
            },
            s: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0,
              '10': 0,
              '11': 0,
              '12': 0,
              '13': 0,
              '14': 0,
              '15': 0,
              '16': 0,
              '17': 0,
              '18': 0,
              '19': 0,
              '20': 0,
              '21': 0,
              '22': 0,
              '23': 0,
              '24': 0,
              '25': 0,
              '26': 0,
              '27': 0,
              '28': 0,
              '29': 0,
              '30': 0,
              '31': 0,
              '32': 0,
              '33': 0,
              '34': 0,
              '35': 0,
              '36': 0,
              '37': 0,
              '38': 0,
              '39': 0,
              '40': 0,
              '41': 0,
              '42': 0,
              '43': 0,
              '44': 0,
              '45': 0,
              '46': 0,
              '47': 0,
              '48': 0,
              '49': 0,
              '50': 0,
              '51': 0,
              '52': 0,
              '53': 0,
              '54': 0,
              '55': 0,
              '56': 0,
              '57': 0,
              '58': 0,
              '59': 0,
              '60': 0,
              '61': 0,
              '62': 0,
              '63': 0,
              '64': 0,
              '65': 0,
              '66': 0,
              '67': 0,
              '68': 0,
              '69': 0,
              '70': 0,
              '71': 0,
              '72': 0,
              '73': 0,
              '74': 0,
              '75': 0,
              '76': 0,
              '77': 0,
              '78': 0,
              '79': 0,
              '80': 0,
              '81': 0,
              '82': 0,
              '83': 0,
              '84': 0,
              '85': 0,
              '86': 0,
              '87': 0,
              '88': 0,
              '89': 0,
              '90': 0,
              '91': 0,
              '92': 0,
              '93': 0,
              '94': 0
            },
            f: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0
            },
            b: {
              '0': [
                0,
                0
              ],
              '1': [
                0,
                0
              ],
              '2': [
                0,
                0
              ],
              '3': [
                0,
                0
              ],
              '4': [
                0,
                0
              ],
              '5': [
                0,
                0
              ],
              '6': [
                0,
                0
              ],
              '7': [
                0,
                0
              ],
              '8': [
                0,
                0
              ],
              '9': [
                0,
                0
              ],
              '10': [
                0,
                0
              ],
              '11': [
                0,
                0
              ],
              '12': [
                0,
                0
              ],
              '13': [
                0,
                0
              ],
              '14': [
                0,
                0
              ],
              '15': [
                0,
                0
              ],
              '16': [
                0,
                0
              ]
            },
            _coverageSchema: '43e27e138ebf9cfc5966b082cf9a028302ed4184',
            hash: 'c0648e8f55b0c819518d68d82723b22bad21e140'
          };
          var coverage = global[gcv] || (global[gcv] = {
          });
          if (coverage[path] && coverage[path].hash === hash) {
            return coverage[path];
          }
          return coverage[path] = coverageData;
        }();
        _dereq_('core-js/modules/es.symbol');
        _dereq_('core-js/modules/es.symbol.description');
        _dereq_('core-js/modules/es.symbol.iterator');
        _dereq_('core-js/modules/es.array.iterator');
        _dereq_('core-js/modules/es.object.assign');
        _dereq_('core-js/modules/es.object.to-string');
        _dereq_('core-js/modules/es.promise');
        _dereq_('core-js/modules/es.string.iterator');
        _dereq_('core-js/modules/web.dom-collections.iterator');
        cov_6ty7gufx1.s[0]++;
        _dereq_('core-js/modules/es.symbol');
        cov_6ty7gufx1.s[1]++;
        _dereq_('core-js/modules/es.symbol.description');
        cov_6ty7gufx1.s[2]++;
        _dereq_('core-js/modules/es.symbol.iterator');
        cov_6ty7gufx1.s[3]++;
        _dereq_('core-js/modules/es.array.iterator');
        cov_6ty7gufx1.s[4]++;
        _dereq_('core-js/modules/es.object.assign');
        cov_6ty7gufx1.s[5]++;
        _dereq_('core-js/modules/es.object.to-string');
        cov_6ty7gufx1.s[6]++;
        _dereq_('core-js/modules/es.promise');
        cov_6ty7gufx1.s[7]++;
        _dereq_('core-js/modules/es.string.iterator');
        cov_6ty7gufx1.s[8]++;
        _dereq_('core-js/modules/web.dom-collections.iterator');
        var _main = (cov_6ty7gufx1.s[9]++, _interopRequireDefault(_dereq_('./main')));
        function _interopRequireDefault(obj) {
          cov_6ty7gufx1.f[0]++;
          cov_6ty7gufx1.s[10]++;
          return (cov_6ty7gufx1.b[1][0]++, obj) && (cov_6ty7gufx1.b[1][1]++, obj.__esModule) ? (cov_6ty7gufx1.b[0][0]++, obj) : (cov_6ty7gufx1.b[0][1]++, {
          default:
            obj
          });
        }
        cov_6ty7gufx1.s[11]++;
        _main.default.prototype._promisePreloads = [
          /* Example object
  {
    target: p5sound.prototype, // The target object to have the method modified
    method: 'loadXAsync', // The name of the preload function to wrap
    addCallbacks: true,   // Whether to automatically handle the p5sound callbacks
    legacyPreloadSetup: { // Optional object to generate a legacy-style preload
      method: 'loadX',    // The name of the legacy preload function to generate
      createBaseObject: function() {
        return {};
      } // An optional function to create the base object for the legacy preload.
    }
  }
  */
        ];
        cov_6ty7gufx1.s[12]++;
        _main.default.prototype.registerPromisePreload = function (setup) {
          cov_6ty7gufx1.f[1]++;
          cov_6ty7gufx1.s[13]++;
          _main.default.prototype._promisePreloads.push(setup);
        };
        var initialSetupRan = (cov_6ty7gufx1.s[14]++, false);
        cov_6ty7gufx1.s[15]++;
        _main.default.prototype._setupPromisePreloads = function () {
          cov_6ty7gufx1.f[2]++;
          var _iteratorNormalCompletion = (cov_6ty7gufx1.s[16]++, true);
          var _didIteratorError = (cov_6ty7gufx1.s[17]++, false);
          var _iteratorError = (cov_6ty7gufx1.s[18]++, undefined);
          cov_6ty7gufx1.s[19]++;
          try {
            cov_6ty7gufx1.s[20]++;
            for (var _iterator = (cov_6ty7gufx1.s[21]++, this._promisePreloads[Symbol.iterator]()), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var preloadSetup = (cov_6ty7gufx1.s[22]++, _step.value);
              var thisValue = (cov_6ty7gufx1.s[23]++, this);
              var method = (cov_6ty7gufx1.s[24]++, preloadSetup.method),
              addCallbacks = (cov_6ty7gufx1.s[25]++, preloadSetup.addCallbacks),
              legacyPreloadSetup = (cov_6ty7gufx1.s[26]++, preloadSetup.legacyPreloadSetup); // Get the target object that the preload gets assigned to by default,
              // that is the current object.
              var target = (cov_6ty7gufx1.s[27]++, (cov_6ty7gufx1.b[2][0]++, preloadSetup.target) || (cov_6ty7gufx1.b[2][1]++, this));
              var sourceFunction = (cov_6ty7gufx1.s[28]++, target[method].bind(target)); // If the target is the p5sound prototype, then only set it up on the first run per page
              cov_6ty7gufx1.s[29]++;
              if (target === _main.default.prototype) {
                cov_6ty7gufx1.b[3][0]++;
                cov_6ty7gufx1.s[30]++;
                if (initialSetupRan) {
                  cov_6ty7gufx1.b[4][0]++;
                  cov_6ty7gufx1.s[31]++;
                  continue;
                } else {
                  cov_6ty7gufx1.b[4][1]++;
                }
                cov_6ty7gufx1.s[32]++;
                thisValue = null;
                cov_6ty7gufx1.s[33]++;
                sourceFunction = target[method];
              } else {
                cov_6ty7gufx1.b[3][1]++;
              } // Replace the original method with a wrapped version

              cov_6ty7gufx1.s[34]++;
              target[method] = this._wrapPromisePreload(thisValue, sourceFunction, addCallbacks); // If a legacy preload is required
              cov_6ty7gufx1.s[35]++;
              if (legacyPreloadSetup) {
                cov_6ty7gufx1.b[5][0]++;
                // What is the name for this legacy preload
                var legacyMethod = (cov_6ty7gufx1.s[36]++, legacyPreloadSetup.method); // Wrap the already wrapped Promise-returning method with the legacy setup
                cov_6ty7gufx1.s[37]++;
                target[legacyMethod] = this._legacyPreloadGenerator(thisValue, legacyPreloadSetup, target[method]);
              } else {
                cov_6ty7gufx1.b[5][1]++;
              }
            }
          } catch (err) {
            cov_6ty7gufx1.s[38]++;
            _didIteratorError = true;
            cov_6ty7gufx1.s[39]++;
            _iteratorError = err;
          } finally {
            cov_6ty7gufx1.s[40]++;
            try {
              cov_6ty7gufx1.s[41]++;
              if ((cov_6ty7gufx1.b[7][0]++, !_iteratorNormalCompletion) && (cov_6ty7gufx1.b[7][1]++, _iterator.return != null)) {
                cov_6ty7gufx1.b[6][0]++;
                cov_6ty7gufx1.s[42]++;
                _iterator.return();
              } else {
                cov_6ty7gufx1.b[6][1]++;
              }
            } finally {
              cov_6ty7gufx1.s[43]++;
              if (_didIteratorError) {
                cov_6ty7gufx1.b[8][0]++;
                cov_6ty7gufx1.s[44]++;
                throw _iteratorError;
              } else {
                cov_6ty7gufx1.b[8][1]++;
              }
            }
          }
          cov_6ty7gufx1.s[45]++;
          initialSetupRan = true;
        };
        cov_6ty7gufx1.s[46]++;
        _main.default.prototype._wrapPromisePreload = function (thisValue, fn, addCallbacks) {
          cov_6ty7gufx1.f[3]++;
          cov_6ty7gufx1.s[47]++;
          var replacementFunction = function replacementFunction() {
            cov_6ty7gufx1.f[4]++;
            var _this = (cov_6ty7gufx1.s[48]++, this); // Uses the current preload counting mechanism for now.
            cov_6ty7gufx1.s[49]++;
            this._incrementPreload(); // A variable for the callback function if specified
            var callback = (cov_6ty7gufx1.s[50]++, null); // A variable for the errorCallback function if specified
            var errorCallback = (cov_6ty7gufx1.s[51]++, null);
            cov_6ty7gufx1.s[52]++;
            for (var _len = (cov_6ty7gufx1.s[53]++, arguments.length), args = (cov_6ty7gufx1.s[54]++, new Array(_len)), _key = (cov_6ty7gufx1.s[55]++, 0); _key < _len; _key++) {
              cov_6ty7gufx1.s[56]++;
              args[_key] = arguments[_key];
            }
            cov_6ty7gufx1.s[57]++;
            if (addCallbacks) {
              cov_6ty7gufx1.b[9][0]++;
              cov_6ty7gufx1.s[58]++;
              // Loop from the end of the args array, pulling up to two functions off of
              // the end and putting them in fns
              for (var i = (cov_6ty7gufx1.s[59]++, args.length - 1); (cov_6ty7gufx1.b[10][0]++, i >= 0) && (cov_6ty7gufx1.b[10][1]++, !errorCallback); i--) {
                cov_6ty7gufx1.s[60]++;
                if (typeof args[i] !== 'function') {
                  cov_6ty7gufx1.b[11][0]++;
                  cov_6ty7gufx1.s[61]++;
                  break;
                } else {
                  cov_6ty7gufx1.b[11][1]++;
                }
                cov_6ty7gufx1.s[62]++;
                errorCallback = callback;
                cov_6ty7gufx1.s[63]++;
                callback = args.pop();
              }
            } else {
              cov_6ty7gufx1.b[9][1]++;
            } // Call the underlying function and pass it to Promise.resolve,
            // so that even if it didn't return a promise we can still
            // act on the result as if it did.

            var promise = (cov_6ty7gufx1.s[64]++, Promise.resolve(fn.apply(this, args))); // Add the optional callbacks
            cov_6ty7gufx1.s[65]++;
            if (callback) {
              cov_6ty7gufx1.b[12][0]++;
              cov_6ty7gufx1.s[66]++;
              promise.then(callback);
            } else {
              cov_6ty7gufx1.b[12][1]++;
            }
            cov_6ty7gufx1.s[67]++;
            if (errorCallback) {
              cov_6ty7gufx1.b[13][0]++;
              cov_6ty7gufx1.s[68]++;
              promise.catch(errorCallback);
            } else {
              cov_6ty7gufx1.b[13][1]++;
            } // Decrement the preload counter only if the promise resolved

            cov_6ty7gufx1.s[69]++;
            promise.then(function () {
              cov_6ty7gufx1.f[5]++;
              cov_6ty7gufx1.s[70]++;
              return _this._decrementPreload();
            }); // Return the original promise so that neither callback changes the result.
            cov_6ty7gufx1.s[71]++;
            return promise;
          };
          cov_6ty7gufx1.s[72]++;
          if (thisValue) {
            cov_6ty7gufx1.b[14][0]++;
            cov_6ty7gufx1.s[73]++;
            replacementFunction = replacementFunction.bind(thisValue);
          } else {
            cov_6ty7gufx1.b[14][1]++;
          }
          cov_6ty7gufx1.s[74]++;
          return replacementFunction;
        };
        cov_6ty7gufx1.s[75]++;
        var objectCreator = function objectCreator() {
          cov_6ty7gufx1.f[6]++;
          cov_6ty7gufx1.s[76]++;
          return {
          };
        };
        cov_6ty7gufx1.s[77]++;
        _main.default.prototype._legacyPreloadGenerator = function (thisValue, legacyPreloadSetup, fn) {
          cov_6ty7gufx1.f[7]++;
          // Create a function that will generate an object before the preload is
          // launched. For example, if the object should be an array or be an instance
          // of a specific class.
          var baseValueGenerator = (cov_6ty7gufx1.s[78]++, (cov_6ty7gufx1.b[15][0]++, legacyPreloadSetup.createBaseObject) || (cov_6ty7gufx1.b[15][1]++, objectCreator));
          cov_6ty7gufx1.s[79]++;
          var returnedFunction = function returnedFunction() {
            cov_6ty7gufx1.f[8]++;
            var _this2 = (cov_6ty7gufx1.s[80]++, this); // Our then clause needs to run before setup, so we also increment the preload counter
            cov_6ty7gufx1.s[81]++;
            this._incrementPreload(); // Generate the return value based on the generator.
            cov_6ty7gufx1.s[82]++;
            for (var _len2 = (cov_6ty7gufx1.s[83]++, arguments.length), args = (cov_6ty7gufx1.s[84]++, new Array(_len2)), _key2 = (cov_6ty7gufx1.s[85]++, 0); _key2 < _len2; _key2++) {
              cov_6ty7gufx1.s[86]++;
              args[_key2] = arguments[_key2];
            }
            var returnValue = (cov_6ty7gufx1.s[87]++, baseValueGenerator.apply(this, args)); // Run the original wrapper
            cov_6ty7gufx1.s[88]++;
            fn.apply(this, args).then(function (data) {
              cov_6ty7gufx1.f[9]++;
              cov_6ty7gufx1.s[89]++;
              // Copy each key from the resolved value into returnValue
              Object.assign(returnValue, data); // Decrement the preload counter, to allow setup to continue.
              cov_6ty7gufx1.s[90]++;
              _this2._decrementPreload();
            });
            cov_6ty7gufx1.s[91]++;
            return returnValue;
          };
          cov_6ty7gufx1.s[92]++;
          if (thisValue) {
            cov_6ty7gufx1.b[16][0]++;
            cov_6ty7gufx1.s[93]++;
            returnedFunction = returnedFunction.bind(thisValue);
          } else {
            cov_6ty7gufx1.b[16][1]++;
          }
          cov_6ty7gufx1.s[94]++;
          return returnedFunction;
        };
      },
      {
        './main': 148,
        'core-js/modules/es.array.iterator': 120,
        'core-js/modules/es.object.assign': 124,
        'core-js/modules/es.object.to-string': 127,
        'core-js/modules/es.promise': 128,
        'core-js/modules/es.string.iterator': 133,
        'core-js/modules/es.symbol': 137,
        'core-js/modules/es.symbol.description': 135,
        'core-js/modules/es.symbol.iterator': 136,
        'core-js/modules/web.dom-collections.iterator': 140
      }
    ],
    153: [
      function (_dereq_, module, exports) {
        'use strict';
        var cov_twryr21dv = function () {
          var path = '/Users/montoyamoraga/github/processing/p5.sound.js/src/core/rendering.js';
          var hash = '0d2f431674eb98446c6d5912679b34bddf8ea605';
          var global = new Function('return this') ();
          var gcv = '__coverage__';
          var coverageData = {
            path: '/Users/montoyamoraga/github/processing/p5.sound.js/src/core/rendering.js',
            statementMap: {
              '0': {
                start: {
                  line: 3,
                  column: 24
                },
                end: {
                  line: 3,
                  column: 328
                }
              },
              '1': {
                start: {
                  line: 3,
                  column: 99
                },
                end: {
                  line: 3,
                  column: 154
                }
              },
              '2': {
                start: {
                  line: 3,
                  column: 133
                },
                end: {
                  line: 3,
                  column: 151
                }
              },
              '3': {
                start: {
                  line: 3,
                  column: 164
                },
                end: {
                  line: 3,
                  column: 326
                }
              },
              '4': {
                start: {
                  line: 3,
                  column: 198
                },
                end: {
                  line: 3,
                  column: 323
                }
              },
              '5': {
                start: {
                  line: 3,
                  column: 329
                },
                end: {
                  line: 3,
                  column: 349
                }
              },
              '6': {
                start: {
                  line: 5,
                  column: 0
                },
                end: {
                  line: 5,
                  column: 43
                }
              },
              '7': {
                start: {
                  line: 7,
                  column: 0
                },
                end: {
                  line: 9,
                  column: 3
                }
              },
              '8': {
                start: {
                  line: 10,
                  column: 0
                },
                end: {
                  line: 10,
                  column: 25
                }
              },
              '9': {
                start: {
                  line: 12,
                  column: 12
                },
                end: {
                  line: 12,
                  column: 53
                }
              },
              '10': {
                start: {
                  line: 14,
                  column: 16
                },
                end: {
                  line: 14,
                  column: 63
                }
              },
              '11': {
                start: {
                  line: 16,
                  column: 0
                },
                end: {
                  line: 16,
                  column: 32
                }
              },
              '12': {
                start: {
                  line: 18,
                  column: 38
                },
                end: {
                  line: 18,
                  column: 85
                }
              },
              '13': {
                start: {
                  line: 18,
                  column: 73
                },
                end: {
                  line: 18,
                  column: 85
                }
              },
              '14': {
                start: {
                  line: 18,
                  column: 98
                },
                end: {
                  line: 18,
                  column: 111
                }
              },
              '15': {
                start: {
                  line: 18,
                  column: 113
                },
                end: {
                  line: 18,
                  column: 194
                }
              },
              '16': {
                start: {
                  line: 18,
                  column: 178
                },
                end: {
                  line: 18,
                  column: 191
                }
              },
              '17': {
                start: {
                  line: 18,
                  column: 195
                },
                end: {
                  line: 18,
                  column: 208
                }
              },
              '18': {
                start: {
                  line: 20,
                  column: 40
                },
                end: {
                  line: 20,
                  column: 82
                }
              },
              '19': {
                start: {
                  line: 20,
                  column: 69
                },
                end: {
                  line: 20,
                  column: 80
                }
              },
              '20': {
                start: {
                  line: 20,
                  column: 83
                },
                end: {
                  line: 20,
                  column: 187
                }
              },
              '21': {
                start: {
                  line: 20,
                  column: 161
                },
                end: {
                  line: 20,
                  column: 185
                }
              },
              '22': {
                start: {
                  line: 20,
                  column: 200
                },
                end: {
                  line: 20,
                  column: 226
                }
              },
              '23': {
                start: {
                  line: 20,
                  column: 228
                },
                end: {
                  line: 20,
                  column: 283
                }
              },
              '24': {
                start: {
                  line: 20,
                  column: 259
                },
                end: {
                  line: 20,
                  column: 281
                }
              },
              '25': {
                start: {
                  line: 20,
                  column: 297
                },
                end: {
                  line: 20,
                  column: 299
                }
              },
              '26': {
                start: {
                  line: 20,
                  column: 329
                },
                end: {
                  line: 20,
                  column: 385
                }
              },
              '27': {
                start: {
                  line: 20,
                  column: 387
                },
                end: {
                  line: 20,
                  column: 667
                }
              },
              '28': {
                start: {
                  line: 20,
                  column: 410
                },
                end: {
                  line: 20,
                  column: 665
                }
              },
              '29': {
                start: {
                  line: 20,
                  column: 475
                },
                end: {
                  line: 20,
                  column: 547
                }
              },
              '30': {
                start: {
                  line: 20,
                  column: 549
                },
                end: {
                  line: 20,
                  column: 663
                }
              },
              '31': {
                start: {
                  line: 20,
                  column: 587
                },
                end: {
                  line: 20,
                  column: 628
                }
              },
              '32': {
                start: {
                  line: 20,
                  column: 638
                },
                end: {
                  line: 20,
                  column: 661
                }
              },
              '33': {
                start: {
                  line: 20,
                  column: 668
                },
                end: {
                  line: 20,
                  column: 689
                }
              },
              '34': {
                start: {
                  line: 20,
                  column: 690
                },
                end: {
                  line: 20,
                  column: 728
                }
              },
              '35': {
                start: {
                  line: 20,
                  column: 703
                },
                end: {
                  line: 20,
                  column: 726
                }
              },
              '36': {
                start: {
                  line: 20,
                  column: 729
                },
                end: {
                  line: 20,
                  column: 743
                }
              },
              '37': {
                start: {
                  line: 22,
                  column: 39
                },
                end: {
                  line: 22,
                  column: 93
                }
              },
              '38': {
                start: {
                  line: 29,
                  column: 16
                },
                end: {
                  line: 29,
                  column: 32
                }
              },
              '39': {
                start: {
                  line: 31,
                  column: 19
                },
                end: {
                  line: 31,
                  column: 29
                }
              },
              '40': {
                start: {
                  line: 76,
                  column: 0
                },
                end: {
                  line: 151,
                  column: 2
                }
              },
              '41': {
                start: {
                  line: 78,
                  column: 10
                },
                end: {
                  line: 78,
                  column: 35
                }
              },
              '42': {
                start: {
                  line: 81,
                  column: 2
                },
                end: {
                  line: 113,
                  column: 3
                }
              },
              '43': {
                start: {
                  line: 82,
                  column: 4
                },
                end: {
                  line: 82,
                  column: 43
                }
              },
              '44': {
                start: {
                  line: 84,
                  column: 4
                },
                end: {
                  line: 92,
                  column: 5
                }
              },
              '45': {
                start: {
                  line: 86,
                  column: 6
                },
                end: {
                  line: 86,
                  column: 34
                }
              },
              '46': {
                start: {
                  line: 88,
                  column: 25
                },
                end: {
                  line: 88,
                  column: 39
                }
              },
              '47': {
                start: {
                  line: 89,
                  column: 6
                },
                end: {
                  line: 91,
                  column: 9
                }
              },
              '48': {
                start: {
                  line: 90,
                  column: 8
                },
                end: {
                  line: 90,
                  column: 34
                }
              },
              '49': {
                start: {
                  line: 94,
                  column: 4
                },
                end: {
                  line: 94,
                  column: 41
                }
              },
              '50': {
                start: {
                  line: 95,
                  column: 4
                },
                end: {
                  line: 95,
                  column: 21
                }
              },
              '51': {
                start: {
                  line: 96,
                  column: 4
                },
                end: {
                  line: 96,
                  column: 34
                }
              },
              '52': {
                start: {
                  line: 98,
                  column: 4
                },
                end: {
                  line: 112,
                  column: 5
                }
              },
              '53': {
                start: {
                  line: 99,
                  column: 6
                },
                end: {
                  line: 99,
                  column: 43
                }
              },
              '54': {
                start: {
                  line: 100,
                  column: 14
                },
                end: {
                  line: 100,
                  column: 15
                }
              },
              '55': {
                start: {
                  line: 102,
                  column: 6
                },
                end: {
                  line: 104,
                  column: 7
                }
              },
              '56': {
                start: {
                  line: 103,
                  column: 8
                },
                end: {
                  line: 103,
                  column: 12
                }
              },
              '57': {
                start: {
                  line: 106,
                  column: 6
                },
                end: {
                  line: 106,
                  column: 44
                }
              },
              '58': {
                start: {
                  line: 107,
                  column: 6
                },
                end: {
                  line: 107,
                  column: 23
                }
              },
              '59': {
                start: {
                  line: 108,
                  column: 6
                },
                end: {
                  line: 108,
                  column: 36
                }
              },
              '60': {
                start: {
                  line: 111,
                  column: 6
                },
                end: {
                  line: 111,
                  column: 22
                }
              },
              '61': {
                start: {
                  line: 116,
                  column: 2
                },
                end: {
                  line: 120,
                  column: 3
                }
              },
              '62': {
                start: {
                  line: 117,
                  column: 4
                },
                end: {
                  line: 117,
                  column: 28
                }
              },
              '63': {
                start: {
                  line: 119,
                  column: 4
                },
                end: {
                  line: 119,
                  column: 34
                }
              },
              '64': {
                start: {
                  line: 122,
                  column: 2
                },
                end: {
                  line: 134,
                  column: 3
                }
              },
              '65': {
                start: {
                  line: 124,
                  column: 4
                },
                end: {
                  line: 124,
                  column: 34
                }
              },
              '66': {
                start: {
                  line: 127,
                  column: 4
                },
                end: {
                  line: 130,
                  column: 5
                }
              },
              '67': {
                start: {
                  line: 128,
                  column: 14
                },
                end: {
                  line: 128,
                  column: 44
                }
              },
              '68': {
                start: {
                  line: 129,
                  column: 6
                },
                end: {
                  line: 129,
                  column: 35
                }
              },
              '69': {
                start: {
                  line: 133,
                  column: 4
                },
                end: {
                  line: 133,
                  column: 60
                }
              },
              '70': {
                start: {
                  line: 138,
                  column: 2
                },
                end: {
                  line: 144,
                  column: 3
                }
              },
              '71': {
                start: {
                  line: 139,
                  column: 4
                },
                end: {
                  line: 139,
                  column: 80
                }
              },
              '72': {
                start: {
                  line: 141,
                  column: 4
                },
                end: {
                  line: 141,
                  column: 40
                }
              },
              '73': {
                start: {
                  line: 143,
                  column: 4
                },
                end: {
                  line: 143,
                  column: 40
                }
              },
              '74': {
                start: {
                  line: 146,
                  column: 2
                },
                end: {
                  line: 146,
                  column: 30
                }
              },
              '75': {
                start: {
                  line: 148,
                  column: 2
                },
                end: {
                  line: 148,
                  column: 34
                }
              },
              '76': {
                start: {
                  line: 150,
                  column: 2
                },
                end: {
                  line: 150,
                  column: 24
                }
              },
              '77': {
                start: {
                  line: 153,
                  column: 15
                },
                end: {
                  line: 153,
                  column: 28
                }
              },
              '78': {
                start: {
                  line: 154,
                  column: 0
                },
                end: {
                  line: 154,
                  column: 27
                }
              }
            },
            fnMap: {
              '0': {
                name: '_typeof',
                decl: {
                  start: {
                    line: 3,
                    column: 9
                  },
                  end: {
                    line: 3,
                    column: 16
                  }
                },
                loc: {
                  start: {
                    line: 3,
                    column: 22
                  },
                  end: {
                    line: 3,
                    column: 351
                  }
                },
                line: 3
              },
              '1': {
                name: '_typeof',
                decl: {
                  start: {
                    line: 3,
                    column: 118
                  },
                  end: {
                    line: 3,
                    column: 125
                  }
                },
                loc: {
                  start: {
                    line: 3,
                    column: 131
                  },
                  end: {
                    line: 3,
                    column: 153
                  }
                },
                line: 3
              },
              '2': {
                name: '_typeof',
                decl: {
                  start: {
                    line: 3,
                    column: 183
                  },
                  end: {
                    line: 3,
                    column: 190
                  }
                },
                loc: {
                  start: {
                    line: 3,
                    column: 196
                  },
                  end: {
                    line: 3,
                    column: 325
                  }
                },
                line: 3
              },
              '3': {
                name: '_getRequireWildcardCache',
                decl: {
                  start: {
                    line: 18,
                    column: 9
                  },
                  end: {
                    line: 18,
                    column: 33
                  }
                },
                loc: {
                  start: {
                    line: 18,
                    column: 36
                  },
                  end: {
                    line: 18,
                    column: 210
                  }
                },
                line: 18
              },
              '4': {
                name: '_getRequireWildcardCache',
                decl: {
                  start: {
                    line: 18,
                    column: 149
                  },
                  end: {
                    line: 18,
                    column: 173
                  }
                },
                loc: {
                  start: {
                    line: 18,
                    column: 176
                  },
                  end: {
                    line: 18,
                    column: 193
                  }
                },
                line: 18
              },
              '5': {
                name: '_interopRequireWildcard',
                decl: {
                  start: {
                    line: 20,
                    column: 9
                  },
                  end: {
                    line: 20,
                    column: 32
                  }
                },
                loc: {
                  start: {
                    line: 20,
                    column: 38
                  },
                  end: {
                    line: 20,
                    column: 745
                  }
                },
                line: 20
              },
              '6': {
                name: '_interopRequireDefault',
                decl: {
                  start: {
                    line: 22,
                    column: 9
                  },
                  end: {
                    line: 22,
                    column: 31
                  }
                },
                loc: {
                  start: {
                    line: 22,
                    column: 37
                  },
                  end: {
                    line: 22,
                    column: 95
                  }
                },
                line: 22
              },
              '7': {
                name: '(anonymous_7)',
                decl: {
                  start: {
                    line: 76,
                    column: 39
                  },
                  end: {
                    line: 76,
                    column: 40
                  }
                },
                loc: {
                  start: {
                    line: 76,
                    column: 65
                  },
                  end: {
                    line: 151,
                    column: 1
                  }
                },
                line: 76
              },
              '8': {
                name: '(anonymous_8)',
                decl: {
                  start: {
                    line: 89,
                    column: 45
                  },
                  end: {
                    line: 89,
                    column: 46
                  }
                },
                loc: {
                  start: {
                    line: 89,
                    column: 58
                  },
                  end: {
                    line: 91,
                    column: 7
                  }
                },
                line: 89
              }
            },
            branchMap: {
              '0': {
                loc: {
                  start: {
                    line: 3,
                    column: 24
                  },
                  end: {
                    line: 3,
                    column: 328
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 3,
                      column: 24
                    },
                    end: {
                      line: 3,
                      column: 328
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 24
                    },
                    end: {
                      line: 3,
                      column: 328
                    }
                  }
                ],
                line: 3
              },
              '1': {
                loc: {
                  start: {
                    line: 3,
                    column: 28
                  },
                  end: {
                    line: 3,
                    column: 95
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 3,
                      column: 28
                    },
                    end: {
                      line: 3,
                      column: 56
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 60
                    },
                    end: {
                      line: 3,
                      column: 95
                    }
                  }
                ],
                line: 3
              },
              '2': {
                loc: {
                  start: {
                    line: 3,
                    column: 205
                  },
                  end: {
                    line: 3,
                    column: 322
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 3,
                      column: 301
                    },
                    end: {
                      line: 3,
                      column: 309
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 312
                    },
                    end: {
                      line: 3,
                      column: 322
                    }
                  }
                ],
                line: 3
              },
              '3': {
                loc: {
                  start: {
                    line: 3,
                    column: 205
                  },
                  end: {
                    line: 3,
                    column: 298
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 3,
                      column: 205
                    },
                    end: {
                      line: 3,
                      column: 208
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 212
                    },
                    end: {
                      line: 3,
                      column: 240
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 244
                    },
                    end: {
                      line: 3,
                      column: 270
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 274
                    },
                    end: {
                      line: 3,
                      column: 298
                    }
                  }
                ],
                line: 3
              },
              '4': {
                loc: {
                  start: {
                    line: 18,
                    column: 38
                  },
                  end: {
                    line: 18,
                    column: 85
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 18,
                      column: 38
                    },
                    end: {
                      line: 18,
                      column: 85
                    }
                  },
                  {
                    start: {
                      line: 18,
                      column: 38
                    },
                    end: {
                      line: 18,
                      column: 85
                    }
                  }
                ],
                line: 18
              },
              '5': {
                loc: {
                  start: {
                    line: 20,
                    column: 40
                  },
                  end: {
                    line: 20,
                    column: 82
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 20,
                      column: 40
                    },
                    end: {
                      line: 20,
                      column: 82
                    }
                  },
                  {
                    start: {
                      line: 20,
                      column: 40
                    },
                    end: {
                      line: 20,
                      column: 82
                    }
                  }
                ],
                line: 20
              },
              '6': {
                loc: {
                  start: {
                    line: 20,
                    column: 44
                  },
                  end: {
                    line: 20,
                    column: 65
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 20,
                      column: 44
                    },
                    end: {
                      line: 20,
                      column: 47
                    }
                  },
                  {
                    start: {
                      line: 20,
                      column: 51
                    },
                    end: {
                      line: 20,
                      column: 65
                    }
                  }
                ],
                line: 20
              },
              '7': {
                loc: {
                  start: {
                    line: 20,
                    column: 83
                  },
                  end: {
                    line: 20,
                    column: 187
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 20,
                      column: 83
                    },
                    end: {
                      line: 20,
                      column: 187
                    }
                  },
                  {
                    start: {
                      line: 20,
                      column: 83
                    },
                    end: {
                      line: 20,
                      column: 187
                    }
                  }
                ],
                line: 20
              },
              '8': {
                loc: {
                  start: {
                    line: 20,
                    column: 87
                  },
                  end: {
                    line: 20,
                    column: 157
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 20,
                      column: 87
                    },
                    end: {
                      line: 20,
                      column: 99
                    }
                  },
                  {
                    start: {
                      line: 20,
                      column: 103
                    },
                    end: {
                      line: 20,
                      column: 128
                    }
                  },
                  {
                    start: {
                      line: 20,
                      column: 132
                    },
                    end: {
                      line: 20,
                      column: 157
                    }
                  }
                ],
                line: 20
              },
              '9': {
                loc: {
                  start: {
                    line: 20,
                    column: 228
                  },
                  end: {
                    line: 20,
                    column: 283
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 20,
                      column: 228
                    },
                    end: {
                      line: 20,
                      column: 283
                    }
                  },
                  {
                    start: {
                      line: 20,
                      column: 228
                    },
                    end: {
                      line: 20,
                      column: 283
                    }
                  }
                ],
                line: 20
              },
              '10': {
                loc: {
                  start: {
                    line: 20,
                    column: 232
                  },
                  end: {
                    line: 20,
                    column: 255
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 20,
                      column: 232
                    },
                    end: {
                      line: 20,
                      column: 237
                    }
                  },
                  {
                    start: {
                      line: 20,
                      column: 241
                    },
                    end: {
                      line: 20,
                      column: 255
                    }
                  }
                ],
                line: 20
              },
              '11': {
                loc: {
                  start: {
                    line: 20,
                    column: 329
                  },
                  end: {
                    line: 20,
                    column: 385
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 20,
                      column: 329
                    },
                    end: {
                      line: 20,
                      column: 350
                    }
                  },
                  {
                    start: {
                      line: 20,
                      column: 354
                    },
                    end: {
                      line: 20,
                      column: 385
                    }
                  }
                ],
                line: 20
              },
              '12': {
                loc: {
                  start: {
                    line: 20,
                    column: 410
                  },
                  end: {
                    line: 20,
                    column: 665
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 20,
                      column: 410
                    },
                    end: {
                      line: 20,
                      column: 665
                    }
                  },
                  {
                    start: {
                      line: 20,
                      column: 410
                    },
                    end: {
                      line: 20,
                      column: 665
                    }
                  }
                ],
                line: 20
              },
              '13': {
                loc: {
                  start: {
                    line: 20,
                    column: 475
                  },
                  end: {
                    line: 20,
                    column: 547
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 20,
                      column: 499
                    },
                    end: {
                      line: 20,
                      column: 540
                    }
                  },
                  {
                    start: {
                      line: 20,
                      column: 543
                    },
                    end: {
                      line: 20,
                      column: 547
                    }
                  }
                ],
                line: 20
              },
              '14': {
                loc: {
                  start: {
                    line: 20,
                    column: 549
                  },
                  end: {
                    line: 20,
                    column: 663
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 20,
                      column: 549
                    },
                    end: {
                      line: 20,
                      column: 663
                    }
                  },
                  {
                    start: {
                      line: 20,
                      column: 549
                    },
                    end: {
                      line: 20,
                      column: 663
                    }
                  }
                ],
                line: 20
              },
              '15': {
                loc: {
                  start: {
                    line: 20,
                    column: 553
                  },
                  end: {
                    line: 20,
                    column: 583
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 20,
                      column: 553
                    },
                    end: {
                      line: 20,
                      column: 557
                    }
                  },
                  {
                    start: {
                      line: 20,
                      column: 562
                    },
                    end: {
                      line: 20,
                      column: 570
                    }
                  },
                  {
                    start: {
                      line: 20,
                      column: 574
                    },
                    end: {
                      line: 20,
                      column: 582
                    }
                  }
                ],
                line: 20
              },
              '16': {
                loc: {
                  start: {
                    line: 20,
                    column: 690
                  },
                  end: {
                    line: 20,
                    column: 728
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 20,
                      column: 690
                    },
                    end: {
                      line: 20,
                      column: 728
                    }
                  },
                  {
                    start: {
                      line: 20,
                      column: 690
                    },
                    end: {
                      line: 20,
                      column: 728
                    }
                  }
                ],
                line: 20
              },
              '17': {
                loc: {
                  start: {
                    line: 22,
                    column: 46
                  },
                  end: {
                    line: 22,
                    column: 92
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 22,
                      column: 70
                    },
                    end: {
                      line: 22,
                      column: 73
                    }
                  },
                  {
                    start: {
                      line: 22,
                      column: 76
                    },
                    end: {
                      line: 22,
                      column: 92
                    }
                  }
                ],
                line: 22
              },
              '18': {
                loc: {
                  start: {
                    line: 22,
                    column: 46
                  },
                  end: {
                    line: 22,
                    column: 67
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 22,
                      column: 46
                    },
                    end: {
                      line: 22,
                      column: 49
                    }
                  },
                  {
                    start: {
                      line: 22,
                      column: 53
                    },
                    end: {
                      line: 22,
                      column: 67
                    }
                  }
                ],
                line: 22
              },
              '19': {
                loc: {
                  start: {
                    line: 78,
                    column: 10
                  },
                  end: {
                    line: 78,
                    column: 35
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 78,
                      column: 10
                    },
                    end: {
                      line: 78,
                      column: 18
                    }
                  },
                  {
                    start: {
                      line: 78,
                      column: 22
                    },
                    end: {
                      line: 78,
                      column: 35
                    }
                  }
                ],
                line: 78
              },
              '20': {
                loc: {
                  start: {
                    line: 81,
                    column: 2
                  },
                  end: {
                    line: 113,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 81,
                      column: 2
                    },
                    end: {
                      line: 113,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 81,
                      column: 2
                    },
                    end: {
                      line: 113,
                      column: 3
                    }
                  }
                ],
                line: 81
              },
              '21': {
                loc: {
                  start: {
                    line: 84,
                    column: 4
                  },
                  end: {
                    line: 92,
                    column: 5
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 84,
                      column: 4
                    },
                    end: {
                      line: 92,
                      column: 5
                    }
                  },
                  {
                    start: {
                      line: 84,
                      column: 4
                    },
                    end: {
                      line: 92,
                      column: 5
                    }
                  }
                ],
                line: 84
              },
              '22': {
                loc: {
                  start: {
                    line: 98,
                    column: 4
                  },
                  end: {
                    line: 112,
                    column: 5
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 98,
                      column: 4
                    },
                    end: {
                      line: 112,
                      column: 5
                    }
                  },
                  {
                    start: {
                      line: 98,
                      column: 4
                    },
                    end: {
                      line: 112,
                      column: 5
                    }
                  }
                ],
                line: 98
              },
              '23': {
                loc: {
                  start: {
                    line: 116,
                    column: 2
                  },
                  end: {
                    line: 120,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 116,
                      column: 2
                    },
                    end: {
                      line: 120,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 116,
                      column: 2
                    },
                    end: {
                      line: 120,
                      column: 3
                    }
                  }
                ],
                line: 116
              },
              '24': {
                loc: {
                  start: {
                    line: 122,
                    column: 2
                  },
                  end: {
                    line: 134,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 122,
                      column: 2
                    },
                    end: {
                      line: 134,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 122,
                      column: 2
                    },
                    end: {
                      line: 134,
                      column: 3
                    }
                  }
                ],
                line: 122
              },
              '25': {
                loc: {
                  start: {
                    line: 127,
                    column: 4
                  },
                  end: {
                    line: 130,
                    column: 5
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 127,
                      column: 4
                    },
                    end: {
                      line: 130,
                      column: 5
                    }
                  },
                  {
                    start: {
                      line: 127,
                      column: 4
                    },
                    end: {
                      line: 130,
                      column: 5
                    }
                  }
                ],
                line: 127
              },
              '26': {
                loc: {
                  start: {
                    line: 138,
                    column: 2
                  },
                  end: {
                    line: 144,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 138,
                      column: 2
                    },
                    end: {
                      line: 144,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 138,
                      column: 2
                    },
                    end: {
                      line: 144,
                      column: 3
                    }
                  }
                ],
                line: 138
              }
            },
            s: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0,
              '10': 0,
              '11': 0,
              '12': 0,
              '13': 0,
              '14': 0,
              '15': 0,
              '16': 0,
              '17': 0,
              '18': 0,
              '19': 0,
              '20': 0,
              '21': 0,
              '22': 0,
              '23': 0,
              '24': 0,
              '25': 0,
              '26': 0,
              '27': 0,
              '28': 0,
              '29': 0,
              '30': 0,
              '31': 0,
              '32': 0,
              '33': 0,
              '34': 0,
              '35': 0,
              '36': 0,
              '37': 0,
              '38': 0,
              '39': 0,
              '40': 0,
              '41': 0,
              '42': 0,
              '43': 0,
              '44': 0,
              '45': 0,
              '46': 0,
              '47': 0,
              '48': 0,
              '49': 0,
              '50': 0,
              '51': 0,
              '52': 0,
              '53': 0,
              '54': 0,
              '55': 0,
              '56': 0,
              '57': 0,
              '58': 0,
              '59': 0,
              '60': 0,
              '61': 0,
              '62': 0,
              '63': 0,
              '64': 0,
              '65': 0,
              '66': 0,
              '67': 0,
              '68': 0,
              '69': 0,
              '70': 0,
              '71': 0,
              '72': 0,
              '73': 0,
              '74': 0,
              '75': 0,
              '76': 0,
              '77': 0,
              '78': 0
            },
            f: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0
            },
            b: {
              '0': [
                0,
                0
              ],
              '1': [
                0,
                0
              ],
              '2': [
                0,
                0
              ],
              '3': [
                0,
                0,
                0,
                0
              ],
              '4': [
                0,
                0
              ],
              '5': [
                0,
                0
              ],
              '6': [
                0,
                0
              ],
              '7': [
                0,
                0
              ],
              '8': [
                0,
                0,
                0
              ],
              '9': [
                0,
                0
              ],
              '10': [
                0,
                0
              ],
              '11': [
                0,
                0
              ],
              '12': [
                0,
                0
              ],
              '13': [
                0,
                0
              ],
              '14': [
                0,
                0
              ],
              '15': [
                0,
                0,
                0
              ],
              '16': [
                0,
                0
              ],
              '17': [
                0,
                0
              ],
              '18': [
                0,
                0
              ],
              '19': [
                0,
                0
              ],
              '20': [
                0,
                0
              ],
              '21': [
                0,
                0
              ],
              '22': [
                0,
                0
              ],
              '23': [
                0,
                0
              ],
              '24': [
                0,
                0
              ],
              '25': [
                0,
                0
              ],
              '26': [
                0,
                0
              ]
            },
            _coverageSchema: '43e27e138ebf9cfc5966b082cf9a028302ed4184',
            hash: '0d2f431674eb98446c6d5912679b34bddf8ea605'
          };
          var coverage = global[gcv] || (global[gcv] = {
          });
          if (coverage[path] && coverage[path].hash === hash) {
            return coverage[path];
          }
          return coverage[path] = coverageData;
        }();
        _dereq_('core-js/modules/es.symbol');
        _dereq_('core-js/modules/es.symbol.description');
        _dereq_('core-js/modules/es.symbol.iterator');
        _dereq_('core-js/modules/es.array.filter');
        _dereq_('core-js/modules/es.array.iterator');
        _dereq_('core-js/modules/es.object.get-own-property-descriptor');
        _dereq_('core-js/modules/es.object.to-string');
        _dereq_('core-js/modules/es.string.iterator');
        _dereq_('core-js/modules/es.weak-map');
        _dereq_('core-js/modules/web.dom-collections.iterator');
        function _typeof2(obj) {
          if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {
            _typeof2 = function _typeof2(obj) {
              return typeof obj;
            };
          } else {
            _typeof2 = function _typeof2(obj) {
              return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;
            };
          }
          return _typeof2(obj);
        }
        function _typeof(obj) {
          cov_twryr21dv.f[0]++;
          cov_twryr21dv.s[0]++;
          if ((cov_twryr21dv.b[1][0]++, typeof Symbol === 'function') && (cov_twryr21dv.b[1][1]++, _typeof2(Symbol.iterator) === 'symbol')) {
            cov_twryr21dv.b[0][0]++;
            cov_twryr21dv.s[1]++;
            _typeof = function _typeof(obj) {
              cov_twryr21dv.f[1]++;
              cov_twryr21dv.s[2]++;
              return _typeof2(obj);
            };
          } else {
            cov_twryr21dv.b[0][1]++;
            cov_twryr21dv.s[3]++;
            _typeof = function _typeof(obj) {
              cov_twryr21dv.f[2]++;
              cov_twryr21dv.s[4]++;
              return (cov_twryr21dv.b[3][0]++, obj) && (cov_twryr21dv.b[3][1]++, typeof Symbol === 'function') && (cov_twryr21dv.b[3][2]++, obj.constructor === Symbol) && (cov_twryr21dv.b[3][3]++, obj !== Symbol.prototype) ? (cov_twryr21dv.b[2][0]++, 'symbol') : (cov_twryr21dv.b[2][1]++, _typeof2(obj));
            };
          }
          cov_twryr21dv.s[5]++;
          return _typeof(obj);
        }
        cov_twryr21dv.s[6]++;
        _dereq_('core-js/modules/es.array.filter');
        cov_twryr21dv.s[7]++;
        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        cov_twryr21dv.s[8]++;
        exports.default = void 0;
        var _main = (cov_twryr21dv.s[9]++, _interopRequireDefault(_dereq_('./main')));
        var constants = (cov_twryr21dv.s[10]++, _interopRequireWildcard(_dereq_('./constants')));
        cov_twryr21dv.s[11]++;
        _dereq_('./p5sound.Renderer2D');
        function _getRequireWildcardCache() {
          cov_twryr21dv.f[3]++;
          cov_twryr21dv.s[12]++;
          if (typeof WeakMap !== 'function') {
            cov_twryr21dv.b[4][0]++;
            cov_twryr21dv.s[13]++;
            return null;
          } else {
            cov_twryr21dv.b[4][1]++;
          }
          var cache = (cov_twryr21dv.s[14]++, new WeakMap());
          cov_twryr21dv.s[15]++;
          _getRequireWildcardCache = function _getRequireWildcardCache() {
            cov_twryr21dv.f[4]++;
            cov_twryr21dv.s[16]++;
            return cache;
          };
          cov_twryr21dv.s[17]++;
          return cache;
        }
        function _interopRequireWildcard(obj) {
          cov_twryr21dv.f[5]++;
          cov_twryr21dv.s[18]++;
          if ((cov_twryr21dv.b[6][0]++, obj) && (cov_twryr21dv.b[6][1]++, obj.__esModule)) {
            cov_twryr21dv.b[5][0]++;
            cov_twryr21dv.s[19]++;
            return obj;
          } else {
            cov_twryr21dv.b[5][1]++;
          }
          cov_twryr21dv.s[20]++;
          if ((cov_twryr21dv.b[8][0]++, obj === null) || (cov_twryr21dv.b[8][1]++, _typeof(obj) !== 'object') && (cov_twryr21dv.b[8][2]++, typeof obj !== 'function')) {
            cov_twryr21dv.b[7][0]++;
            cov_twryr21dv.s[21]++;
            return {
            default:
              obj
            };
          } else {
            cov_twryr21dv.b[7][1]++;
          }
          var cache = (cov_twryr21dv.s[22]++, _getRequireWildcardCache());
          cov_twryr21dv.s[23]++;
          if ((cov_twryr21dv.b[10][0]++, cache) && (cov_twryr21dv.b[10][1]++, cache.has(obj))) {
            cov_twryr21dv.b[9][0]++;
            cov_twryr21dv.s[24]++;
            return cache.get(obj);
          } else {
            cov_twryr21dv.b[9][1]++;
          }
          var newObj = (cov_twryr21dv.s[25]++, {
          });
          var hasPropertyDescriptor = (cov_twryr21dv.s[26]++, (cov_twryr21dv.b[11][0]++, Object.defineProperty) && (cov_twryr21dv.b[11][1]++, Object.getOwnPropertyDescriptor));
          cov_twryr21dv.s[27]++;
          for (var key in obj) {
            cov_twryr21dv.s[28]++;
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              cov_twryr21dv.b[12][0]++;
              var desc = (cov_twryr21dv.s[29]++, hasPropertyDescriptor ? (cov_twryr21dv.b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) : (cov_twryr21dv.b[13][1]++, null));
              cov_twryr21dv.s[30]++;
              if ((cov_twryr21dv.b[15][0]++, desc) && ((cov_twryr21dv.b[15][1]++, desc.get) || (cov_twryr21dv.b[15][2]++, desc.set))) {
                cov_twryr21dv.b[14][0]++;
                cov_twryr21dv.s[31]++;
                Object.defineProperty(newObj, key, desc);
              } else {
                cov_twryr21dv.b[14][1]++;
                cov_twryr21dv.s[32]++;
                newObj[key] = obj[key];
              }
            } else {
              cov_twryr21dv.b[12][1]++;
            }
          }
          cov_twryr21dv.s[33]++;
          newObj.default = obj;
          cov_twryr21dv.s[34]++;
          if (cache) {
            cov_twryr21dv.b[16][0]++;
            cov_twryr21dv.s[35]++;
            cache.set(obj, newObj);
          } else {
            cov_twryr21dv.b[16][1]++;
          }
          cov_twryr21dv.s[36]++;
          return newObj;
        }
        function _interopRequireDefault(obj) {
          cov_twryr21dv.f[6]++;
          cov_twryr21dv.s[37]++;
          return (cov_twryr21dv.b[18][0]++, obj) && (cov_twryr21dv.b[18][1]++, obj.__esModule) ? (cov_twryr21dv.b[17][0]++, obj) : (cov_twryr21dv.b[17][1]++, {
          default:
            obj
          });
        }        /**
 * @module Rendering
 * @submodule Rendering
 * @for p5
 */

        var defaultId = (cov_twryr21dv.s[38]++, 'defaultCanvas0'); // this gets set again in createCanvas
        var defaultClass = (cov_twryr21dv.s[39]++, 'p5Canvas');
        /**
 * Creates a canvas element in the document and sets its dimensions
 * in pixels. This method should be called only once at the start of <a href="#/p5/setup">setup()</a>.
 * Calling <a href="#/p5/createCanvas">createCanvas</a> more than once in a
 * sketch will result in very unpredictable behavior.
 *
 * Important note: in 2D mode (i.e. when `p5sound.Renderer` is not set) the origin (0,0)
 * is positioned at the top left of the screen. In 3D mode (i.e. when `p5sound.Renderer`
 * is set to `WEBGL`), the origin is positioned at the center of the canvas.
 * See [this issue](https://github.com/processing/p5sound.js/issues/1545) for more information.
 *
 * A WebGL canvas will use a WebGL2 context if it is supported by the browser.
 * Check the <a href="#/p5/webglVersion">webglVersion</a> property to check what
 * version is being used, or call <a href="#/p5/setAttributes">setAttributes({ version: 1 })</a>
 * to create a WebGL1 context.
 *
 * The system variables width and height are set by the parameters passed to this
 * function. If <a href="#/p5/createCanvas">createCanvas()</a> is not used, the
 * window will be given a default size of 100×100 pixels.
 *
 * For more ways to position the canvas, see the
 * <a href='https://github.com/processing/p5sound.js/wiki/Positioning-your-canvas'>
 * positioning the canvas</a> wiki page.
 *
 * @method createCanvas
 * @param  {Number} w width of the canvas
 * @param  {Number} h height of the canvas
 * @param  {Constant} [renderer] either P2D or WEBGL
 * @return {p5sound.Renderer} pointer to p5sound.Renderer holding canvas
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 50);
 *   background(153);
 *   line(0, 0, width, height);
 * }
 * </code>
 * </div>
 *
 * @alt
 * Black line extending from top-left of canvas to bottom right.
 */
        cov_twryr21dv.s[40]++;
        _main.default.prototype.createCanvas = function (w, h, renderer) {
          cov_twryr21dv.f[7]++;
          //optional: renderer, otherwise defaults to p2d
          var r = (cov_twryr21dv.s[41]++, (cov_twryr21dv.b[19][0]++, renderer) || (cov_twryr21dv.b[19][1]++, constants.P2D));
          var c;
          cov_twryr21dv.s[42]++;
          if (r === constants.WEBGL) {
            cov_twryr21dv.b[20][0]++;
            cov_twryr21dv.s[43]++;
            c = document.getElementById(defaultId);
            cov_twryr21dv.s[44]++;
            if (c) {
              cov_twryr21dv.b[21][0]++;
              cov_twryr21dv.s[45]++;
              //if defaultCanvas already exists
              c.parentNode.removeChild(c); //replace the existing defaultCanvas
              var thisRenderer = (cov_twryr21dv.s[46]++, this._renderer);
              cov_twryr21dv.s[47]++;
              this._elements = this._elements.filter(function (e) {
                cov_twryr21dv.f[8]++;
                cov_twryr21dv.s[48]++;
                return e !== thisRenderer;
              });
            } else {
              cov_twryr21dv.b[21][1]++;
            }
            cov_twryr21dv.s[49]++;
            c = document.createElement('canvas');
            cov_twryr21dv.s[50]++;
            c.id = defaultId;
            cov_twryr21dv.s[51]++;
            c.classList.add(defaultClass);
          } else {
            cov_twryr21dv.b[20][1]++;
            cov_twryr21dv.s[52]++;
            if (!this._defaultGraphicsCreated) {
              cov_twryr21dv.b[22][0]++;
              cov_twryr21dv.s[53]++;
              c = document.createElement('canvas');
              var i = (cov_twryr21dv.s[54]++, 0);
              cov_twryr21dv.s[55]++;
              while (document.getElementById('defaultCanvas'.concat(i))) {
                cov_twryr21dv.s[56]++;
                i++;
              }
              cov_twryr21dv.s[57]++;
              defaultId = 'defaultCanvas'.concat(i);
              cov_twryr21dv.s[58]++;
              c.id = defaultId;
              cov_twryr21dv.s[59]++;
              c.classList.add(defaultClass);
            } else {
              cov_twryr21dv.b[22][1]++;
              cov_twryr21dv.s[60]++;
              // resize the default canvas if new one is created
              c = this.canvas;
            }
          } // set to invisible if still in setup (to prevent flashing with manipulate)

          cov_twryr21dv.s[61]++;
          if (!this._setupDone) {
            cov_twryr21dv.b[23][0]++;
            cov_twryr21dv.s[62]++;
            c.dataset.hidden = true; // tag to show later
            cov_twryr21dv.s[63]++;
            c.style.visibility = 'hidden';
          } else {
            cov_twryr21dv.b[23][1]++;
          }
          cov_twryr21dv.s[64]++;
          if (this._userNode) {
            cov_twryr21dv.b[24][0]++;
            cov_twryr21dv.s[65]++;
            // user input node case
            this._userNode.appendChild(c);
          } else {
            cov_twryr21dv.b[24][1]++;
            cov_twryr21dv.s[66]++;
            //create main element
            if (document.getElementsByTagName('main').length === 0) {
              cov_twryr21dv.b[25][0]++;
              var m = (cov_twryr21dv.s[67]++, document.createElement('main'));
              cov_twryr21dv.s[68]++;
              document.body.appendChild(m);
            } else {
              cov_twryr21dv.b[25][1]++;
            } //append canvas to main

            cov_twryr21dv.s[69]++;
            document.getElementsByTagName('main') [0].appendChild(c);
          } // Init our renderer
          //P2D mode

          cov_twryr21dv.s[70]++;
          if (!this._defaultGraphicsCreated) {
            cov_twryr21dv.b[26][0]++;
            cov_twryr21dv.s[71]++;
            this._setProperty('_renderer', new _main.default.Renderer2D(c, this, true));
            cov_twryr21dv.s[72]++;
            this._defaultGraphicsCreated = true;
            cov_twryr21dv.s[73]++;
            this._elements.push(this._renderer);
          } else {
            cov_twryr21dv.b[26][1]++;
          }
          cov_twryr21dv.s[74]++;
          this._renderer.resize(w, h);
          cov_twryr21dv.s[75]++;
          this._renderer._applyDefaults();
          cov_twryr21dv.s[76]++;
          return this._renderer;
        };
        var _default = (cov_twryr21dv.s[77]++, _main.default);
        cov_twryr21dv.s[78]++;
        exports.default = _default;
      },
      {
        './constants': 145,
        './main': 148,
        './p5sound.Renderer2D': 151,
        'core-js/modules/es.array.filter': 117,
        'core-js/modules/es.array.iterator': 120,
        'core-js/modules/es.object.get-own-property-descriptor': 125,
        'core-js/modules/es.object.to-string': 127,
        'core-js/modules/es.string.iterator': 133,
        'core-js/modules/es.symbol': 137,
        'core-js/modules/es.symbol.description': 135,
        'core-js/modules/es.symbol.iterator': 136,
        'core-js/modules/es.weak-map': 138,
        'core-js/modules/web.dom-collections.iterator': 140
      }
    ],
    154: [
      function (_dereq_, module, exports) {
        'use strict';
        var cov_bmbwg9cbs = function () {
          var path = '/Users/montoyamoraga/github/processing/p5.sound.js/src/core/shape/2d_primitives.js';
          var hash = '6114617c18d0ff793a94c903164b4150c4faa46c';
          var global = new Function('return this') ();
          var gcv = '__coverage__';
          var coverageData = {
            path: '/Users/montoyamoraga/github/processing/p5.sound.js/src/core/shape/2d_primitives.js',
            statementMap: {
              '0': {
                start: {
                  line: 3,
                  column: 0
                },
                end: {
                  line: 5,
                  column: 3
                }
              },
              '1': {
                start: {
                  line: 6,
                  column: 0
                },
                end: {
                  line: 6,
                  column: 25
                }
              },
              '2': {
                start: {
                  line: 8,
                  column: 12
                },
                end: {
                  line: 8,
                  column: 54
                }
              },
              '3': {
                start: {
                  line: 10,
                  column: 39
                },
                end: {
                  line: 10,
                  column: 93
                }
              },
              '4': {
                start: {
                  line: 54,
                  column: 0
                },
                end: {
                  line: 56,
                  column: 2
                }
              },
              '5': {
                start: {
                  line: 55,
                  column: 2
                },
                end: {
                  line: 55,
                  column: 52
                }
              },
              '6': {
                start: {
                  line: 59,
                  column: 0
                },
                end: {
                  line: 78,
                  column: 2
                }
              },
              '7': {
                start: {
                  line: 62,
                  column: 2
                },
                end: {
                  line: 64,
                  column: 3
                }
              },
              '8': {
                start: {
                  line: 63,
                  column: 4
                },
                end: {
                  line: 63,
                  column: 16
                }
              },
              '9': {
                start: {
                  line: 67,
                  column: 2
                },
                end: {
                  line: 69,
                  column: 3
                }
              },
              '10': {
                start: {
                  line: 68,
                  column: 4
                },
                end: {
                  line: 68,
                  column: 20
                }
              },
              '11': {
                start: {
                  line: 71,
                  column: 2
                },
                end: {
                  line: 73,
                  column: 3
                }
              },
              '12': {
                start: {
                  line: 72,
                  column: 4
                },
                end: {
                  line: 72,
                  column: 20
                }
              },
              '13': {
                start: {
                  line: 75,
                  column: 2
                },
                end: {
                  line: 75,
                  column: 39
                }
              },
              '14': {
                start: {
                  line: 77,
                  column: 2
                },
                end: {
                  line: 77,
                  column: 14
                }
              },
              '15': {
                start: {
                  line: 80,
                  column: 15
                },
                end: {
                  line: 80,
                  column: 28
                }
              },
              '16': {
                start: {
                  line: 81,
                  column: 0
                },
                end: {
                  line: 81,
                  column: 27
                }
              }
            },
            fnMap: {
              '0': {
                name: '_interopRequireDefault',
                decl: {
                  start: {
                    line: 10,
                    column: 9
                  },
                  end: {
                    line: 10,
                    column: 31
                  }
                },
                loc: {
                  start: {
                    line: 10,
                    column: 37
                  },
                  end: {
                    line: 10,
                    column: 95
                  }
                },
                line: 10
              },
              '1': {
                name: '(anonymous_1)',
                decl: {
                  start: {
                    line: 54,
                    column: 34
                  },
                  end: {
                    line: 54,
                    column: 35
                  }
                },
                loc: {
                  start: {
                    line: 54,
                    column: 56
                  },
                  end: {
                    line: 56,
                    column: 1
                  }
                },
                line: 54
              },
              '2': {
                name: '(anonymous_2)',
                decl: {
                  start: {
                    line: 59,
                    column: 41
                  },
                  end: {
                    line: 59,
                    column: 42
                  }
                },
                loc: {
                  start: {
                    line: 59,
                    column: 63
                  },
                  end: {
                    line: 78,
                    column: 1
                  }
                },
                line: 59
              }
            },
            branchMap: {
              '0': {
                loc: {
                  start: {
                    line: 10,
                    column: 46
                  },
                  end: {
                    line: 10,
                    column: 92
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 10,
                      column: 70
                    },
                    end: {
                      line: 10,
                      column: 73
                    }
                  },
                  {
                    start: {
                      line: 10,
                      column: 76
                    },
                    end: {
                      line: 10,
                      column: 92
                    }
                  }
                ],
                line: 10
              },
              '1': {
                loc: {
                  start: {
                    line: 10,
                    column: 46
                  },
                  end: {
                    line: 10,
                    column: 67
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 10,
                      column: 46
                    },
                    end: {
                      line: 10,
                      column: 49
                    }
                  },
                  {
                    start: {
                      line: 10,
                      column: 53
                    },
                    end: {
                      line: 10,
                      column: 67
                    }
                  }
                ],
                line: 10
              },
              '2': {
                loc: {
                  start: {
                    line: 62,
                    column: 2
                  },
                  end: {
                    line: 64,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 62,
                      column: 2
                    },
                    end: {
                      line: 64,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 62,
                      column: 2
                    },
                    end: {
                      line: 64,
                      column: 3
                    }
                  }
                ],
                line: 62
              },
              '3': {
                loc: {
                  start: {
                    line: 62,
                    column: 6
                  },
                  end: {
                    line: 62,
                    column: 58
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 62,
                      column: 6
                    },
                    end: {
                      line: 62,
                      column: 31
                    }
                  },
                  {
                    start: {
                      line: 62,
                      column: 35
                    },
                    end: {
                      line: 62,
                      column: 58
                    }
                  }
                ],
                line: 62
              },
              '4': {
                loc: {
                  start: {
                    line: 67,
                    column: 2
                  },
                  end: {
                    line: 69,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 67,
                      column: 2
                    },
                    end: {
                      line: 69,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 67,
                      column: 2
                    },
                    end: {
                      line: 69,
                      column: 3
                    }
                  }
                ],
                line: 67
              },
              '5': {
                loc: {
                  start: {
                    line: 71,
                    column: 2
                  },
                  end: {
                    line: 73,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 71,
                      column: 2
                    },
                    end: {
                      line: 73,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 71,
                      column: 2
                    },
                    end: {
                      line: 73,
                      column: 3
                    }
                  }
                ],
                line: 71
              }
            },
            s: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0,
              '10': 0,
              '11': 0,
              '12': 0,
              '13': 0,
              '14': 0,
              '15': 0,
              '16': 0
            },
            f: {
              '0': 0,
              '1': 0,
              '2': 0
            },
            b: {
              '0': [
                0,
                0
              ],
              '1': [
                0,
                0
              ],
              '2': [
                0,
                0
              ],
              '3': [
                0,
                0
              ],
              '4': [
                0,
                0
              ],
              '5': [
                0,
                0
              ]
            },
            _coverageSchema: '43e27e138ebf9cfc5966b082cf9a028302ed4184',
            hash: '6114617c18d0ff793a94c903164b4150c4faa46c'
          };
          var coverage = global[gcv] || (global[gcv] = {
          });
          if (coverage[path] && coverage[path].hash === hash) {
            return coverage[path];
          }
          return coverage[path] = coverageData;
        }();
        cov_bmbwg9cbs.s[0]++;
        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        cov_bmbwg9cbs.s[1]++;
        exports.default = void 0;
        var _main = (cov_bmbwg9cbs.s[2]++, _interopRequireDefault(_dereq_('../main')));
        function _interopRequireDefault(obj) {
          cov_bmbwg9cbs.f[0]++;
          cov_bmbwg9cbs.s[3]++;
          return (cov_bmbwg9cbs.b[1][0]++, obj) && (cov_bmbwg9cbs.b[1][1]++, obj.__esModule) ? (cov_bmbwg9cbs.b[0][0]++, obj) : (cov_bmbwg9cbs.b[0][1]++, {
          default:
            obj
          });
        }        /**
 * @module Shape
 * @submodule 2D Primitives
 * @for p5
 * @requires core
 * @requires constants
 */
        /**
 * Draws an ellipse (oval) to the canvas. An ellipse with equal width and height
 * is a circle. By default, the first two parameters set the location of the
 * center of the ellipse. The third and fourth parameters set the shape's width
 * and height, respectively. The origin may be changed with the
 * <a href="#/p5/ellipseMode">ellipseMode()</a> function.
 *
 * If no height is specified, the value of width is used for both the width and
 * height. If a negative height or width is specified, the absolute value is
 * taken.
 *
 * @method ellipse
 * @param  {Number} x x-coordinate of the center of the ellipse.
 * @param  {Number} y y-coordinate of the center of the ellipse.
 * @param  {Number} w width of the ellipse.
 * @param  {Number} [h] height of the ellipse.
 * @chainable
 * @example
 * <div>
 * <code>
 * ellipse(56, 46, 55, 55);
 * describe('A white ellipse with black outline in middle of a gray canvas.');
 * </code>
 * </div>
 *
 */
        /**
 * @method ellipse
 * @param  {Number} x
 * @param  {Number} y
 * @param  {Number} w
 * @param  {Number} h
 */

        cov_bmbwg9cbs.s[4]++;
        _main.default.prototype.ellipse = function (x, y, w, h) {
          cov_bmbwg9cbs.f[1]++;
          cov_bmbwg9cbs.s[5]++;
          return this._renderEllipse.apply(this, arguments);
        }; // internal method for drawing ellipses (without parameter validation)
        cov_bmbwg9cbs.s[6]++;
        _main.default.prototype._renderEllipse = function (x, y, w, h) {
          cov_bmbwg9cbs.f[2]++;
          cov_bmbwg9cbs.s[7]++;
          // if the current stroke and fill settings wouldn't result in something
          // visible, exit immediately
          if ((cov_bmbwg9cbs.b[3][0]++, !this._renderer._doStroke) && (cov_bmbwg9cbs.b[3][1]++, !this._renderer._doFill)) {
            cov_bmbwg9cbs.b[2][0]++;
            cov_bmbwg9cbs.s[8]++;
            return this;
          } else {
            cov_bmbwg9cbs.b[2][1]++;
          } // p5sound supports negative width and heights for rects

          cov_bmbwg9cbs.s[9]++;
          if (w < 0) {
            cov_bmbwg9cbs.b[4][0]++;
            cov_bmbwg9cbs.s[10]++;
            w = Math.abs(w);
          } else {
            cov_bmbwg9cbs.b[4][1]++;
          }
          cov_bmbwg9cbs.s[11]++;
          if (h < 0) {
            cov_bmbwg9cbs.b[5][0]++;
            cov_bmbwg9cbs.s[12]++;
            h = Math.abs(h);
          } else {
            cov_bmbwg9cbs.b[5][1]++;
          }
          cov_bmbwg9cbs.s[13]++;
          this._renderer.ellipse([x,
          y,
          w,
          h]);
          cov_bmbwg9cbs.s[14]++;
          return this;
        };
        var _default = (cov_bmbwg9cbs.s[15]++, _main.default);
        cov_bmbwg9cbs.s[16]++;
        exports.default = _default;
      },
      {
        '../main': 148
      }
    ],
    155: [
      function (_dereq_, module, exports) {
        'use strict';
        var cov_ed6gwtmoy = function () {
          var path = '/Users/montoyamoraga/github/processing/p5.sound.js/src/core/shape/attributes.js';
          var hash = '1fb6a4db93275be121ba0ccedb840061555fa150';
          var global = new Function('return this') ();
          var gcv = '__coverage__';
          var coverageData = {
            path: '/Users/montoyamoraga/github/processing/p5.sound.js/src/core/shape/attributes.js',
            statementMap: {
              '0': {
                start: {
                  line: 3,
                  column: 24
                },
                end: {
                  line: 3,
                  column: 328
                }
              },
              '1': {
                start: {
                  line: 3,
                  column: 99
                },
                end: {
                  line: 3,
                  column: 154
                }
              },
              '2': {
                start: {
                  line: 3,
                  column: 133
                },
                end: {
                  line: 3,
                  column: 151
                }
              },
              '3': {
                start: {
                  line: 3,
                  column: 164
                },
                end: {
                  line: 3,
                  column: 326
                }
              },
              '4': {
                start: {
                  line: 3,
                  column: 198
                },
                end: {
                  line: 3,
                  column: 323
                }
              },
              '5': {
                start: {
                  line: 3,
                  column: 329
                },
                end: {
                  line: 3,
                  column: 349
                }
              },
              '6': {
                start: {
                  line: 5,
                  column: 0
                },
                end: {
                  line: 7,
                  column: 3
                }
              },
              '7': {
                start: {
                  line: 8,
                  column: 0
                },
                end: {
                  line: 8,
                  column: 25
                }
              },
              '8': {
                start: {
                  line: 10,
                  column: 12
                },
                end: {
                  line: 10,
                  column: 54
                }
              },
              '9': {
                start: {
                  line: 12,
                  column: 16
                },
                end: {
                  line: 12,
                  column: 64
                }
              },
              '10': {
                start: {
                  line: 14,
                  column: 38
                },
                end: {
                  line: 14,
                  column: 85
                }
              },
              '11': {
                start: {
                  line: 14,
                  column: 73
                },
                end: {
                  line: 14,
                  column: 85
                }
              },
              '12': {
                start: {
                  line: 14,
                  column: 98
                },
                end: {
                  line: 14,
                  column: 111
                }
              },
              '13': {
                start: {
                  line: 14,
                  column: 113
                },
                end: {
                  line: 14,
                  column: 194
                }
              },
              '14': {
                start: {
                  line: 14,
                  column: 178
                },
                end: {
                  line: 14,
                  column: 191
                }
              },
              '15': {
                start: {
                  line: 14,
                  column: 195
                },
                end: {
                  line: 14,
                  column: 208
                }
              },
              '16': {
                start: {
                  line: 16,
                  column: 40
                },
                end: {
                  line: 16,
                  column: 82
                }
              },
              '17': {
                start: {
                  line: 16,
                  column: 69
                },
                end: {
                  line: 16,
                  column: 80
                }
              },
              '18': {
                start: {
                  line: 16,
                  column: 83
                },
                end: {
                  line: 16,
                  column: 187
                }
              },
              '19': {
                start: {
                  line: 16,
                  column: 161
                },
                end: {
                  line: 16,
                  column: 185
                }
              },
              '20': {
                start: {
                  line: 16,
                  column: 200
                },
                end: {
                  line: 16,
                  column: 226
                }
              },
              '21': {
                start: {
                  line: 16,
                  column: 228
                },
                end: {
                  line: 16,
                  column: 283
                }
              },
              '22': {
                start: {
                  line: 16,
                  column: 259
                },
                end: {
                  line: 16,
                  column: 281
                }
              },
              '23': {
                start: {
                  line: 16,
                  column: 297
                },
                end: {
                  line: 16,
                  column: 299
                }
              },
              '24': {
                start: {
                  line: 16,
                  column: 329
                },
                end: {
                  line: 16,
                  column: 385
                }
              },
              '25': {
                start: {
                  line: 16,
                  column: 387
                },
                end: {
                  line: 16,
                  column: 667
                }
              },
              '26': {
                start: {
                  line: 16,
                  column: 410
                },
                end: {
                  line: 16,
                  column: 665
                }
              },
              '27': {
                start: {
                  line: 16,
                  column: 475
                },
                end: {
                  line: 16,
                  column: 547
                }
              },
              '28': {
                start: {
                  line: 16,
                  column: 549
                },
                end: {
                  line: 16,
                  column: 663
                }
              },
              '29': {
                start: {
                  line: 16,
                  column: 587
                },
                end: {
                  line: 16,
                  column: 628
                }
              },
              '30': {
                start: {
                  line: 16,
                  column: 638
                },
                end: {
                  line: 16,
                  column: 661
                }
              },
              '31': {
                start: {
                  line: 16,
                  column: 668
                },
                end: {
                  line: 16,
                  column: 689
                }
              },
              '32': {
                start: {
                  line: 16,
                  column: 690
                },
                end: {
                  line: 16,
                  column: 728
                }
              },
              '33': {
                start: {
                  line: 16,
                  column: 703
                },
                end: {
                  line: 16,
                  column: 726
                }
              },
              '34': {
                start: {
                  line: 16,
                  column: 729
                },
                end: {
                  line: 16,
                  column: 743
                }
              },
              '35': {
                start: {
                  line: 18,
                  column: 39
                },
                end: {
                  line: 18,
                  column: 93
                }
              },
              '36': {
                start: {
                  line: 76,
                  column: 0
                },
                end: {
                  line: 82,
                  column: 2
                }
              },
              '37': {
                start: {
                  line: 77,
                  column: 2
                },
                end: {
                  line: 79,
                  column: 3
                }
              },
              '38': {
                start: {
                  line: 78,
                  column: 4
                },
                end: {
                  line: 78,
                  column: 36
                }
              },
              '39': {
                start: {
                  line: 81,
                  column: 2
                },
                end: {
                  line: 81,
                  column: 14
                }
              },
              '40': {
                start: {
                  line: 109,
                  column: 0
                },
                end: {
                  line: 119,
                  column: 2
                }
              },
              '41': {
                start: {
                  line: 110,
                  column: 2
                },
                end: {
                  line: 116,
                  column: 3
                }
              },
              '42': {
                start: {
                  line: 111,
                  column: 4
                },
                end: {
                  line: 113,
                  column: 5
                }
              },
              '43': {
                start: {
                  line: 112,
                  column: 6
                },
                end: {
                  line: 112,
                  column: 56
                }
              },
              '44': {
                start: {
                  line: 115,
                  column: 4
                },
                end: {
                  line: 115,
                  column: 43
                }
              },
              '45': {
                start: {
                  line: 118,
                  column: 2
                },
                end: {
                  line: 118,
                  column: 14
                }
              },
              '46': {
                start: {
                  line: 175,
                  column: 0
                },
                end: {
                  line: 181,
                  column: 2
                }
              },
              '47': {
                start: {
                  line: 176,
                  column: 2
                },
                end: {
                  line: 178,
                  column: 3
                }
              },
              '48': {
                start: {
                  line: 177,
                  column: 4
                },
                end: {
                  line: 177,
                  column: 33
                }
              },
              '49': {
                start: {
                  line: 180,
                  column: 2
                },
                end: {
                  line: 180,
                  column: 14
                }
              },
              '50': {
                start: {
                  line: 209,
                  column: 0
                },
                end: {
                  line: 219,
                  column: 2
                }
              },
              '51': {
                start: {
                  line: 210,
                  column: 2
                },
                end: {
                  line: 210,
                  column: 40
                }
              },
              '52': {
                start: {
                  line: 212,
                  column: 2
                },
                end: {
                  line: 216,
                  column: 3
                }
              },
              '53': {
                start: {
                  line: 213,
                  column: 4
                },
                end: {
                  line: 215,
                  column: 5
                }
              },
              '54': {
                start: {
                  line: 214,
                  column: 6
                },
                end: {
                  line: 214,
                  column: 55
                }
              },
              '55': {
                start: {
                  line: 218,
                  column: 2
                },
                end: {
                  line: 218,
                  column: 14
                }
              },
              '56': {
                start: {
                  line: 248,
                  column: 0
                },
                end: {
                  line: 254,
                  column: 2
                }
              },
              '57': {
                start: {
                  line: 249,
                  column: 2
                },
                end: {
                  line: 251,
                  column: 3
                }
              },
              '58': {
                start: {
                  line: 250,
                  column: 4
                },
                end: {
                  line: 250,
                  column: 34
                }
              },
              '59': {
                start: {
                  line: 253,
                  column: 2
                },
                end: {
                  line: 253,
                  column: 14
                }
              },
              '60': {
                start: {
                  line: 312,
                  column: 0
                },
                end: {
                  line: 318,
                  column: 2
                }
              },
              '61': {
                start: {
                  line: 313,
                  column: 2
                },
                end: {
                  line: 315,
                  column: 3
                }
              },
              '62': {
                start: {
                  line: 314,
                  column: 4
                },
                end: {
                  line: 314,
                  column: 36
                }
              },
              '63': {
                start: {
                  line: 317,
                  column: 2
                },
                end: {
                  line: 317,
                  column: 14
                }
              },
              '64': {
                start: {
                  line: 358,
                  column: 0
                },
                end: {
                  line: 362,
                  column: 2
                }
              },
              '65': {
                start: {
                  line: 359,
                  column: 2
                },
                end: {
                  line: 359,
                  column: 33
                }
              },
              '66': {
                start: {
                  line: 361,
                  column: 2
                },
                end: {
                  line: 361,
                  column: 14
                }
              },
              '67': {
                start: {
                  line: 364,
                  column: 15
                },
                end: {
                  line: 364,
                  column: 28
                }
              },
              '68': {
                start: {
                  line: 365,
                  column: 0
                },
                end: {
                  line: 365,
                  column: 27
                }
              }
            },
            fnMap: {
              '0': {
                name: '_typeof',
                decl: {
                  start: {
                    line: 3,
                    column: 9
                  },
                  end: {
                    line: 3,
                    column: 16
                  }
                },
                loc: {
                  start: {
                    line: 3,
                    column: 22
                  },
                  end: {
                    line: 3,
                    column: 351
                  }
                },
                line: 3
              },
              '1': {
                name: '_typeof',
                decl: {
                  start: {
                    line: 3,
                    column: 118
                  },
                  end: {
                    line: 3,
                    column: 125
                  }
                },
                loc: {
                  start: {
                    line: 3,
                    column: 131
                  },
                  end: {
                    line: 3,
                    column: 153
                  }
                },
                line: 3
              },
              '2': {
                name: '_typeof',
                decl: {
                  start: {
                    line: 3,
                    column: 183
                  },
                  end: {
                    line: 3,
                    column: 190
                  }
                },
                loc: {
                  start: {
                    line: 3,
                    column: 196
                  },
                  end: {
                    line: 3,
                    column: 325
                  }
                },
                line: 3
              },
              '3': {
                name: '_getRequireWildcardCache',
                decl: {
                  start: {
                    line: 14,
                    column: 9
                  },
                  end: {
                    line: 14,
                    column: 33
                  }
                },
                loc: {
                  start: {
                    line: 14,
                    column: 36
                  },
                  end: {
                    line: 14,
                    column: 210
                  }
                },
                line: 14
              },
              '4': {
                name: '_getRequireWildcardCache',
                decl: {
                  start: {
                    line: 14,
                    column: 149
                  },
                  end: {
                    line: 14,
                    column: 173
                  }
                },
                loc: {
                  start: {
                    line: 14,
                    column: 176
                  },
                  end: {
                    line: 14,
                    column: 193
                  }
                },
                line: 14
              },
              '5': {
                name: '_interopRequireWildcard',
                decl: {
                  start: {
                    line: 16,
                    column: 9
                  },
                  end: {
                    line: 16,
                    column: 32
                  }
                },
                loc: {
                  start: {
                    line: 16,
                    column: 38
                  },
                  end: {
                    line: 16,
                    column: 745
                  }
                },
                line: 16
              },
              '6': {
                name: '_interopRequireDefault',
                decl: {
                  start: {
                    line: 18,
                    column: 9
                  },
                  end: {
                    line: 18,
                    column: 31
                  }
                },
                loc: {
                  start: {
                    line: 18,
                    column: 37
                  },
                  end: {
                    line: 18,
                    column: 95
                  }
                },
                line: 18
              },
              '7': {
                name: '(anonymous_7)',
                decl: {
                  start: {
                    line: 76,
                    column: 38
                  },
                  end: {
                    line: 76,
                    column: 39
                  }
                },
                loc: {
                  start: {
                    line: 76,
                    column: 51
                  },
                  end: {
                    line: 82,
                    column: 1
                  }
                },
                line: 76
              },
              '8': {
                name: '(anonymous_8)',
                decl: {
                  start: {
                    line: 109,
                    column: 35
                  },
                  end: {
                    line: 109,
                    column: 36
                  }
                },
                loc: {
                  start: {
                    line: 109,
                    column: 47
                  },
                  end: {
                    line: 119,
                    column: 1
                  }
                },
                line: 109
              },
              '9': {
                name: '(anonymous_9)',
                decl: {
                  start: {
                    line: 175,
                    column: 35
                  },
                  end: {
                    line: 175,
                    column: 36
                  }
                },
                loc: {
                  start: {
                    line: 175,
                    column: 48
                  },
                  end: {
                    line: 181,
                    column: 1
                  }
                },
                line: 175
              },
              '10': {
                name: '(anonymous_10)',
                decl: {
                  start: {
                    line: 209,
                    column: 33
                  },
                  end: {
                    line: 209,
                    column: 34
                  }
                },
                loc: {
                  start: {
                    line: 209,
                    column: 45
                  },
                  end: {
                    line: 219,
                    column: 1
                  }
                },
                line: 209
              },
              '11': {
                name: '(anonymous_11)',
                decl: {
                  start: {
                    line: 248,
                    column: 36
                  },
                  end: {
                    line: 248,
                    column: 37
                  }
                },
                loc: {
                  start: {
                    line: 248,
                    column: 51
                  },
                  end: {
                    line: 254,
                    column: 1
                  }
                },
                line: 248
              },
              '12': {
                name: '(anonymous_12)',
                decl: {
                  start: {
                    line: 312,
                    column: 37
                  },
                  end: {
                    line: 312,
                    column: 38
                  }
                },
                loc: {
                  start: {
                    line: 312,
                    column: 53
                  },
                  end: {
                    line: 318,
                    column: 1
                  }
                },
                line: 312
              },
              '13': {
                name: '(anonymous_13)',
                decl: {
                  start: {
                    line: 358,
                    column: 39
                  },
                  end: {
                    line: 358,
                    column: 40
                  }
                },
                loc: {
                  start: {
                    line: 358,
                    column: 52
                  },
                  end: {
                    line: 362,
                    column: 1
                  }
                },
                line: 358
              }
            },
            branchMap: {
              '0': {
                loc: {
                  start: {
                    line: 3,
                    column: 24
                  },
                  end: {
                    line: 3,
                    column: 328
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 3,
                      column: 24
                    },
                    end: {
                      line: 3,
                      column: 328
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 24
                    },
                    end: {
                      line: 3,
                      column: 328
                    }
                  }
                ],
                line: 3
              },
              '1': {
                loc: {
                  start: {
                    line: 3,
                    column: 28
                  },
                  end: {
                    line: 3,
                    column: 95
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 3,
                      column: 28
                    },
                    end: {
                      line: 3,
                      column: 56
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 60
                    },
                    end: {
                      line: 3,
                      column: 95
                    }
                  }
                ],
                line: 3
              },
              '2': {
                loc: {
                  start: {
                    line: 3,
                    column: 205
                  },
                  end: {
                    line: 3,
                    column: 322
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 3,
                      column: 301
                    },
                    end: {
                      line: 3,
                      column: 309
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 312
                    },
                    end: {
                      line: 3,
                      column: 322
                    }
                  }
                ],
                line: 3
              },
              '3': {
                loc: {
                  start: {
                    line: 3,
                    column: 205
                  },
                  end: {
                    line: 3,
                    column: 298
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 3,
                      column: 205
                    },
                    end: {
                      line: 3,
                      column: 208
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 212
                    },
                    end: {
                      line: 3,
                      column: 240
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 244
                    },
                    end: {
                      line: 3,
                      column: 270
                    }
                  },
                  {
                    start: {
                      line: 3,
                      column: 274
                    },
                    end: {
                      line: 3,
                      column: 298
                    }
                  }
                ],
                line: 3
              },
              '4': {
                loc: {
                  start: {
                    line: 14,
                    column: 38
                  },
                  end: {
                    line: 14,
                    column: 85
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 14,
                      column: 38
                    },
                    end: {
                      line: 14,
                      column: 85
                    }
                  },
                  {
                    start: {
                      line: 14,
                      column: 38
                    },
                    end: {
                      line: 14,
                      column: 85
                    }
                  }
                ],
                line: 14
              },
              '5': {
                loc: {
                  start: {
                    line: 16,
                    column: 40
                  },
                  end: {
                    line: 16,
                    column: 82
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 16,
                      column: 40
                    },
                    end: {
                      line: 16,
                      column: 82
                    }
                  },
                  {
                    start: {
                      line: 16,
                      column: 40
                    },
                    end: {
                      line: 16,
                      column: 82
                    }
                  }
                ],
                line: 16
              },
              '6': {
                loc: {
                  start: {
                    line: 16,
                    column: 44
                  },
                  end: {
                    line: 16,
                    column: 65
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 16,
                      column: 44
                    },
                    end: {
                      line: 16,
                      column: 47
                    }
                  },
                  {
                    start: {
                      line: 16,
                      column: 51
                    },
                    end: {
                      line: 16,
                      column: 65
                    }
                  }
                ],
                line: 16
              },
              '7': {
                loc: {
                  start: {
                    line: 16,
                    column: 83
                  },
                  end: {
                    line: 16,
                    column: 187
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 16,
                      column: 83
                    },
                    end: {
                      line: 16,
                      column: 187
                    }
                  },
                  {
                    start: {
                      line: 16,
                      column: 83
                    },
                    end: {
                      line: 16,
                      column: 187
                    }
                  }
                ],
                line: 16
              },
              '8': {
                loc: {
                  start: {
                    line: 16,
                    column: 87
                  },
                  end: {
                    line: 16,
                    column: 157
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 16,
                      column: 87
                    },
                    end: {
                      line: 16,
                      column: 99
                    }
                  },
                  {
                    start: {
                      line: 16,
                      column: 103
                    },
                    end: {
                      line: 16,
                      column: 128
                    }
                  },
                  {
                    start: {
                      line: 16,
                      column: 132
                    },
                    end: {
                      line: 16,
                      column: 157
                    }
                  }
                ],
                line: 16
              },
              '9': {
                loc: {
                  start: {
                    line: 16,
                    column: 228
                  },
                  end: {
                    line: 16,
                    column: 283
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 16,
                      column: 228
                    },
                    end: {
                      line: 16,
                      column: 283
                    }
                  },
                  {
                    start: {
                      line: 16,
                      column: 228
                    },
                    end: {
                      line: 16,
                      column: 283
                    }
                  }
                ],
                line: 16
              },
              '10': {
                loc: {
                  start: {
                    line: 16,
                    column: 232
                  },
                  end: {
                    line: 16,
                    column: 255
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 16,
                      column: 232
                    },
                    end: {
                      line: 16,
                      column: 237
                    }
                  },
                  {
                    start: {
                      line: 16,
                      column: 241
                    },
                    end: {
                      line: 16,
                      column: 255
                    }
                  }
                ],
                line: 16
              },
              '11': {
                loc: {
                  start: {
                    line: 16,
                    column: 329
                  },
                  end: {
                    line: 16,
                    column: 385
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 16,
                      column: 329
                    },
                    end: {
                      line: 16,
                      column: 350
                    }
                  },
                  {
                    start: {
                      line: 16,
                      column: 354
                    },
                    end: {
                      line: 16,
                      column: 385
                    }
                  }
                ],
                line: 16
              },
              '12': {
                loc: {
                  start: {
                    line: 16,
                    column: 410
                  },
                  end: {
                    line: 16,
                    column: 665
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 16,
                      column: 410
                    },
                    end: {
                      line: 16,
                      column: 665
                    }
                  },
                  {
                    start: {
                      line: 16,
                      column: 410
                    },
                    end: {
                      line: 16,
                      column: 665
                    }
                  }
                ],
                line: 16
              },
              '13': {
                loc: {
                  start: {
                    line: 16,
                    column: 475
                  },
                  end: {
                    line: 16,
                    column: 547
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 16,
                      column: 499
                    },
                    end: {
                      line: 16,
                      column: 540
                    }
                  },
                  {
                    start: {
                      line: 16,
                      column: 543
                    },
                    end: {
                      line: 16,
                      column: 547
                    }
                  }
                ],
                line: 16
              },
              '14': {
                loc: {
                  start: {
                    line: 16,
                    column: 549
                  },
                  end: {
                    line: 16,
                    column: 663
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 16,
                      column: 549
                    },
                    end: {
                      line: 16,
                      column: 663
                    }
                  },
                  {
                    start: {
                      line: 16,
                      column: 549
                    },
                    end: {
                      line: 16,
                      column: 663
                    }
                  }
                ],
                line: 16
              },
              '15': {
                loc: {
                  start: {
                    line: 16,
                    column: 553
                  },
                  end: {
                    line: 16,
                    column: 583
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 16,
                      column: 553
                    },
                    end: {
                      line: 16,
                      column: 557
                    }
                  },
                  {
                    start: {
                      line: 16,
                      column: 562
                    },
                    end: {
                      line: 16,
                      column: 570
                    }
                  },
                  {
                    start: {
                      line: 16,
                      column: 574
                    },
                    end: {
                      line: 16,
                      column: 582
                    }
                  }
                ],
                line: 16
              },
              '16': {
                loc: {
                  start: {
                    line: 16,
                    column: 690
                  },
                  end: {
                    line: 16,
                    column: 728
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 16,
                      column: 690
                    },
                    end: {
                      line: 16,
                      column: 728
                    }
                  },
                  {
                    start: {
                      line: 16,
                      column: 690
                    },
                    end: {
                      line: 16,
                      column: 728
                    }
                  }
                ],
                line: 16
              },
              '17': {
                loc: {
                  start: {
                    line: 18,
                    column: 46
                  },
                  end: {
                    line: 18,
                    column: 92
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 18,
                      column: 70
                    },
                    end: {
                      line: 18,
                      column: 73
                    }
                  },
                  {
                    start: {
                      line: 18,
                      column: 76
                    },
                    end: {
                      line: 18,
                      column: 92
                    }
                  }
                ],
                line: 18
              },
              '18': {
                loc: {
                  start: {
                    line: 18,
                    column: 46
                  },
                  end: {
                    line: 18,
                    column: 67
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 18,
                      column: 46
                    },
                    end: {
                      line: 18,
                      column: 49
                    }
                  },
                  {
                    start: {
                      line: 18,
                      column: 53
                    },
                    end: {
                      line: 18,
                      column: 67
                    }
                  }
                ],
                line: 18
              },
              '19': {
                loc: {
                  start: {
                    line: 77,
                    column: 2
                  },
                  end: {
                    line: 79,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 77,
                      column: 2
                    },
                    end: {
                      line: 79,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 77,
                      column: 2
                    },
                    end: {
                      line: 79,
                      column: 3
                    }
                  }
                ],
                line: 77
              },
              '20': {
                loc: {
                  start: {
                    line: 77,
                    column: 6
                  },
                  end: {
                    line: 77,
                    column: 107
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 77,
                      column: 6
                    },
                    end: {
                      line: 77,
                      column: 28
                    }
                  },
                  {
                    start: {
                      line: 77,
                      column: 32
                    },
                    end: {
                      line: 77,
                      column: 55
                    }
                  },
                  {
                    start: {
                      line: 77,
                      column: 59
                    },
                    end: {
                      line: 77,
                      column: 81
                    }
                  },
                  {
                    start: {
                      line: 77,
                      column: 85
                    },
                    end: {
                      line: 77,
                      column: 107
                    }
                  }
                ],
                line: 77
              },
              '21': {
                loc: {
                  start: {
                    line: 110,
                    column: 2
                  },
                  end: {
                    line: 116,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 110,
                      column: 2
                    },
                    end: {
                      line: 116,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 110,
                      column: 2
                    },
                    end: {
                      line: 116,
                      column: 3
                    }
                  }
                ],
                line: 110
              },
              '22': {
                loc: {
                  start: {
                    line: 111,
                    column: 4
                  },
                  end: {
                    line: 113,
                    column: 5
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 111,
                      column: 4
                    },
                    end: {
                      line: 113,
                      column: 5
                    }
                  },
                  {
                    start: {
                      line: 111,
                      column: 4
                    },
                    end: {
                      line: 113,
                      column: 5
                    }
                  }
                ],
                line: 111
              },
              '23': {
                loc: {
                  start: {
                    line: 176,
                    column: 2
                  },
                  end: {
                    line: 178,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 176,
                      column: 2
                    },
                    end: {
                      line: 178,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 176,
                      column: 2
                    },
                    end: {
                      line: 178,
                      column: 3
                    }
                  }
                ],
                line: 176
              },
              '24': {
                loc: {
                  start: {
                    line: 176,
                    column: 6
                  },
                  end: {
                    line: 176,
                    column: 107
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 176,
                      column: 6
                    },
                    end: {
                      line: 176,
                      column: 28
                    }
                  },
                  {
                    start: {
                      line: 176,
                      column: 32
                    },
                    end: {
                      line: 176,
                      column: 55
                    }
                  },
                  {
                    start: {
                      line: 176,
                      column: 59
                    },
                    end: {
                      line: 176,
                      column: 81
                    }
                  },
                  {
                    start: {
                      line: 176,
                      column: 85
                    },
                    end: {
                      line: 176,
                      column: 107
                    }
                  }
                ],
                line: 176
              },
              '25': {
                loc: {
                  start: {
                    line: 212,
                    column: 2
                  },
                  end: {
                    line: 216,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 212,
                      column: 2
                    },
                    end: {
                      line: 216,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 212,
                      column: 2
                    },
                    end: {
                      line: 216,
                      column: 3
                    }
                  }
                ],
                line: 212
              },
              '26': {
                loc: {
                  start: {
                    line: 213,
                    column: 4
                  },
                  end: {
                    line: 215,
                    column: 5
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 213,
                      column: 4
                    },
                    end: {
                      line: 215,
                      column: 5
                    }
                  },
                  {
                    start: {
                      line: 213,
                      column: 4
                    },
                    end: {
                      line: 215,
                      column: 5
                    }
                  }
                ],
                line: 213
              },
              '27': {
                loc: {
                  start: {
                    line: 249,
                    column: 2
                  },
                  end: {
                    line: 251,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 249,
                      column: 2
                    },
                    end: {
                      line: 251,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 249,
                      column: 2
                    },
                    end: {
                      line: 251,
                      column: 3
                    }
                  }
                ],
                line: 249
              },
              '28': {
                loc: {
                  start: {
                    line: 249,
                    column: 6
                  },
                  end: {
                    line: 249,
                    column: 86
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 249,
                      column: 6
                    },
                    end: {
                      line: 249,
                      column: 29
                    }
                  },
                  {
                    start: {
                      line: 249,
                      column: 33
                    },
                    end: {
                      line: 249,
                      column: 57
                    }
                  },
                  {
                    start: {
                      line: 249,
                      column: 61
                    },
                    end: {
                      line: 249,
                      column: 86
                    }
                  }
                ],
                line: 249
              },
              '29': {
                loc: {
                  start: {
                    line: 313,
                    column: 2
                  },
                  end: {
                    line: 315,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 313,
                      column: 2
                    },
                    end: {
                      line: 315,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 313,
                      column: 2
                    },
                    end: {
                      line: 315,
                      column: 3
                    }
                  }
                ],
                line: 313
              },
              '30': {
                loc: {
                  start: {
                    line: 313,
                    column: 6
                  },
                  end: {
                    line: 313,
                    column: 86
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 313,
                      column: 6
                    },
                    end: {
                      line: 313,
                      column: 30
                    }
                  },
                  {
                    start: {
                      line: 313,
                      column: 34
                    },
                    end: {
                      line: 313,
                      column: 58
                    }
                  },
                  {
                    start: {
                      line: 313,
                      column: 62
                    },
                    end: {
                      line: 313,
                      column: 86
                    }
                  }
                ],
                line: 313
              }
            },
            s: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0,
              '10': 0,
              '11': 0,
              '12': 0,
              '13': 0,
              '14': 0,
              '15': 0,
              '16': 0,
              '17': 0,
              '18': 0,
              '19': 0,
              '20': 0,
              '21': 0,
              '22': 0,
              '23': 0,
              '24': 0,
              '25': 0,
              '26': 0,
              '27': 0,
              '28': 0,
              '29': 0,
              '30': 0,
              '31': 0,
              '32': 0,
              '33': 0,
              '34': 0,
              '35': 0,
              '36': 0,
              '37': 0,
              '38': 0,
              '39': 0,
              '40': 0,
              '41': 0,
              '42': 0,
              '43': 0,
              '44': 0,
              '45': 0,
              '46': 0,
              '47': 0,
              '48': 0,
              '49': 0,
              '50': 0,
              '51': 0,
              '52': 0,
              '53': 0,
              '54': 0,
              '55': 0,
              '56': 0,
              '57': 0,
              '58': 0,
              '59': 0,
              '60': 0,
              '61': 0,
              '62': 0,
              '63': 0,
              '64': 0,
              '65': 0,
              '66': 0,
              '67': 0,
              '68': 0
            },
            f: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0,
              '10': 0,
              '11': 0,
              '12': 0,
              '13': 0
            },
            b: {
              '0': [
                0,
                0
              ],
              '1': [
                0,
                0
              ],
              '2': [
                0,
                0
              ],
              '3': [
                0,
                0,
                0,
                0
              ],
              '4': [
                0,
                0
              ],
              '5': [
                0,
                0
              ],
              '6': [
                0,
                0
              ],
              '7': [
                0,
                0
              ],
              '8': [
                0,
                0,
                0
              ],
              '9': [
                0,
                0
              ],
              '10': [
                0,
                0
              ],
              '11': [
                0,
                0
              ],
              '12': [
                0,
                0
              ],
              '13': [
                0,
                0
              ],
              '14': [
                0,
                0
              ],
              '15': [
                0,
                0,
                0
              ],
              '16': [
                0,
                0
              ],
              '17': [
                0,
                0
              ],
              '18': [
                0,
                0
              ],
              '19': [
                0,
                0
              ],
              '20': [
                0,
                0,
                0,
                0
              ],
              '21': [
                0,
                0
              ],
              '22': [
                0,
                0
              ],
              '23': [
                0,
                0
              ],
              '24': [
                0,
                0,
                0,
                0
              ],
              '25': [
                0,
                0
              ],
              '26': [
                0,
                0
              ],
              '27': [
                0,
                0
              ],
              '28': [
                0,
                0,
                0
              ],
              '29': [
                0,
                0
              ],
              '30': [
                0,
                0,
                0
              ]
            },
            _coverageSchema: '43e27e138ebf9cfc5966b082cf9a028302ed4184',
            hash: '1fb6a4db93275be121ba0ccedb840061555fa150'
          };
          var coverage = global[gcv] || (global[gcv] = {
          });
          if (coverage[path] && coverage[path].hash === hash) {
            return coverage[path];
          }
          return coverage[path] = coverageData;
        }();
        _dereq_('core-js/modules/es.symbol');
        _dereq_('core-js/modules/es.symbol.description');
        _dereq_('core-js/modules/es.symbol.iterator');
        _dereq_('core-js/modules/es.array.iterator');
        _dereq_('core-js/modules/es.object.get-own-property-descriptor');
        _dereq_('core-js/modules/es.object.to-string');
        _dereq_('core-js/modules/es.string.iterator');
        _dereq_('core-js/modules/es.weak-map');
        _dereq_('core-js/modules/web.dom-collections.iterator');
        function _typeof2(obj) {
          if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {
            _typeof2 = function _typeof2(obj) {
              return typeof obj;
            };
          } else {
            _typeof2 = function _typeof2(obj) {
              return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;
            };
          }
          return _typeof2(obj);
        }
        function _typeof(obj) {
          cov_ed6gwtmoy.f[0]++;
          cov_ed6gwtmoy.s[0]++;
          if ((cov_ed6gwtmoy.b[1][0]++, typeof Symbol === 'function') && (cov_ed6gwtmoy.b[1][1]++, _typeof2(Symbol.iterator) === 'symbol')) {
            cov_ed6gwtmoy.b[0][0]++;
            cov_ed6gwtmoy.s[1]++;
            _typeof = function _typeof(obj) {
              cov_ed6gwtmoy.f[1]++;
              cov_ed6gwtmoy.s[2]++;
              return _typeof2(obj);
            };
          } else {
            cov_ed6gwtmoy.b[0][1]++;
            cov_ed6gwtmoy.s[3]++;
            _typeof = function _typeof(obj) {
              cov_ed6gwtmoy.f[2]++;
              cov_ed6gwtmoy.s[4]++;
              return (cov_ed6gwtmoy.b[3][0]++, obj) && (cov_ed6gwtmoy.b[3][1]++, typeof Symbol === 'function') && (cov_ed6gwtmoy.b[3][2]++, obj.constructor === Symbol) && (cov_ed6gwtmoy.b[3][3]++, obj !== Symbol.prototype) ? (cov_ed6gwtmoy.b[2][0]++, 'symbol') : (cov_ed6gwtmoy.b[2][1]++, _typeof2(obj));
            };
          }
          cov_ed6gwtmoy.s[5]++;
          return _typeof(obj);
        }
        cov_ed6gwtmoy.s[6]++;
        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        cov_ed6gwtmoy.s[7]++;
        exports.default = void 0;
        var _main = (cov_ed6gwtmoy.s[8]++, _interopRequireDefault(_dereq_('../main')));
        var constants = (cov_ed6gwtmoy.s[9]++, _interopRequireWildcard(_dereq_('../constants')));
        function _getRequireWildcardCache() {
          cov_ed6gwtmoy.f[3]++;
          cov_ed6gwtmoy.s[10]++;
          if (typeof WeakMap !== 'function') {
            cov_ed6gwtmoy.b[4][0]++;
            cov_ed6gwtmoy.s[11]++;
            return null;
          } else {
            cov_ed6gwtmoy.b[4][1]++;
          }
          var cache = (cov_ed6gwtmoy.s[12]++, new WeakMap());
          cov_ed6gwtmoy.s[13]++;
          _getRequireWildcardCache = function _getRequireWildcardCache() {
            cov_ed6gwtmoy.f[4]++;
            cov_ed6gwtmoy.s[14]++;
            return cache;
          };
          cov_ed6gwtmoy.s[15]++;
          return cache;
        }
        function _interopRequireWildcard(obj) {
          cov_ed6gwtmoy.f[5]++;
          cov_ed6gwtmoy.s[16]++;
          if ((cov_ed6gwtmoy.b[6][0]++, obj) && (cov_ed6gwtmoy.b[6][1]++, obj.__esModule)) {
            cov_ed6gwtmoy.b[5][0]++;
            cov_ed6gwtmoy.s[17]++;
            return obj;
          } else {
            cov_ed6gwtmoy.b[5][1]++;
          }
          cov_ed6gwtmoy.s[18]++;
          if ((cov_ed6gwtmoy.b[8][0]++, obj === null) || (cov_ed6gwtmoy.b[8][1]++, _typeof(obj) !== 'object') && (cov_ed6gwtmoy.b[8][2]++, typeof obj !== 'function')) {
            cov_ed6gwtmoy.b[7][0]++;
            cov_ed6gwtmoy.s[19]++;
            return {
            default:
              obj
            };
          } else {
            cov_ed6gwtmoy.b[7][1]++;
          }
          var cache = (cov_ed6gwtmoy.s[20]++, _getRequireWildcardCache());
          cov_ed6gwtmoy.s[21]++;
          if ((cov_ed6gwtmoy.b[10][0]++, cache) && (cov_ed6gwtmoy.b[10][1]++, cache.has(obj))) {
            cov_ed6gwtmoy.b[9][0]++;
            cov_ed6gwtmoy.s[22]++;
            return cache.get(obj);
          } else {
            cov_ed6gwtmoy.b[9][1]++;
          }
          var newObj = (cov_ed6gwtmoy.s[23]++, {
          });
          var hasPropertyDescriptor = (cov_ed6gwtmoy.s[24]++, (cov_ed6gwtmoy.b[11][0]++, Object.defineProperty) && (cov_ed6gwtmoy.b[11][1]++, Object.getOwnPropertyDescriptor));
          cov_ed6gwtmoy.s[25]++;
          for (var key in obj) {
            cov_ed6gwtmoy.s[26]++;
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              cov_ed6gwtmoy.b[12][0]++;
              var desc = (cov_ed6gwtmoy.s[27]++, hasPropertyDescriptor ? (cov_ed6gwtmoy.b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) : (cov_ed6gwtmoy.b[13][1]++, null));
              cov_ed6gwtmoy.s[28]++;
              if ((cov_ed6gwtmoy.b[15][0]++, desc) && ((cov_ed6gwtmoy.b[15][1]++, desc.get) || (cov_ed6gwtmoy.b[15][2]++, desc.set))) {
                cov_ed6gwtmoy.b[14][0]++;
                cov_ed6gwtmoy.s[29]++;
                Object.defineProperty(newObj, key, desc);
              } else {
                cov_ed6gwtmoy.b[14][1]++;
                cov_ed6gwtmoy.s[30]++;
                newObj[key] = obj[key];
              }
            } else {
              cov_ed6gwtmoy.b[12][1]++;
            }
          }
          cov_ed6gwtmoy.s[31]++;
          newObj.default = obj;
          cov_ed6gwtmoy.s[32]++;
          if (cache) {
            cov_ed6gwtmoy.b[16][0]++;
            cov_ed6gwtmoy.s[33]++;
            cache.set(obj, newObj);
          } else {
            cov_ed6gwtmoy.b[16][1]++;
          }
          cov_ed6gwtmoy.s[34]++;
          return newObj;
        }
        function _interopRequireDefault(obj) {
          cov_ed6gwtmoy.f[6]++;
          cov_ed6gwtmoy.s[35]++;
          return (cov_ed6gwtmoy.b[18][0]++, obj) && (cov_ed6gwtmoy.b[18][1]++, obj.__esModule) ? (cov_ed6gwtmoy.b[17][0]++, obj) : (cov_ed6gwtmoy.b[17][1]++, {
          default:
            obj
          });
        }        /**
 * @module Shape
 * @submodule Attributes
 * @for p5
 * @requires core
 * @requires constants
 */
        /**
 * Modifies the location from which ellipses, circles, and arcs are drawn. By default, the
 * first two parameters are the x- and y-coordinates of the shape's center. The next
 * parameters are its width and height. This is equivalent to calling `ellipseMode(CENTER)`.
 *
 * `ellipseMode(RADIUS)` also uses the first two parameters to set the x- and y-coordinates
 * of the shape's center. The next parameters are half of the shapes's width and height.
 * Calling `ellipse(0, 0, 10, 15)` draws a shape with a width of 20 and height of 30.
 *
 * `ellipseMode(CORNER)` uses the first two parameters as the upper-left corner of the
 * shape. The next parameters are its width and height.
 *
 * `ellipseMode(CORNERS)` uses the first two parameters as the location of one corner
 * of the ellipse's bounding box. The third and fourth parameters are the location of the
 * opposite corner.
 *
 * The argument passed to `ellipseMode()` must be written in ALL CAPS because the constants
 * `CENTER`, `RADIUS`, `CORNER`, and `CORNERS` are defined this way. JavaScript is a
 * case-sensitive language.
 *
 * @method ellipseMode
 * @param  {Constant} mode either CENTER, RADIUS, CORNER, or CORNERS
 * @chainable
 * @example
 * <div>
 * <code>
 * ellipseMode(RADIUS);
 * fill(255);
 * ellipse(50, 50, 30, 30);
 * ellipseMode(CENTER);
 * fill(100);
 * ellipse(50, 50, 30, 30);
 * describe('A white circle with a gray circle at its center. Both circles have black outlines.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * ellipseMode(CORNER);
 * fill(255);
 * ellipse(25, 25, 50, 50);
 * ellipseMode(CORNERS);
 * fill(100);
 * ellipse(25, 25, 50, 50);
 * describe('A white circle with a gray circle at its top-left corner. Both circles have black outlines.');
 * </code>
 * </div>
 */

        cov_ed6gwtmoy.s[36]++;
        _main.default.prototype.ellipseMode = function (m) {
          cov_ed6gwtmoy.f[7]++;
          cov_ed6gwtmoy.s[37]++;
          if ((cov_ed6gwtmoy.b[20][0]++, m === constants.CORNER) || (cov_ed6gwtmoy.b[20][1]++, m === constants.CORNERS) || (cov_ed6gwtmoy.b[20][2]++, m === constants.RADIUS) || (cov_ed6gwtmoy.b[20][3]++, m === constants.CENTER)) {
            cov_ed6gwtmoy.b[19][0]++;
            cov_ed6gwtmoy.s[38]++;
            this._renderer._ellipseMode = m;
          } else {
            cov_ed6gwtmoy.b[19][1]++;
          }
          cov_ed6gwtmoy.s[39]++;
          return this;
        };
        /**
 * Draws all geometry with jagged (aliased) edges.
 *
 * <a href="#/p5/smooth">smooth()</a> is active by default in 2D mode. It's necessary to call
 * <a href="#/p5/noSmooth">noSmooth()</a> to disable smoothing of geometry, images, and fonts.
 *
 * In WebGL mode, <a href="#/p5/noSmooth">noSmooth()</a> is active by default. It's necessary
 * to call <a href="#/p5/smooth">smooth()</a> to draw smooth (antialiased) edges.
 *
 * @method noSmooth
 * @chainable
 * @example
 * <div>
 * <code>
 * background(0);
 * noStroke();
 * smooth();
 * ellipse(30, 48, 36, 36);
 * noSmooth();
 * ellipse(70, 48, 36, 36);
 * describe('Two pixelated white circles on a black background.');
 * </code>
 * </div>
 */
        cov_ed6gwtmoy.s[40]++;
        _main.default.prototype.noSmooth = function () {
          cov_ed6gwtmoy.f[8]++;
          cov_ed6gwtmoy.s[41]++;
          if (!this._renderer.isP3D) {
            cov_ed6gwtmoy.b[21][0]++;
            cov_ed6gwtmoy.s[42]++;
            if ('imageSmoothingEnabled' in this.drawingContext) {
              cov_ed6gwtmoy.b[22][0]++;
              cov_ed6gwtmoy.s[43]++;
              this.drawingContext.imageSmoothingEnabled = false;
            } else {
              cov_ed6gwtmoy.b[22][1]++;
            }
          } else {
            cov_ed6gwtmoy.b[21][1]++;
            cov_ed6gwtmoy.s[44]++;
            this.setAttributes('antialias', false);
          }
          cov_ed6gwtmoy.s[45]++;
          return this;
        };
        /**
 * Modifies the location from which rectangles and squares are drawn. By default,
 * the first two parameters are the x- and y-coordinates of the shape's upper-left
 * corner. The next parameters are its width and height. This is equivalent to
 * calling `rectMode(CORNER)`.
 *
 * `rectMode(CORNERS)` also uses the first two parameters as the location of one of
 * the corners. The third and fourth parameters are the location of the opposite
 * corner.
 *
 * `rectMode(CENTER)` uses the first two parameters as the x- and y-coordinates of
 * the shape's center. The next parameters are its width and height.
 *
 * `rectMode(RADIUS)` also uses the first two parameters as the x- and y-coordinates
 * of the shape's center. The next parameters are half of the shape's width and
 * height.
 *
 * The argument passed to `rectMode()` must be written in ALL CAPS because the
 * constants `CENTER`, `RADIUS`, `CORNER`, and `CORNERS` are defined this way.
 * JavaScript is a case-sensitive language.
 *
 * @method rectMode
 * @param  {Constant} mode either CORNER, CORNERS, CENTER, or RADIUS
 * @chainable
 * @example
 * <div>
 * <code>
 * rectMode(CORNER);
 * fill(255);
 * rect(25, 25, 50, 50);
 *
 * rectMode(CORNERS);
 * fill(100);
 * rect(25, 25, 50, 50);
 *
 * describe('A small gray square drawn at the top-left corner of a white square.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * rectMode(RADIUS);
 * fill(255);
 * rect(50, 50, 30, 30);
 *
 * rectMode(CENTER);
 * fill(100);
 * rect(50, 50, 30, 30);
 *
 * describe('A small gray square drawn at the center of a white square.');
 * </code>
 * </div>
 */
        cov_ed6gwtmoy.s[46]++;
        _main.default.prototype.rectMode = function (m) {
          cov_ed6gwtmoy.f[9]++;
          cov_ed6gwtmoy.s[47]++;
          if ((cov_ed6gwtmoy.b[24][0]++, m === constants.CORNER) || (cov_ed6gwtmoy.b[24][1]++, m === constants.CORNERS) || (cov_ed6gwtmoy.b[24][2]++, m === constants.RADIUS) || (cov_ed6gwtmoy.b[24][3]++, m === constants.CENTER)) {
            cov_ed6gwtmoy.b[23][0]++;
            cov_ed6gwtmoy.s[48]++;
            this._renderer._rectMode = m;
          } else {
            cov_ed6gwtmoy.b[23][1]++;
          }
          cov_ed6gwtmoy.s[49]++;
          return this;
        };
        /**
 * Draws all geometry with smooth (anti-aliased) edges. <a href="#/p5/smooth">smooth()</a> will also
 * improve image quality of resized images.
 *
 * <a href="#/p5/smooth">smooth()</a> is active by default in 2D mode. It's necessary to call
 * <a href="#/p5/noSmooth">noSmooth()</a> to disable smoothing of geometry, images, and fonts.
 *
 * In WebGL mode, <a href="#/p5/noSmooth">noSmooth()</a> is active by default. It's necessary
 * to call <a href="#/p5/smooth">smooth()</a> to draw smooth (antialiased) edges.
 *
 * @method smooth
 * @chainable
 * @example
 * <div>
 * <code>
 * background(0);
 * noStroke();
 * smooth();
 * ellipse(30, 48, 36, 36);
 * noSmooth();
 * ellipse(70, 48, 36, 36);
 * describe('Two pixelated white circles on a black background.');
 * </code>
 * </div>
 */
        cov_ed6gwtmoy.s[50]++;
        _main.default.prototype.smooth = function () {
          cov_ed6gwtmoy.f[10]++;
          cov_ed6gwtmoy.s[51]++;
          this.setAttributes('antialias', true);
          cov_ed6gwtmoy.s[52]++;
          if (!this._renderer.isP3D) {
            cov_ed6gwtmoy.b[25][0]++;
            cov_ed6gwtmoy.s[53]++;
            if ('imageSmoothingEnabled' in this.drawingContext) {
              cov_ed6gwtmoy.b[26][0]++;
              cov_ed6gwtmoy.s[54]++;
              this.drawingContext.imageSmoothingEnabled = true;
            } else {
              cov_ed6gwtmoy.b[26][1]++;
            }
          } else {
            cov_ed6gwtmoy.b[25][1]++;
          }
          cov_ed6gwtmoy.s[55]++;
          return this;
        };
        /**
 * Sets the style for rendering line endings. These ends are either rounded
 * (`ROUND`), squared (`SQUARE`), or extended (`PROJECT`). The default cap is
 * `ROUND`.
 *
 * The argument passed to `strokeCap()` must be written in ALL CAPS because
 * the constants `ROUND`, `SQUARE`, and `PROJECT` are defined this way.
 * JavaScript is a case-sensitive language.
 *
 * @method strokeCap
 * @param  {Constant} cap either ROUND, SQUARE, or PROJECT
 * @chainable
 * @example
 * <div>
 * <code>
 * strokeWeight(12.0);
 * strokeCap(ROUND);
 * line(20, 30, 80, 30);
 * strokeCap(SQUARE);
 * line(20, 50, 80, 50);
 * strokeCap(PROJECT);
 * line(20, 70, 80, 70);
 * describe('Three horizontal lines. The top line has rounded ends, the middle line has squared ends, and the bottom line has longer, squared ends.');
 * </code>
 * </div>
 */
        cov_ed6gwtmoy.s[56]++;
        _main.default.prototype.strokeCap = function (cap) {
          cov_ed6gwtmoy.f[11]++;
          cov_ed6gwtmoy.s[57]++;
          if ((cov_ed6gwtmoy.b[28][0]++, cap === constants.ROUND) || (cov_ed6gwtmoy.b[28][1]++, cap === constants.SQUARE) || (cov_ed6gwtmoy.b[28][2]++, cap === constants.PROJECT)) {
            cov_ed6gwtmoy.b[27][0]++;
            cov_ed6gwtmoy.s[58]++;
            this._renderer.strokeCap(cap);
          } else {
            cov_ed6gwtmoy.b[27][1]++;
          }
          cov_ed6gwtmoy.s[59]++;
          return this;
        };
        /**
 * Sets the style of the joints which connect line segments. These joints are
 * either mitered (`MITER`), beveled (`BEVEL`), or rounded (`ROUND`). The default
 * joint is `MITER` in 2D mode and `ROUND` in WebGL mode.
 *
 * The argument passed to `strokeJoin()` must be written in ALL CAPS because
 * the constants `MITER`, `BEVEL`, and `ROUND` are defined this way.
 * JavaScript is a case-sensitive language.
 *
 * @method strokeJoin
 * @param  {Constant} join either MITER, BEVEL, or ROUND
 * @chainable
 * @example
 * <div>
 * <code>
 * noFill();
 * strokeWeight(10.0);
 * strokeJoin(MITER);
 * beginShape();
 * vertex(35, 20);
 * vertex(65, 50);
 * vertex(35, 80);
 * endShape();
 * describe('A right-facing arrowhead shape with a pointed tip in center of canvas.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * noFill();
 * strokeWeight(10.0);
 * strokeJoin(BEVEL);
 * beginShape();
 * vertex(35, 20);
 * vertex(65, 50);
 * vertex(35, 80);
 * endShape();
 * describe('A right-facing arrowhead shape with a flat tip in center of canvas.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * noFill();
 * strokeWeight(10.0);
 * strokeJoin(ROUND);
 * beginShape();
 * vertex(35, 20);
 * vertex(65, 50);
 * vertex(35, 80);
 * endShape();
 * describe('A right-facing arrowhead shape with a rounded tip in center of canvas.');
 * </code>
 * </div>
 */
        cov_ed6gwtmoy.s[60]++;
        _main.default.prototype.strokeJoin = function (join) {
          cov_ed6gwtmoy.f[12]++;
          cov_ed6gwtmoy.s[61]++;
          if ((cov_ed6gwtmoy.b[30][0]++, join === constants.ROUND) || (cov_ed6gwtmoy.b[30][1]++, join === constants.BEVEL) || (cov_ed6gwtmoy.b[30][2]++, join === constants.MITER)) {
            cov_ed6gwtmoy.b[29][0]++;
            cov_ed6gwtmoy.s[62]++;
            this._renderer.strokeJoin(join);
          } else {
            cov_ed6gwtmoy.b[29][1]++;
          }
          cov_ed6gwtmoy.s[63]++;
          return this;
        };
        /**
 * Sets the width of the stroke used for lines, points, and the border around
 * shapes. All widths are set in units of pixels.
 *
 * Note that `strokeWeight()` is affected by any transformation or scaling that
 * has been applied previously.
 *
 * @method strokeWeight
 * @param  {Number} weight the weight of the stroke (in pixels).
 * @chainable
 * @example
 * <div>
 * <code>
 * // Default.
 * line(20, 20, 80, 20);
 * // Thicker.
 * strokeWeight(4);
 * line(20, 40, 80, 40);
 * // Beastly.
 * strokeWeight(10);
 * line(20, 70, 80, 70);
 * describe('Three horizontal black lines. The top line is thin, the middle is medium, and the bottom is thick.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // Default.
 * line(20, 20, 80, 20);
 * // Adding scale transformation.
 * scale(5);
 * // Coordinates adjusted for scaling.
 * line(4, 8, 16, 8);
 * describe('Two horizontal black lines. The top line is thin and the bottom is five times thicker than the top.');
 * </code>
 * </div>
 */
        cov_ed6gwtmoy.s[64]++;
        _main.default.prototype.strokeWeight = function (w) {
          cov_ed6gwtmoy.f[13]++;
          cov_ed6gwtmoy.s[65]++;
          this._renderer.strokeWeight(w);
          cov_ed6gwtmoy.s[66]++;
          return this;
        };
        var _default = (cov_ed6gwtmoy.s[67]++, _main.default);
        cov_ed6gwtmoy.s[68]++;
        exports.default = _default;
      },
      {
        '../constants': 145,
        '../main': 148,
        'core-js/modules/es.array.iterator': 120,
        'core-js/modules/es.object.get-own-property-descriptor': 125,
        'core-js/modules/es.object.to-string': 127,
        'core-js/modules/es.string.iterator': 133,
        'core-js/modules/es.symbol': 137,
        'core-js/modules/es.symbol.description': 135,
        'core-js/modules/es.symbol.iterator': 136,
        'core-js/modules/es.weak-map': 138,
        'core-js/modules/web.dom-collections.iterator': 140
      }
    ],
    156: [
      function (_dereq_, module, exports) {
        'use strict';
        var cov_1ljykfebq = function () {
          var path = '/Users/montoyamoraga/github/processing/p5.sound.js/src/core/structure.js';
          var hash = 'e0975a8357076592d8b019fc4b3d9fc176ca8564';
          var global = new Function('return this') ();
          var gcv = '__coverage__';
          var coverageData = {
            path: '/Users/montoyamoraga/github/processing/p5.sound.js/src/core/structure.js',
            statementMap: {
              '0': {
                start: {
                  line: 3,
                  column: 0
                },
                end: {
                  line: 3,
                  column: 45
                }
              },
              '1': {
                start: {
                  line: 5,
                  column: 0
                },
                end: {
                  line: 5,
                  column: 44
                }
              },
              '2': {
                start: {
                  line: 7,
                  column: 0
                },
                end: {
                  line: 7,
                  column: 56
                }
              },
              '3': {
                start: {
                  line: 9,
                  column: 0
                },
                end: {
                  line: 11,
                  column: 3
                }
              },
              '4': {
                start: {
                  line: 12,
                  column: 0
                },
                end: {
                  line: 12,
                  column: 25
                }
              },
              '5': {
                start: {
                  line: 14,
                  column: 12
                },
                end: {
                  line: 14,
                  column: 53
                }
              },
              '6': {
                start: {
                  line: 16,
                  column: 39
                },
                end: {
                  line: 16,
                  column: 93
                }
              },
              '7': {
                start: {
                  line: 24,
                  column: 0
                },
                end: {
                  line: 31,
                  column: 2
                }
              },
              '8': {
                start: {
                  line: 25,
                  column: 2
                },
                end: {
                  line: 30,
                  column: 5
                }
              },
              '9': {
                start: {
                  line: 33,
                  column: 0
                },
                end: {
                  line: 43,
                  column: 2
                }
              },
              '10': {
                start: {
                  line: 34,
                  column: 14
                },
                end: {
                  line: 34,
                  column: 32
                }
              },
              '11': {
                start: {
                  line: 36,
                  column: 2
                },
                end: {
                  line: 42,
                  column: 3
                }
              },
              '12': {
                start: {
                  line: 37,
                  column: 4
                },
                end: {
                  line: 37,
                  column: 39
                }
              },
              '13': {
                start: {
                  line: 39,
                  column: 4
                },
                end: {
                  line: 39,
                  column: 37
                }
              },
              '14': {
                start: {
                  line: 41,
                  column: 4
                },
                end: {
                  line: 41,
                  column: 61
                }
              },
              '15': {
                start: {
                  line: 113,
                  column: 0
                },
                end: {
                  line: 155,
                  column: 2
                }
              },
              '16': {
                start: {
                  line: 114,
                  column: 2
                },
                end: {
                  line: 116,
                  column: 3
                }
              },
              '17': {
                start: {
                  line: 115,
                  column: 4
                },
                end: {
                  line: 115,
                  column: 11
                }
              },
              '18': {
                start: {
                  line: 118,
                  column: 24
                },
                end: {
                  line: 118,
                  column: 35
                }
              },
              '19': {
                start: {
                  line: 120,
                  column: 2
                },
                end: {
                  line: 122,
                  column: 3
                }
              },
              '20': {
                start: {
                  line: 121,
                  column: 4
                },
                end: {
                  line: 121,
                  column: 24
                }
              },
              '21': {
                start: {
                  line: 124,
                  column: 16
                },
                end: {
                  line: 124,
                  column: 46
                }
              },
              '22': {
                start: {
                  line: 126,
                  column: 2
                },
                end: {
                  line: 154,
                  column: 3
                }
              },
              '23': {
                start: {
                  line: 127,
                  column: 4
                },
                end: {
                  line: 129,
                  column: 5
                }
              },
              '24': {
                start: {
                  line: 128,
                  column: 6
                },
                end: {
                  line: 128,
                  column: 66
                }
              },
              '25': {
                start: {
                  line: 131,
                  column: 21
                },
                end: {
                  line: 133,
                  column: 5
                }
              },
              '26': {
                start: {
                  line: 132,
                  column: 6
                },
                end: {
                  line: 132,
                  column: 22
                }
              },
              '27': {
                start: {
                  line: 135,
                  column: 4
                },
                end: {
                  line: 153,
                  column: 5
                }
              },
              '28': {
                start: {
                  line: 135,
                  column: 25
                },
                end: {
                  line: 135,
                  column: 26
                }
              },
              '29': {
                start: {
                  line: 136,
                  column: 6
                },
                end: {
                  line: 138,
                  column: 7
                }
              },
              '30': {
                start: {
                  line: 137,
                  column: 8
                },
                end: {
                  line: 137,
                  column: 33
                }
              },
              '31': {
                start: {
                  line: 140,
                  column: 6
                },
                end: {
                  line: 140,
                  column: 65
                }
              },
              '32': {
                start: {
                  line: 142,
                  column: 6
                },
                end: {
                  line: 142,
                  column: 57
                }
              },
              '33': {
                start: {
                  line: 144,
                  column: 6
                },
                end: {
                  line: 144,
                  column: 30
                }
              },
              '34': {
                start: {
                  line: 146,
                  column: 6
                },
                end: {
                  line: 150,
                  column: 7
                }
              },
              '35': {
                start: {
                  line: 147,
                  column: 8
                },
                end: {
                  line: 147,
                  column: 23
                }
              },
              '36': {
                start: {
                  line: 149,
                  column: 8
                },
                end: {
                  line: 149,
                  column: 33
                }
              },
              '37': {
                start: {
                  line: 152,
                  column: 6
                },
                end: {
                  line: 152,
                  column: 58
                }
              },
              '38': {
                start: {
                  line: 208,
                  column: 15
                },
                end: {
                  line: 208,
                  column: 28
                }
              },
              '39': {
                start: {
                  line: 209,
                  column: 0
                },
                end: {
                  line: 209,
                  column: 27
                }
              }
            },
            fnMap: {
              '0': {
                name: '_interopRequireDefault',
                decl: {
                  start: {
                    line: 16,
                    column: 9
                  },
                  end: {
                    line: 16,
                    column: 31
                  }
                },
                loc: {
                  start: {
                    line: 16,
                    column: 37
                  },
                  end: {
                    line: 16,
                    column: 95
                  }
                },
                line: 16
              },
              '1': {
                name: '(anonymous_1)',
                decl: {
                  start: {
                    line: 24,
                    column: 31
                  },
                  end: {
                    line: 24,
                    column: 32
                  }
                },
                loc: {
                  start: {
                    line: 24,
                    column: 43
                  },
                  end: {
                    line: 31,
                    column: 1
                  }
                },
                line: 24
              },
              '2': {
                name: '(anonymous_2)',
                decl: {
                  start: {
                    line: 33,
                    column: 30
                  },
                  end: {
                    line: 33,
                    column: 31
                  }
                },
                loc: {
                  start: {
                    line: 33,
                    column: 42
                  },
                  end: {
                    line: 43,
                    column: 1
                  }
                },
                line: 33
              },
              '3': {
                name: '(anonymous_3)',
                decl: {
                  start: {
                    line: 113,
                    column: 33
                  },
                  end: {
                    line: 113,
                    column: 34
                  }
                },
                loc: {
                  start: {
                    line: 113,
                    column: 46
                  },
                  end: {
                    line: 155,
                    column: 1
                  }
                },
                line: 113
              },
              '4': {
                name: 'callMethod',
                decl: {
                  start: {
                    line: 131,
                    column: 30
                  },
                  end: {
                    line: 131,
                    column: 40
                  }
                },
                loc: {
                  start: {
                    line: 131,
                    column: 44
                  },
                  end: {
                    line: 133,
                    column: 5
                  }
                },
                line: 131
              }
            },
            branchMap: {
              '0': {
                loc: {
                  start: {
                    line: 16,
                    column: 46
                  },
                  end: {
                    line: 16,
                    column: 92
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 16,
                      column: 70
                    },
                    end: {
                      line: 16,
                      column: 73
                    }
                  },
                  {
                    start: {
                      line: 16,
                      column: 76
                    },
                    end: {
                      line: 16,
                      column: 92
                    }
                  }
                ],
                line: 16
              },
              '1': {
                loc: {
                  start: {
                    line: 16,
                    column: 46
                  },
                  end: {
                    line: 16,
                    column: 67
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 16,
                      column: 46
                    },
                    end: {
                      line: 16,
                      column: 49
                    }
                  },
                  {
                    start: {
                      line: 16,
                      column: 53
                    },
                    end: {
                      line: 16,
                      column: 67
                    }
                  }
                ],
                line: 16
              },
              '2': {
                loc: {
                  start: {
                    line: 36,
                    column: 2
                  },
                  end: {
                    line: 42,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 36,
                      column: 2
                    },
                    end: {
                      line: 42,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 36,
                      column: 2
                    },
                    end: {
                      line: 42,
                      column: 3
                    }
                  }
                ],
                line: 36
              },
              '3': {
                loc: {
                  start: {
                    line: 114,
                    column: 2
                  },
                  end: {
                    line: 116,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 114,
                      column: 2
                    },
                    end: {
                      line: 116,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 114,
                      column: 2
                    },
                    end: {
                      line: 116,
                      column: 3
                    }
                  }
                ],
                line: 114
              },
              '4': {
                loc: {
                  start: {
                    line: 114,
                    column: 6
                  },
                  end: {
                    line: 114,
                    column: 42
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 114,
                      column: 6
                    },
                    end: {
                      line: 114,
                      column: 22
                    }
                  },
                  {
                    start: {
                      line: 114,
                      column: 26
                    },
                    end: {
                      line: 114,
                      column: 42
                    }
                  }
                ],
                line: 114
              },
              '5': {
                loc: {
                  start: {
                    line: 120,
                    column: 2
                  },
                  end: {
                    line: 122,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 120,
                      column: 2
                    },
                    end: {
                      line: 122,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 120,
                      column: 2
                    },
                    end: {
                      line: 122,
                      column: 3
                    }
                  }
                ],
                line: 120
              },
              '6': {
                loc: {
                  start: {
                    line: 120,
                    column: 6
                  },
                  end: {
                    line: 120,
                    column: 51
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 120,
                      column: 6
                    },
                    end: {
                      line: 120,
                      column: 28
                    }
                  },
                  {
                    start: {
                      line: 120,
                      column: 32
                    },
                    end: {
                      line: 120,
                      column: 51
                    }
                  }
                ],
                line: 120
              },
              '7': {
                loc: {
                  start: {
                    line: 124,
                    column: 16
                  },
                  end: {
                    line: 124,
                    column: 46
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 124,
                      column: 33
                    },
                    end: {
                      line: 124,
                      column: 39
                    }
                  },
                  {
                    start: {
                      line: 124,
                      column: 42
                    },
                    end: {
                      line: 124,
                      column: 46
                    }
                  }
                ],
                line: 124
              },
              '8': {
                loc: {
                  start: {
                    line: 126,
                    column: 2
                  },
                  end: {
                    line: 154,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 126,
                      column: 2
                    },
                    end: {
                      line: 154,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 126,
                      column: 2
                    },
                    end: {
                      line: 154,
                      column: 3
                    }
                  }
                ],
                line: 126
              },
              '9': {
                loc: {
                  start: {
                    line: 127,
                    column: 4
                  },
                  end: {
                    line: 129,
                    column: 5
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 127,
                      column: 4
                    },
                    end: {
                      line: 129,
                      column: 5
                    }
                  },
                  {
                    start: {
                      line: 127,
                      column: 4
                    },
                    end: {
                      line: 129,
                      column: 5
                    }
                  }
                ],
                line: 127
              },
              '10': {
                loc: {
                  start: {
                    line: 136,
                    column: 6
                  },
                  end: {
                    line: 138,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 136,
                      column: 6
                    },
                    end: {
                      line: 138,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 136,
                      column: 6
                    },
                    end: {
                      line: 138,
                      column: 7
                    }
                  }
                ],
                line: 136
              },
              '11': {
                loc: {
                  start: {
                    line: 136,
                    column: 10
                  },
                  end: {
                    line: 136,
                    column: 70
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 136,
                      column: 10
                    },
                    end: {
                      line: 136,
                      column: 38
                    }
                  },
                  {
                    start: {
                      line: 136,
                      column: 42
                    },
                    end: {
                      line: 136,
                      column: 70
                    }
                  }
                ],
                line: 136
              }
            },
            s: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0,
              '10': 0,
              '11': 0,
              '12': 0,
              '13': 0,
              '14': 0,
              '15': 0,
              '16': 0,
              '17': 0,
              '18': 0,
              '19': 0,
              '20': 0,
              '21': 0,
              '22': 0,
              '23': 0,
              '24': 0,
              '25': 0,
              '26': 0,
              '27': 0,
              '28': 0,
              '29': 0,
              '30': 0,
              '31': 0,
              '32': 0,
              '33': 0,
              '34': 0,
              '35': 0,
              '36': 0,
              '37': 0,
              '38': 0,
              '39': 0
            },
            f: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0
            },
            b: {
              '0': [
                0,
                0
              ],
              '1': [
                0,
                0
              ],
              '2': [
                0,
                0
              ],
              '3': [
                0,
                0
              ],
              '4': [
                0,
                0
              ],
              '5': [
                0,
                0
              ],
              '6': [
                0,
                0
              ],
              '7': [
                0,
                0
              ],
              '8': [
                0,
                0
              ],
              '9': [
                0,
                0
              ],
              '10': [
                0,
                0
              ],
              '11': [
                0,
                0
              ]
            },
            _coverageSchema: '43e27e138ebf9cfc5966b082cf9a028302ed4184',
            hash: 'e0975a8357076592d8b019fc4b3d9fc176ca8564'
          };
          var coverage = global[gcv] || (global[gcv] = {
          });
          if (coverage[path] && coverage[path].hash === hash) {
            return coverage[path];
          }
          return coverage[path] = coverageData;
        }();
        _dereq_('core-js/modules/es.array.for-each');
        _dereq_('core-js/modules/es.object.assign');
        _dereq_('core-js/modules/web.dom-collections.for-each');
        cov_1ljykfebq.s[0]++;
        _dereq_('core-js/modules/es.array.for-each');
        cov_1ljykfebq.s[1]++;
        _dereq_('core-js/modules/es.object.assign');
        cov_1ljykfebq.s[2]++;
        _dereq_('core-js/modules/web.dom-collections.for-each');
        cov_1ljykfebq.s[3]++;
        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        cov_1ljykfebq.s[4]++;
        exports.default = void 0;
        var _main = (cov_1ljykfebq.s[5]++, _interopRequireDefault(_dereq_('./main')));
        function _interopRequireDefault(obj) {
          cov_1ljykfebq.f[0]++;
          cov_1ljykfebq.s[6]++;
          return (cov_1ljykfebq.b[1][0]++, obj) && (cov_1ljykfebq.b[1][1]++, obj.__esModule) ? (cov_1ljykfebq.b[0][0]++, obj) : (cov_1ljykfebq.b[0][1]++, {
          default:
            obj
          });
        }        /**
 * @module Structure
 * @submodule Structure
 * @for p5
 * @requires core
 */

        cov_1ljykfebq.s[7]++;
        _main.default.prototype.push = function () {
          cov_1ljykfebq.f[1]++;
          cov_1ljykfebq.s[8]++;
          this._styles.push({
            props: {
              _colorMode: this._colorMode
            },
            renderer: this._renderer.push()
          });
        };
        cov_1ljykfebq.s[9]++;
        _main.default.prototype.pop = function () {
          cov_1ljykfebq.f[2]++;
          var style = (cov_1ljykfebq.s[10]++, this._styles.pop());
          cov_1ljykfebq.s[11]++;
          if (style) {
            cov_1ljykfebq.b[2][0]++;
            cov_1ljykfebq.s[12]++;
            this._renderer.pop(style.renderer);
            cov_1ljykfebq.s[13]++;
            Object.assign(this, style.props);
          } else {
            cov_1ljykfebq.b[2][1]++;
            cov_1ljykfebq.s[14]++;
            console.warn('pop() was called without matching push()');
          }
        };
        /**
 * Executes the code within <a href="#/p5/draw">draw()</a> one time. This
 * function allows the program to update the display window only when necessary,
 * for example when an event registered by <a href="#/p5/mousePressed">mousePressed()</a>
 * or <a href="#/p5/keyPressed">keyPressed()</a> occurs.
 *
 * In structuring a program, it only makes sense to call <a href="#/p5/redraw">redraw()</a>
 * within events such as <a href="#/p5/mousePressed">mousePressed()</a>. This
 * is because <a href="#/p5/redraw">redraw()</a> does not run
 * <a href="#/p5/draw">draw()</a> immediately (it only sets a flag that indicates
 * an update is needed).
 *
 * The <a href="#/p5/redraw">redraw()</a> function does not work properly when
 * called inside <a href="#/p5/draw">draw()</a>.To enable/disable animations,
 * use <a href="#/p5/loop">loop()</a> and <a href="#/p5/noLoop">noLoop()</a>.
 *
 * In addition you can set the number of redraws per method call. Just
 * add an integer as single parameter for the number of redraws.
 *
 * @method redraw
 * @param  {Integer} [n] Redraw for n-times. The default value is 1.
 * @example
 * <div><code>
 * let x = 0;
 *
 * function setup() {
 *   createCanvas(100, 100);
 *   noLoop();
 * }
 *
 * function draw() {
 *   background(204);
 *   line(x, 0, x, height);
 * }
 *
 * function mousePressed() {
 *   x += 1;
 *   redraw();
 * }
 * </code>
 * </div>
 *
 * <div class='norender'>
 * <code>
 * let x = 0;
 *
 * function setup() {
 *   createCanvas(100, 100);
 *   noLoop();
 * }
 *
 * function draw() {
 *   background(204);
 *   x += 1;
 *   line(x, 0, x, height);
 * }
 *
 * function mousePressed() {
 *   redraw(5);
 * }
 * </code>
 * </div>
 *
 * @alt
 * black line on far left of canvas
 * black line on far left of canvas
 */
        cov_1ljykfebq.s[15]++;
        _main.default.prototype.redraw = function (n) {
          cov_1ljykfebq.f[3]++;
          cov_1ljykfebq.s[16]++;
          if ((cov_1ljykfebq.b[4][0]++, this._inUserDraw) || (cov_1ljykfebq.b[4][1]++, !this._setupDone)) {
            cov_1ljykfebq.b[3][0]++;
            cov_1ljykfebq.s[17]++;
            return;
          } else {
            cov_1ljykfebq.b[3][1]++;
          }
          var numberOfRedraws = (cov_1ljykfebq.s[18]++, parseInt(n));
          cov_1ljykfebq.s[19]++;
          if ((cov_1ljykfebq.b[6][0]++, isNaN(numberOfRedraws)) || (cov_1ljykfebq.b[6][1]++, numberOfRedraws < 1)) {
            cov_1ljykfebq.b[5][0]++;
            cov_1ljykfebq.s[20]++;
            numberOfRedraws = 1;
          } else {
            cov_1ljykfebq.b[5][1]++;
          }
          var context = (cov_1ljykfebq.s[21]++, this._isGlobal ? (cov_1ljykfebq.b[7][0]++, window) : (cov_1ljykfebq.b[7][1]++, this));
          cov_1ljykfebq.s[22]++;
          if (typeof context.draw === 'function') {
            cov_1ljykfebq.b[8][0]++;
            cov_1ljykfebq.s[23]++;
            if (typeof context.setup === 'undefined') {
              cov_1ljykfebq.b[9][0]++;
              cov_1ljykfebq.s[24]++;
              context.scale(context._pixelDensity, context._pixelDensity);
            } else {
              cov_1ljykfebq.b[9][1]++;
            }
            cov_1ljykfebq.s[25]++;
            var callMethod = function callMethod(f) {
              cov_1ljykfebq.f[4]++;
              cov_1ljykfebq.s[26]++;
              f.call(context);
            };
            cov_1ljykfebq.s[27]++;
            for (var idxRedraw = (cov_1ljykfebq.s[28]++, 0); idxRedraw < numberOfRedraws; idxRedraw++) {
              cov_1ljykfebq.s[29]++;
              if ((cov_1ljykfebq.b[11][0]++, this._accessibleOutputs.grid) || (cov_1ljykfebq.b[11][1]++, this._accessibleOutputs.text)) {
                cov_1ljykfebq.b[10][0]++;
                cov_1ljykfebq.s[30]++;
                this._updateAccsOutput();
              } else {
                cov_1ljykfebq.b[10][1]++;
              }
              cov_1ljykfebq.s[31]++;
              context._setProperty('frameCount', context.frameCount + 1);
              cov_1ljykfebq.s[32]++;
              context._registeredMethods.pre.forEach(callMethod);
              cov_1ljykfebq.s[33]++;
              this._inUserDraw = true;
              cov_1ljykfebq.s[34]++;
              try {
                cov_1ljykfebq.s[35]++;
                context.draw();
              } finally {
                cov_1ljykfebq.s[36]++;
                this._inUserDraw = false;
              }
              cov_1ljykfebq.s[37]++;
              context._registeredMethods.post.forEach(callMethod);
            }
          } else {
            cov_1ljykfebq.b[8][1]++;
          }
        };
        /**
 * The `p5sound()` constructor enables you to activate "instance mode" instead of normal
 * "global mode". This is an advanced topic. A short description and example is
 * included below. Please see
 * <a target="blank" href="https://www.youtube.com/watch?v=Su792jEauZg&feature=youtu.be">
 * Dan Shiffman's Coding Train video tutorial</a> or this
 * <a target="blank" href="https://github.com/processing/p5sound.js/wiki/p5sound.js-overview#instantiation--namespace">tutorial page</a>
 * for more info.
 *
 * By default, all p5sound.js functions are in the global namespace (i.e. bound to the window
 * object), meaning you can call them simply `ellipse()`, `fill()`, etc. However, this
 * might be inconvenient if you are mixing with other JS libraries (synchronously or
 * asynchronously) or writing long programs of your own. p5sound.js currently supports a
 * way around this problem called "instance mode". In instance mode, all p5sound functions
 * are bound up in a single variable instead of polluting your global namespace.
 *
 * Optionally, you can specify a default container for the canvas and any other elements
 * to append to with a second argument. You can give the ID of an element in your html,
 * or an html node itself.
 *
 * Note that creating instances like this also allows you to have more than one p5sound sketch on
 * a single web page, as they will each be wrapped up with their own set up variables. Of
 * course, you could also use iframes to have multiple sketches in global mode.
 *
 * @method p5
 * @param {Object} sketch a function containing a p5sound.js sketch
 * @param {String|Object} node ID or pointer to HTML DOM node to contain sketch in
 * @example
 * <div class='norender'><code>
 * const s = p => {
 *   let x = 100;
 *   let y = 100;
 *
 *   p.setup = function() {
 *     p.createCanvas(700, 410);
 *   };
 *
 *   p.draw = function() {
 *     p.background(0);
 *     p.fill(255);
 *     p.rect(x, y, 50, 50);
 *   };
 * };
 *
 * new p5sound(s); // invoke p5
 * </code></div>
 *
 * @alt
 * white rectangle on black background
 */
        var _default = (cov_1ljykfebq.s[38]++, _main.default);
        cov_1ljykfebq.s[39]++;
        exports.default = _default;
      },
      {
        './main': 148,
        'core-js/modules/es.array.for-each': 118,
        'core-js/modules/es.object.assign': 124,
        'core-js/modules/web.dom-collections.for-each': 139
      }
    ],
    157: [
      function (_dereq_, module, exports) {
        'use strict';
        var cov_17t2w7saai = function () {
          var path = '/Users/montoyamoraga/github/processing/p5.sound.js/src/sound/audioContext.js';
          var hash = 'f0c1100ae29a249b9e115e4466611362831227a8';
          var global = new Function('return this') ();
          var gcv = '__coverage__';
          var coverageData = {
            path: '/Users/montoyamoraga/github/processing/p5.sound.js/src/sound/audioContext.js',
            statementMap: {
              '0': {
                start: {
                  line: 3,
                  column: 0
                },
                end: {
                  line: 5,
                  column: 3
                }
              },
              '1': {
                start: {
                  line: 6,
                  column: 0
                },
                end: {
                  line: 6,
                  column: 42
                }
              },
              '2': {
                start: {
                  line: 7,
                  column: 0
                },
                end: {
                  line: 7,
                  column: 25
                }
              },
              '3': {
                start: {
                  line: 8,
                  column: 19
                },
                end: {
                  line: 8,
                  column: 44
                }
              },
              '4': {
                start: {
                  line: 44,
                  column: 2
                },
                end: {
                  line: 44,
                  column: 22
                }
              },
              '5': {
                start: {
                  line: 47,
                  column: 15
                },
                end: {
                  line: 47,
                  column: 27
                }
              },
              '6': {
                start: {
                  line: 48,
                  column: 0
                },
                end: {
                  line: 48,
                  column: 27
                }
              }
            },
            fnMap: {
              '0': {
                name: 'getAudioContext',
                decl: {
                  start: {
                    line: 43,
                    column: 9
                  },
                  end: {
                    line: 43,
                    column: 24
                  }
                },
                loc: {
                  start: {
                    line: 43,
                    column: 27
                  },
                  end: {
                    line: 45,
                    column: 1
                  }
                },
                line: 43
              }
            },
            branchMap: {
            },
            s: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0
            },
            f: {
              '0': 0
            },
            b: {
            },
            _coverageSchema: '43e27e138ebf9cfc5966b082cf9a028302ed4184',
            hash: 'f0c1100ae29a249b9e115e4466611362831227a8'
          };
          var coverage = global[gcv] || (global[gcv] = {
          });
          if (coverage[path] && coverage[path].hash === hash) {
            return coverage[path];
          }
          return coverage[path] = coverageData;
        }();
        cov_17t2w7saai.s[0]++;
        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        cov_17t2w7saai.s[1]++;
        exports.getAudioContext = getAudioContext;
        cov_17t2w7saai.s[2]++;
        exports.default = void 0;
        var audioContext = (cov_17t2w7saai.s[3]++, new window.AudioContext());
        /**
 * <p>Returns the Audio Context for this sketch. Useful for users
 * who would like to dig deeper into the <a target='_blank' href=
 * 'http://webaudio.github.io/web-audio-api/'>Web Audio API
 * </a>.</p>
 *
 * <p>Some browsers require users to startAudioContext
 * with a user gesture, such as touchStarted in the example below.</p>
 *
 * @for p5
 * @method getAudioContext
 * @return {Object}    AudioContext for this sketch
 * @example
 *  function draw() {
 *    background(255);
 *    textAlign(CENTER);
 *
 *    if (getAudioContext().state !== 'running') {
 *      text('click to start audio', width/2, height/2);
 *    } else {
 *      text('audio is enabled', width/2, height/2);
 *    }
 *  }
 *
 *  function touchStarted() {
 *    if (getAudioContext().state !== 'running') {
 *      getAudioContext().resume();
 *    }
 *    var synth = new p5sound.MonoSynth();
 *    synth.play('A4', 0.5, 0, 0.2);
 *  }
 *
 */
        function getAudioContext() {
          cov_17t2w7saai.f[0]++;
          cov_17t2w7saai.s[4]++;
          return audioContext;
        }
        var _default = (cov_17t2w7saai.s[5]++, audioContext);
        cov_17t2w7saai.s[6]++;
        exports.default = _default;
      },
      {
      }
    ],
    158: [
      function (_dereq_, module, exports) {
        'use strict';
        var cov_13ugpkppww = function () {
          var path = '/Users/montoyamoraga/github/processing/p5.sound.js/src/sound/main.js';
          var hash = 'adb7a34a6e0f9c443bb1cb1191b1ea612e0e7ce2';
          var global = new Function('return this') ();
          var gcv = '__coverage__';
          var coverageData = {
            path: '/Users/montoyamoraga/github/processing/p5.sound.js/src/sound/main.js',
            statementMap: {
              '0': {
                start: {
                  line: 3,
                  column: 0
                },
                end: {
                  line: 5,
                  column: 3
                }
              },
              '1': {
                start: {
                  line: 6,
                  column: 0
                },
                end: {
                  line: 6,
                  column: 25
                }
              },
              '2': {
                start: {
                  line: 8,
                  column: 20
                },
                end: {
                  line: 8,
                  column: 72
                }
              },
              '3': {
                start: {
                  line: 10,
                  column: 39
                },
                end: {
                  line: 10,
                  column: 93
                }
              },
              '4': {
                start: {
                  line: 12,
                  column: 50
                },
                end: {
                  line: 12,
                  column: 151
                }
              },
              '5': {
                start: {
                  line: 12,
                  column: 92
                },
                end: {
                  line: 12,
                  column: 149
                }
              },
              '6': {
                start: {
                  line: 15,
                  column: 11
                },
                end: {
                  line: 44,
                  column: 1
                }
              },
              '7': {
                start: {
                  line: 16,
                  column: 2
                },
                end: {
                  line: 16,
                  column: 30
                }
              },
              '8': {
                start: {
                  line: 25,
                  column: 2
                },
                end: {
                  line: 25,
                  column: 44
                }
              },
              '9': {
                start: {
                  line: 43,
                  column: 2
                },
                end: {
                  line: 43,
                  column: 23
                }
              },
              '10': {
                start: {
                  line: 47,
                  column: 14
                },
                end: {
                  line: 47,
                  column: 24
                }
              },
              '11': {
                start: {
                  line: 118,
                  column: 15
                },
                end: {
                  line: 118,
                  column: 22
                }
              },
              '12': {
                start: {
                  line: 119,
                  column: 0
                },
                end: {
                  line: 119,
                  column: 27
                }
              }
            },
            fnMap: {
              '0': {
                name: '_interopRequireDefault',
                decl: {
                  start: {
                    line: 10,
                    column: 9
                  },
                  end: {
                    line: 10,
                    column: 31
                  }
                },
                loc: {
                  start: {
                    line: 10,
                    column: 37
                  },
                  end: {
                    line: 10,
                    column: 95
                  }
                },
                line: 10
              },
              '1': {
                name: '_classCallCheck',
                decl: {
                  start: {
                    line: 12,
                    column: 9
                  },
                  end: {
                    line: 12,
                    column: 24
                  }
                },
                loc: {
                  start: {
                    line: 12,
                    column: 48
                  },
                  end: {
                    line: 12,
                    column: 153
                  }
                },
                line: 12
              },
              '2': {
                name: 'Main',
                decl: {
                  start: {
                    line: 15,
                    column: 20
                  },
                  end: {
                    line: 15,
                    column: 24
                  }
                },
                loc: {
                  start: {
                    line: 15,
                    column: 27
                  },
                  end: {
                    line: 44,
                    column: 1
                  }
                },
                line: 15
              }
            },
            branchMap: {
              '0': {
                loc: {
                  start: {
                    line: 10,
                    column: 46
                  },
                  end: {
                    line: 10,
                    column: 92
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 10,
                      column: 70
                    },
                    end: {
                      line: 10,
                      column: 73
                    }
                  },
                  {
                    start: {
                      line: 10,
                      column: 76
                    },
                    end: {
                      line: 10,
                      column: 92
                    }
                  }
                ],
                line: 10
              },
              '1': {
                loc: {
                  start: {
                    line: 10,
                    column: 46
                  },
                  end: {
                    line: 10,
                    column: 67
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 10,
                      column: 46
                    },
                    end: {
                      line: 10,
                      column: 49
                    }
                  },
                  {
                    start: {
                      line: 10,
                      column: 53
                    },
                    end: {
                      line: 10,
                      column: 67
                    }
                  }
                ],
                line: 10
              },
              '2': {
                loc: {
                  start: {
                    line: 12,
                    column: 50
                  },
                  end: {
                    line: 12,
                    column: 151
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 12,
                      column: 50
                    },
                    end: {
                      line: 12,
                      column: 151
                    }
                  },
                  {
                    start: {
                      line: 12,
                      column: 50
                    },
                    end: {
                      line: 12,
                      column: 151
                    }
                  }
                ],
                line: 12
              }
            },
            s: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0,
              '10': 0,
              '11': 0,
              '12': 0
            },
            f: {
              '0': 0,
              '1': 0,
              '2': 0
            },
            b: {
              '0': [
                0,
                0
              ],
              '1': [
                0,
                0
              ],
              '2': [
                0,
                0
              ]
            },
            _coverageSchema: '43e27e138ebf9cfc5966b082cf9a028302ed4184',
            hash: 'adb7a34a6e0f9c443bb1cb1191b1ea612e0e7ce2'
          };
          var coverage = global[gcv] || (global[gcv] = {
          });
          if (coverage[path] && coverage[path].hash === hash) {
            return coverage[path];
          }
          return coverage[path] = coverageData;
        }();
        cov_13ugpkppww.s[0]++;
        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        cov_13ugpkppww.s[1]++;
        exports.default = void 0;
        var _audioContext = (cov_13ugpkppww.s[2]++, _interopRequireDefault(_dereq_('./audioContext.js')));
        function _interopRequireDefault(obj) {
          cov_13ugpkppww.f[0]++;
          cov_13ugpkppww.s[3]++;
          return (cov_13ugpkppww.b[1][0]++, obj) && (cov_13ugpkppww.b[1][1]++, obj.__esModule) ? (cov_13ugpkppww.b[0][0]++, obj) : (cov_13ugpkppww.b[0][1]++, {
          default:
            obj
          });
        }
        function _classCallCheck(instance, Constructor) {
          cov_13ugpkppww.f[1]++;
          cov_13ugpkppww.s[4]++;
          if (!(instance instanceof Constructor)) {
            cov_13ugpkppww.b[2][0]++;
            cov_13ugpkppww.s[5]++;
            throw new TypeError('Cannot call a class as a function');
          } else {
            cov_13ugpkppww.b[2][1]++;
          }
        } // P5Sound contains the final sound output bus.

        cov_13ugpkppww.s[6]++;
        var Main = function Main() {
          cov_13ugpkppww.f[2]++;
          cov_13ugpkppww.s[7]++;
          _classCallCheck(this, Main); // this.input = audioContext.createGain();
          // this.output = audioContext.createGain();
          // //put a hard limiter on the output
          // this.limiter = audioContext.createDynamicsCompressor();
          // this.limiter.threshold.value = -3;
          // this.limiter.ratio.value = 20;
          // this.limiter.knee.value = 1;
          cov_13ugpkppww.s[8]++;
          this.audiocontext = _audioContext.default; //   this.output.disconnect();
          //   // connect input to limiter
          //   this.input.connect(this.limiter);
          //   // connect limiter to output
          //   this.limiter.connect(this.output);
          //   // meter is just for global Amplitude / FFT analysis
          //   this.meter = audiocontext.createGain();
          //   this.fftMeter = audiocontext.createGain();
          //   this.output.connect(this.meter);
          //   this.output.connect(this.fftMeter);
          //   // connect output to destination
          //   this.output.connect(this.audiocontext.destination);
          //   // an array of all sounds in the sketch
          //   this.soundArray = [];
          //   // an array of all musical parts in the sketch
          //   this.parts = [];
          // file extensions to search for
          cov_13ugpkppww.s[9]++;
          this.extensions = [
          ];
        }; // create a single instance of the p5Sound main output for use within this sketch
        var p5sound = (cov_13ugpkppww.s[10]++, new Main());
        /**
 * Returns a number representing the output volume for sound
 * in this sketch.
 *
 * @method getOutputVolume
 * @return {Number} Output volume for sound in this sketch.
 *                  Should be between 0.0 (silence) and 1.0.
 */
        // p5sound.prototype.getOutputVolume = function () {
        //   return p5sound.output.gain.value;
        // };
        /**
 *  <p>Scale the output of all sound in this sketch</p>
 *  Scaled between 0.0 (silence) and 1.0 (full volume).
 *  1.0 is the maximum amplitude of a digital sound, so multiplying
 *  by greater than 1.0 may cause digital distortion. To
 *  fade, provide a <code>rampTime</code> parameter. For more
 *  complex fades, see the Envelope class.
 *
 *  Alternately, you can pass in a signal source such as an
 *  oscillator to modulate the amplitude with an audio signal.
 *
 *  <p><b>How This Works</b>: When you load the p5.sound module, it
 *  creates a single instance of p5sound. All sound objects in this
 *  module output to p5sound before reaching your computer's output.
 *  So if you change the amplitude of p5sound, it impacts all of the
 *  sound in this module.</p>
 *
 *  <p>If no value is provided, returns a Web Audio API Gain Node</p>
 *
 *  @method outputVolume
 *  @param {Number|Object} volume  Volume (amplitude) between 0.0
 *                                     and 1.0 or modulating signal/oscillator
 *  @param {Number} [rampTime]  Fade for t seconds
 *  @param {Number} [timeFromNow]  Schedule this event to happen at
 *                                 t seconds in the future
 */
        // p5sound.prototype.outputVolume = function (vol, rampTime = 0, tFromNow = 0) {
        //   if (typeof vol === 'number') {
        //     var now = p5sound.audiocontext.currentTime;
        //     var currentVol = p5sound.output.gain.value;
        //     p5sound.output.gain.cancelScheduledValues(now + tFromNow);
        //     if (rampTime !== 0)
        //       p5sound.output.gain.linearRampToValueAtTime(currentVol, now + tFromNow);
        //     p5sound.output.gain.linearRampToValueAtTime(vol, now + tFromNow + rampTime);
        //   } else if (vol) {
        //     vol.connect(p5sound.output.gain);
        //   } else {
        //     // return the Gain Node
        //     return p5sound.output.gain;
        //   }
        // };
        /**
 *  `p5sound.soundOut` is the p5sound.sound final output bus. It sends output to
 *  the destination of this window's web audio context. It contains
 *  Web Audio API nodes including a dyanmicsCompressor (<code>.limiter</code>),
 *  and Gain Nodes for <code>.input</code> and <code>.output</code>.
 *
 *  @property {Object} soundOut
 */
        // p5sound.prototype.soundOut = p5sound.soundOut = p5sound;
        // a silent connection to the DesinationNode
        // which will ensure that anything connected to it
        // will not be garbage collected
        // p5sound.soundOut._silentNode = p5sound.audiocontext.createGain();
        // p5sound.soundOut._silentNode.gain.value = 0;
        // p5sound.soundOut._silentNode.connect(p5sound.audiocontext.destination);
        var _default = (cov_13ugpkppww.s[11]++, p5sound);
        cov_13ugpkppww.s[12]++;
        exports.default = _default;
      },
      {
        './audioContext.js': 157
      }
    ],
    159: [
      function (_dereq_, module, exports) {
        'use strict';
        var cov_8ecgv565m = function () {
          var path = '/Users/montoyamoraga/github/processing/p5.sound.js/src/sound/p5sound.Oscillator.js';
          var hash = '73481a3a1023af8e533256945b510299bb77457e';
          var global = new Function('return this') ();
          var gcv = '__coverage__';
          var coverageData = {
            path: '/Users/montoyamoraga/github/processing/p5.sound.js/src/sound/p5sound.Oscillator.js',
            statementMap: {
              '0': {
                start: {
                  line: 3,
                  column: 0
                },
                end: {
                  line: 5,
                  column: 3
                }
              },
              '1': {
                start: {
                  line: 6,
                  column: 0
                },
                end: {
                  line: 6,
                  column: 25
                }
              },
              '2': {
                start: {
                  line: 8,
                  column: 20
                },
                end: {
                  line: 8,
                  column: 69
                }
              },
              '3': {
                start: {
                  line: 10,
                  column: 39
                },
                end: {
                  line: 10,
                  column: 93
                }
              },
              '4': {
                start: {
                  line: 12,
                  column: 50
                },
                end: {
                  line: 12,
                  column: 151
                }
              },
              '5': {
                start: {
                  line: 12,
                  column: 92
                },
                end: {
                  line: 12,
                  column: 149
                }
              },
              '6': {
                start: {
                  line: 14,
                  column: 44
                },
                end: {
                  line: 14,
                  column: 315
                }
              },
              '7': {
                start: {
                  line: 14,
                  column: 57
                },
                end: {
                  line: 14,
                  column: 58
                }
              },
              '8': {
                start: {
                  line: 14,
                  column: 102
                },
                end: {
                  line: 14,
                  column: 110
                }
              },
              '9': {
                start: {
                  line: 14,
                  column: 112
                },
                end: {
                  line: 14,
                  column: 167
                }
              },
              '10': {
                start: {
                  line: 14,
                  column: 168
                },
                end: {
                  line: 14,
                  column: 199
                }
              },
              '11': {
                start: {
                  line: 14,
                  column: 200
                },
                end: {
                  line: 14,
                  column: 254
                }
              },
              '12': {
                start: {
                  line: 14,
                  column: 227
                },
                end: {
                  line: 14,
                  column: 254
                }
              },
              '13': {
                start: {
                  line: 14,
                  column: 255
                },
                end: {
                  line: 14,
                  column: 313
                }
              },
              '14': {
                start: {
                  line: 16,
                  column: 62
                },
                end: {
                  line: 16,
                  column: 131
                }
              },
              '15': {
                start: {
                  line: 16,
                  column: 78
                },
                end: {
                  line: 16,
                  column: 131
                }
              },
              '16': {
                start: {
                  line: 16,
                  column: 132
                },
                end: {
                  line: 16,
                  column: 193
                }
              },
              '17': {
                start: {
                  line: 16,
                  column: 149
                },
                end: {
                  line: 16,
                  column: 193
                }
              },
              '18': {
                start: {
                  line: 16,
                  column: 194
                },
                end: {
                  line: 16,
                  column: 213
                }
              },
              '19': {
                start: {
                  line: 35,
                  column: 0
                },
                end: {
                  line: 142,
                  column: 3
                }
              },
              '20': {
                start: {
                  line: 37,
                  column: 4
                },
                end: {
                  line: 37,
                  column: 38
                }
              },
              '21': {
                start: {
                  line: 39,
                  column: 4
                },
                end: {
                  line: 39,
                  column: 21
                }
              },
              '22': {
                start: {
                  line: 41,
                  column: 4
                },
                end: {
                  line: 45,
                  column: 5
                }
              },
              '23': {
                start: {
                  line: 42,
                  column: 14
                },
                end: {
                  line: 42,
                  column: 18
                }
              },
              '24': {
                start: {
                  line: 43,
                  column: 6
                },
                end: {
                  line: 43,
                  column: 18
                }
              },
              '25': {
                start: {
                  line: 44,
                  column: 6
                },
                end: {
                  line: 44,
                  column: 15
                }
              },
              '26': {
                start: {
                  line: 47,
                  column: 4
                },
                end: {
                  line: 51,
                  column: 5
                }
              },
              '27': {
                start: {
                  line: 48,
                  column: 15
                },
                end: {
                  line: 48,
                  column: 19
                }
              },
              '28': {
                start: {
                  line: 49,
                  column: 6
                },
                end: {
                  line: 49,
                  column: 18
                }
              },
              '29': {
                start: {
                  line: 50,
                  column: 6
                },
                end: {
                  line: 50,
                  column: 16
                }
              },
              '30': {
                start: {
                  line: 53,
                  column: 4
                },
                end: {
                  line: 53,
                  column: 25
                }
              },
              '31': {
                start: {
                  line: 54,
                  column: 4
                },
                end: {
                  line: 54,
                  column: 63
                }
              },
              '32': {
                start: {
                  line: 55,
                  column: 4
                },
                end: {
                  line: 55,
                  column: 27
                }
              },
              '33': {
                start: {
                  line: 57,
                  column: 4
                },
                end: {
                  line: 57,
                  column: 42
                }
              },
              '34': {
                start: {
                  line: 58,
                  column: 4
                },
                end: {
                  line: 58,
                  column: 88
                }
              },
              '35': {
                start: {
                  line: 60,
                  column: 4
                },
                end: {
                  line: 60,
                  column: 53
                }
              },
              '36': {
                start: {
                  line: 64,
                  column: 4
                },
                end: {
                  line: 64,
                  column: 33
                }
              },
              '37': {
                start: {
                  line: 65,
                  column: 4
                },
                end: {
                  line: 65,
                  column: 76
                }
              },
              '38': {
                start: {
                  line: 66,
                  column: 4
                },
                end: {
                  line: 66,
                  column: 41
                }
              },
              '39': {
                start: {
                  line: 67,
                  column: 4
                },
                end: {
                  line: 67,
                  column: 59
                }
              },
              '40': {
                start: {
                  line: 96,
                  column: 2
                },
                end: {
                  line: 139,
                  column: 6
                }
              },
              '41': {
                start: {
                  line: 99,
                  column: 6
                },
                end: {
                  line: 102,
                  column: 7
                }
              },
              '42': {
                start: {
                  line: 100,
                  column: 18
                },
                end: {
                  line: 100,
                  column: 51
                }
              },
              '43': {
                start: {
                  line: 101,
                  column: 8
                },
                end: {
                  line: 101,
                  column: 23
                }
              },
              '44': {
                start: {
                  line: 104,
                  column: 6
                },
                end: {
                  line: 114,
                  column: 7
                }
              },
              '45': {
                start: {
                  line: 105,
                  column: 19
                },
                end: {
                  line: 105,
                  column: 30
                }
              },
              '46': {
                start: {
                  line: 106,
                  column: 19
                },
                end: {
                  line: 106,
                  column: 39
                }
              },
              '47': {
                start: {
                  line: 107,
                  column: 8
                },
                end: {
                  line: 107,
                  column: 67
                }
              },
              '48': {
                start: {
                  line: 108,
                  column: 8
                },
                end: {
                  line: 108,
                  column: 57
                }
              },
              '49': {
                start: {
                  line: 109,
                  column: 8
                },
                end: {
                  line: 109,
                  column: 36
                }
              },
              '50': {
                start: {
                  line: 110,
                  column: 8
                },
                end: {
                  line: 110,
                  column: 45
                }
              },
              '51': {
                start: {
                  line: 111,
                  column: 8
                },
                end: {
                  line: 111,
                  column: 25
                }
              },
              '52': {
                start: {
                  line: 112,
                  column: 8
                },
                end: {
                  line: 112,
                  column: 72
                }
              },
              '53': {
                start: {
                  line: 113,
                  column: 8
                },
                end: {
                  line: 113,
                  column: 28
                }
              },
              '54': {
                start: {
                  line: 120,
                  column: 6
                },
                end: {
                  line: 125,
                  column: 7
                }
              },
              '55': {
                start: {
                  line: 121,
                  column: 16
                },
                end: {
                  line: 121,
                  column: 25
                }
              },
              '56': {
                start: {
                  line: 122,
                  column: 18
                },
                end: {
                  line: 122,
                  column: 51
                }
              },
              '57': {
                start: {
                  line: 123,
                  column: 8
                },
                end: {
                  line: 123,
                  column: 38
                }
              },
              '58': {
                start: {
                  line: 124,
                  column: 8
                },
                end: {
                  line: 124,
                  column: 29
                }
              },
              '59': {
                start: {
                  line: 137,
                  column: 6
                },
                end: {
                  line: 137,
                  column: 33
                }
              },
              '60': {
                start: {
                  line: 141,
                  column: 2
                },
                end: {
                  line: 141,
                  column: 20
                }
              },
              '61': {
                start: {
                  line: 144,
                  column: 15
                },
                end: {
                  line: 144,
                  column: 25
                }
              },
              '62': {
                start: {
                  line: 145,
                  column: 0
                },
                end: {
                  line: 145,
                  column: 27
                }
              }
            },
            fnMap: {
              '0': {
                name: '_interopRequireDefault',
                decl: {
                  start: {
                    line: 10,
                    column: 9
                  },
                  end: {
                    line: 10,
                    column: 31
                  }
                },
                loc: {
                  start: {
                    line: 10,
                    column: 37
                  },
                  end: {
                    line: 10,
                    column: 95
                  }
                },
                line: 10
              },
              '1': {
                name: '_classCallCheck',
                decl: {
                  start: {
                    line: 12,
                    column: 9
                  },
                  end: {
                    line: 12,
                    column: 24
                  }
                },
                loc: {
                  start: {
                    line: 12,
                    column: 48
                  },
                  end: {
                    line: 12,
                    column: 153
                  }
                },
                line: 12
              },
              '2': {
                name: '_defineProperties',
                decl: {
                  start: {
                    line: 14,
                    column: 9
                  },
                  end: {
                    line: 14,
                    column: 26
                  }
                },
                loc: {
                  start: {
                    line: 14,
                    column: 42
                  },
                  end: {
                    line: 14,
                    column: 317
                  }
                },
                line: 14
              },
              '3': {
                name: '_createClass',
                decl: {
                  start: {
                    line: 16,
                    column: 9
                  },
                  end: {
                    line: 16,
                    column: 21
                  }
                },
                loc: {
                  start: {
                    line: 16,
                    column: 60
                  },
                  end: {
                    line: 16,
                    column: 215
                  }
                },
                line: 16
              },
              '4': {
                name: '(anonymous_4)',
                decl: {
                  start: {
                    line: 35,
                    column: 0
                  },
                  end: {
                    line: 35,
                    column: 1
                  }
                },
                loc: {
                  start: {
                    line: 35,
                    column: 12
                  },
                  end: {
                    line: 142,
                    column: 1
                  }
                },
                line: 35
              },
              '5': {
                name: 'Oscillator',
                decl: {
                  start: {
                    line: 36,
                    column: 11
                  },
                  end: {
                    line: 36,
                    column: 21
                  }
                },
                loc: {
                  start: {
                    line: 36,
                    column: 34
                  },
                  end: {
                    line: 94,
                    column: 3
                  }
                },
                line: 36
              },
              '6': {
                name: 'start',
                decl: {
                  start: {
                    line: 98,
                    column: 20
                  },
                  end: {
                    line: 98,
                    column: 25
                  }
                },
                loc: {
                  start: {
                    line: 98,
                    column: 35
                  },
                  end: {
                    line: 115,
                    column: 5
                  }
                },
                line: 98
              },
              '7': {
                name: 'stop',
                decl: {
                  start: {
                    line: 119,
                    column: 20
                  },
                  end: {
                    line: 119,
                    column: 24
                  }
                },
                loc: {
                  start: {
                    line: 119,
                    column: 31
                  },
                  end: {
                    line: 126,
                    column: 5
                  }
                },
                line: 119
              },
              '8': {
                name: 'helloworld',
                decl: {
                  start: {
                    line: 136,
                    column: 20
                  },
                  end: {
                    line: 136,
                    column: 30
                  }
                },
                loc: {
                  start: {
                    line: 136,
                    column: 33
                  },
                  end: {
                    line: 138,
                    column: 5
                  }
                },
                line: 136
              }
            },
            branchMap: {
              '0': {
                loc: {
                  start: {
                    line: 10,
                    column: 46
                  },
                  end: {
                    line: 10,
                    column: 92
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 10,
                      column: 70
                    },
                    end: {
                      line: 10,
                      column: 73
                    }
                  },
                  {
                    start: {
                      line: 10,
                      column: 76
                    },
                    end: {
                      line: 10,
                      column: 92
                    }
                  }
                ],
                line: 10
              },
              '1': {
                loc: {
                  start: {
                    line: 10,
                    column: 46
                  },
                  end: {
                    line: 10,
                    column: 67
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 10,
                      column: 46
                    },
                    end: {
                      line: 10,
                      column: 49
                    }
                  },
                  {
                    start: {
                      line: 10,
                      column: 53
                    },
                    end: {
                      line: 10,
                      column: 67
                    }
                  }
                ],
                line: 10
              },
              '2': {
                loc: {
                  start: {
                    line: 12,
                    column: 50
                  },
                  end: {
                    line: 12,
                    column: 151
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 12,
                      column: 50
                    },
                    end: {
                      line: 12,
                      column: 151
                    }
                  },
                  {
                    start: {
                      line: 12,
                      column: 50
                    },
                    end: {
                      line: 12,
                      column: 151
                    }
                  }
                ],
                line: 12
              },
              '3': {
                loc: {
                  start: {
                    line: 14,
                    column: 136
                  },
                  end: {
                    line: 14,
                    column: 166
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 14,
                      column: 136
                    },
                    end: {
                      line: 14,
                      column: 157
                    }
                  },
                  {
                    start: {
                      line: 14,
                      column: 161
                    },
                    end: {
                      line: 14,
                      column: 166
                    }
                  }
                ],
                line: 14
              },
              '4': {
                loc: {
                  start: {
                    line: 14,
                    column: 200
                  },
                  end: {
                    line: 14,
                    column: 254
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 14,
                      column: 200
                    },
                    end: {
                      line: 14,
                      column: 254
                    }
                  },
                  {
                    start: {
                      line: 14,
                      column: 200
                    },
                    end: {
                      line: 14,
                      column: 254
                    }
                  }
                ],
                line: 14
              },
              '5': {
                loc: {
                  start: {
                    line: 16,
                    column: 62
                  },
                  end: {
                    line: 16,
                    column: 131
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 16,
                      column: 62
                    },
                    end: {
                      line: 16,
                      column: 131
                    }
                  },
                  {
                    start: {
                      line: 16,
                      column: 62
                    },
                    end: {
                      line: 16,
                      column: 131
                    }
                  }
                ],
                line: 16
              },
              '6': {
                loc: {
                  start: {
                    line: 16,
                    column: 132
                  },
                  end: {
                    line: 16,
                    column: 193
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 16,
                      column: 132
                    },
                    end: {
                      line: 16,
                      column: 193
                    }
                  },
                  {
                    start: {
                      line: 16,
                      column: 132
                    },
                    end: {
                      line: 16,
                      column: 193
                    }
                  }
                ],
                line: 16
              },
              '7': {
                loc: {
                  start: {
                    line: 41,
                    column: 4
                  },
                  end: {
                    line: 45,
                    column: 5
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 41,
                      column: 4
                    },
                    end: {
                      line: 45,
                      column: 5
                    }
                  },
                  {
                    start: {
                      line: 41,
                      column: 4
                    },
                    end: {
                      line: 45,
                      column: 5
                    }
                  }
                ],
                line: 41
              },
              '8': {
                loc: {
                  start: {
                    line: 47,
                    column: 4
                  },
                  end: {
                    line: 51,
                    column: 5
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 47,
                      column: 4
                    },
                    end: {
                      line: 51,
                      column: 5
                    }
                  },
                  {
                    start: {
                      line: 47,
                      column: 4
                    },
                    end: {
                      line: 51,
                      column: 5
                    }
                  }
                ],
                line: 47
              },
              '9': {
                loc: {
                  start: {
                    line: 55,
                    column: 13
                  },
                  end: {
                    line: 55,
                    column: 26
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 55,
                      column: 13
                    },
                    end: {
                      line: 55,
                      column: 17
                    }
                  },
                  {
                    start: {
                      line: 55,
                      column: 21
                    },
                    end: {
                      line: 55,
                      column: 26
                    }
                  }
                ],
                line: 55
              },
              '10': {
                loc: {
                  start: {
                    line: 57,
                    column: 27
                  },
                  end: {
                    line: 57,
                    column: 41
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 57,
                      column: 27
                    },
                    end: {
                      line: 57,
                      column: 31
                    }
                  },
                  {
                    start: {
                      line: 57,
                      column: 35
                    },
                    end: {
                      line: 57,
                      column: 41
                    }
                  }
                ],
                line: 57
              },
              '11': {
                loc: {
                  start: {
                    line: 99,
                    column: 6
                  },
                  end: {
                    line: 102,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 99,
                      column: 6
                    },
                    end: {
                      line: 102,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 99,
                      column: 6
                    },
                    end: {
                      line: 102,
                      column: 7
                    }
                  }
                ],
                line: 99
              },
              '12': {
                loc: {
                  start: {
                    line: 104,
                    column: 6
                  },
                  end: {
                    line: 114,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 104,
                      column: 6
                    },
                    end: {
                      line: 114,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 104,
                      column: 6
                    },
                    end: {
                      line: 114,
                      column: 7
                    }
                  }
                ],
                line: 104
              },
              '13': {
                loc: {
                  start: {
                    line: 105,
                    column: 19
                  },
                  end: {
                    line: 105,
                    column: 30
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 105,
                      column: 19
                    },
                    end: {
                      line: 105,
                      column: 20
                    }
                  },
                  {
                    start: {
                      line: 105,
                      column: 24
                    },
                    end: {
                      line: 105,
                      column: 30
                    }
                  }
                ],
                line: 105
              },
              '14': {
                loc: {
                  start: {
                    line: 111,
                    column: 15
                  },
                  end: {
                    line: 111,
                    column: 24
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 111,
                      column: 15
                    },
                    end: {
                      line: 111,
                      column: 19
                    }
                  },
                  {
                    start: {
                      line: 111,
                      column: 23
                    },
                    end: {
                      line: 111,
                      column: 24
                    }
                  }
                ],
                line: 111
              },
              '15': {
                loc: {
                  start: {
                    line: 120,
                    column: 6
                  },
                  end: {
                    line: 125,
                    column: 7
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 120,
                      column: 6
                    },
                    end: {
                      line: 125,
                      column: 7
                    }
                  },
                  {
                    start: {
                      line: 120,
                      column: 6
                    },
                    end: {
                      line: 125,
                      column: 7
                    }
                  }
                ],
                line: 120
              },
              '16': {
                loc: {
                  start: {
                    line: 121,
                    column: 16
                  },
                  end: {
                    line: 121,
                    column: 25
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 121,
                      column: 16
                    },
                    end: {
                      line: 121,
                      column: 20
                    }
                  },
                  {
                    start: {
                      line: 121,
                      column: 24
                    },
                    end: {
                      line: 121,
                      column: 25
                    }
                  }
                ],
                line: 121
              }
            },
            s: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0,
              '10': 0,
              '11': 0,
              '12': 0,
              '13': 0,
              '14': 0,
              '15': 0,
              '16': 0,
              '17': 0,
              '18': 0,
              '19': 0,
              '20': 0,
              '21': 0,
              '22': 0,
              '23': 0,
              '24': 0,
              '25': 0,
              '26': 0,
              '27': 0,
              '28': 0,
              '29': 0,
              '30': 0,
              '31': 0,
              '32': 0,
              '33': 0,
              '34': 0,
              '35': 0,
              '36': 0,
              '37': 0,
              '38': 0,
              '39': 0,
              '40': 0,
              '41': 0,
              '42': 0,
              '43': 0,
              '44': 0,
              '45': 0,
              '46': 0,
              '47': 0,
              '48': 0,
              '49': 0,
              '50': 0,
              '51': 0,
              '52': 0,
              '53': 0,
              '54': 0,
              '55': 0,
              '56': 0,
              '57': 0,
              '58': 0,
              '59': 0,
              '60': 0,
              '61': 0,
              '62': 0
            },
            f: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0
            },
            b: {
              '0': [
                0,
                0
              ],
              '1': [
                0,
                0
              ],
              '2': [
                0,
                0
              ],
              '3': [
                0,
                0
              ],
              '4': [
                0,
                0
              ],
              '5': [
                0,
                0
              ],
              '6': [
                0,
                0
              ],
              '7': [
                0,
                0
              ],
              '8': [
                0,
                0
              ],
              '9': [
                0,
                0
              ],
              '10': [
                0,
                0
              ],
              '11': [
                0,
                0
              ],
              '12': [
                0,
                0
              ],
              '13': [
                0,
                0
              ],
              '14': [
                0,
                0
              ],
              '15': [
                0,
                0
              ],
              '16': [
                0,
                0
              ]
            },
            _coverageSchema: '43e27e138ebf9cfc5966b082cf9a028302ed4184',
            hash: '73481a3a1023af8e533256945b510299bb77457e'
          };
          var coverage = global[gcv] || (global[gcv] = {
          });
          if (coverage[path] && coverage[path].hash === hash) {
            return coverage[path];
          }
          return coverage[path] = coverageData;
        }();
        cov_8ecgv565m.s[0]++;
        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        cov_8ecgv565m.s[1]++;
        exports.default = void 0;
        var _audioContext = (cov_8ecgv565m.s[2]++, _interopRequireDefault(_dereq_('./audioContext')));
        function _interopRequireDefault(obj) {
          cov_8ecgv565m.f[0]++;
          cov_8ecgv565m.s[3]++;
          return (cov_8ecgv565m.b[1][0]++, obj) && (cov_8ecgv565m.b[1][1]++, obj.__esModule) ? (cov_8ecgv565m.b[0][0]++, obj) : (cov_8ecgv565m.b[0][1]++, {
          default:
            obj
          });
        }
        function _classCallCheck(instance, Constructor) {
          cov_8ecgv565m.f[1]++;
          cov_8ecgv565m.s[4]++;
          if (!(instance instanceof Constructor)) {
            cov_8ecgv565m.b[2][0]++;
            cov_8ecgv565m.s[5]++;
            throw new TypeError('Cannot call a class as a function');
          } else {
            cov_8ecgv565m.b[2][1]++;
          }
        }
        function _defineProperties(target, props) {
          cov_8ecgv565m.f[2]++;
          cov_8ecgv565m.s[6]++;
          for (var i = (cov_8ecgv565m.s[7]++, 0); i < props.length; i++) {
            var descriptor = (cov_8ecgv565m.s[8]++, props[i]);
            cov_8ecgv565m.s[9]++;
            descriptor.enumerable = (cov_8ecgv565m.b[3][0]++, descriptor.enumerable) || (cov_8ecgv565m.b[3][1]++, false);
            cov_8ecgv565m.s[10]++;
            descriptor.configurable = true;
            cov_8ecgv565m.s[11]++;
            if ('value' in descriptor) {
              cov_8ecgv565m.b[4][0]++;
              cov_8ecgv565m.s[12]++;
              descriptor.writable = true;
            } else {
              cov_8ecgv565m.b[4][1]++;
            }
            cov_8ecgv565m.s[13]++;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        function _createClass(Constructor, protoProps, staticProps) {
          cov_8ecgv565m.f[3]++;
          cov_8ecgv565m.s[14]++;
          if (protoProps) {
            cov_8ecgv565m.b[5][0]++;
            cov_8ecgv565m.s[15]++;
            _defineProperties(Constructor.prototype, protoProps);
          } else {
            cov_8ecgv565m.b[5][1]++;
          }
          cov_8ecgv565m.s[16]++;
          if (staticProps) {
            cov_8ecgv565m.b[6][0]++;
            cov_8ecgv565m.s[17]++;
            _defineProperties(Constructor, staticProps);
          } else {
            cov_8ecgv565m.b[6][1]++;
          }
          cov_8ecgv565m.s[18]++;
          return Constructor;
        } // reference
        // https://developer.mozilla.org/en-US/docs/Web/API/BaseAudioContext/destination
        // jason recommends to play with the web audio api on the console
        // on google chrome
        /*
 * Class methods
 */
        /**
*
* @class p5sound.Oscillator
* @constructor
* @param {Number} type
*/

        var Oscillator = (        /*#__PURE__*/
        cov_8ecgv565m.s[19]++, function () {
          cov_8ecgv565m.f[4]++;
          function Oscillator(freq, type) {
            cov_8ecgv565m.f[5]++;
            cov_8ecgv565m.s[20]++;
            _classCallCheck(this, Oscillator);
            cov_8ecgv565m.s[21]++;
            this.type = type; //sine, triangle, square, saw, pulse
            cov_8ecgv565m.s[22]++;
            if (typeof freq === 'string') {
              cov_8ecgv565m.b[7][0]++;
              var f = (cov_8ecgv565m.s[23]++, type);
              cov_8ecgv565m.s[24]++;
              type = freq;
              cov_8ecgv565m.s[25]++;
              freq = f;
            } else {
              cov_8ecgv565m.b[7][1]++;
            }
            cov_8ecgv565m.s[26]++;
            if (typeof type === 'number') {
              cov_8ecgv565m.b[8][0]++;
              var _f = (cov_8ecgv565m.s[27]++, type);
              cov_8ecgv565m.s[28]++;
              type = freq;
              cov_8ecgv565m.s[29]++;
              freq = _f;
            } else {
              cov_8ecgv565m.b[8][1]++;
            }
            cov_8ecgv565m.s[30]++;
            this.started = false;
            cov_8ecgv565m.s[31]++;
            this.oscillator = _audioContext.default.createOscillator();
            cov_8ecgv565m.s[32]++;
            this.f = (cov_8ecgv565m.b[9][0]++, freq) || (cov_8ecgv565m.b[9][1]++, 440); // frequency
            cov_8ecgv565m.s[33]++;
            this.oscillator.type = (cov_8ecgv565m.b[10][0]++, type) || (cov_8ecgv565m.b[10][1]++, 'sine');
            cov_8ecgv565m.s[34]++;
            this.oscillator.frequency.setValueAtTime(this.f, _audioContext.default.currentTime); // connections
            cov_8ecgv565m.s[35]++;
            this.output = _audioContext.default.createGain(); // set default output gain to 0.5
            // TODO: maybe think of a constant that people can tweak
            // for max volume
            cov_8ecgv565m.s[36]++;
            this.output.gain.value = 0.5;
            cov_8ecgv565m.s[37]++;
            this.output.gain.setValueAtTime(0.5, _audioContext.default.currentTime);
            cov_8ecgv565m.s[38]++;
            this.oscillator.connect(this.output);
            cov_8ecgv565m.s[39]++;
            this.output.connect(_audioContext.default.destination); // if you wanna do 3D node panners
            // please do it with web audio api,
            // everything we are doing here its compatible
            // add to the soundArray so we can dispose of the osc later
            // p5sound.soundArray.push(this);
            // TODO: try a different approach
            // not create references to the audio nodes
            // so that we dont use up so much memory
            // this.typeName = '';
            // switch(type){
            //   default:
            //   case 0:
            //     this.typeName = 'sine';
            //     break;
            //   case 1:
            //     this.typeName = 'triangle';
            //     break;
            //   case 2:
            //     this.typeName = 'square';
            //     break;
            //   case 3:
            //     this.typeName = 'saw';
            //     break;
            //   case 4:
            //     this.typeName = 'pulse';
            //     break;
            // }
          }
          cov_8ecgv565m.s[40]++;
          _createClass(Oscillator, [
            {
              key: 'start',
              value: function start(time, f) {
                cov_8ecgv565m.f[6]++;
                cov_8ecgv565m.s[41]++;
                if (this.started) {
                  cov_8ecgv565m.b[11][0]++;
                  var now = (cov_8ecgv565m.s[42]++, _audioContext.default.currentTime);
                  cov_8ecgv565m.s[43]++;
                  this.stop(now);
                } else {
                  cov_8ecgv565m.b[11][1]++;
                }
                cov_8ecgv565m.s[44]++;
                if (!this.started) {
                  cov_8ecgv565m.b[12][0]++;
                  var freq = (cov_8ecgv565m.s[45]++, (cov_8ecgv565m.b[13][0]++, f) || (cov_8ecgv565m.b[13][1]++, this.f));
                  var type = (cov_8ecgv565m.s[46]++, this.oscillator.type);
                  cov_8ecgv565m.s[47]++;
                  this.oscillator = _audioContext.default.createOscillator();
                  cov_8ecgv565m.s[48]++;
                  this.oscillator.frequency.value = Math.abs(freq);
                  cov_8ecgv565m.s[49]++;
                  this.oscillator.type = type;
                  cov_8ecgv565m.s[50]++;
                  this.oscillator.connect(this.output);
                  cov_8ecgv565m.s[51]++;
                  time = (cov_8ecgv565m.b[14][0]++, time) || (cov_8ecgv565m.b[14][1]++, 0);
                  cov_8ecgv565m.s[52]++;
                  this.oscillator.start(time + _audioContext.default.currentTime);
                  cov_8ecgv565m.s[53]++;
                  this.started = true;
                } else {
                  cov_8ecgv565m.b[12][1]++;
                }
              } // hopefully we can get rid of the started variable

            },
            {
              key: 'stop',
              value: function stop(time) {
                cov_8ecgv565m.f[7]++;
                cov_8ecgv565m.s[54]++;
                if (this.started) {
                  cov_8ecgv565m.b[15][0]++;
                  var t = (cov_8ecgv565m.s[55]++, (cov_8ecgv565m.b[16][0]++, time) || (cov_8ecgv565m.b[16][1]++, 0));
                  var now = (cov_8ecgv565m.s[56]++, _audioContext.default.currentTime);
                  cov_8ecgv565m.s[57]++;
                  this.oscillator.stop(t + now);
                  cov_8ecgv565m.s[58]++;
                  this.started = false;
                } else {
                  cov_8ecgv565m.b[15][1]++;
                }
              }              /**
    * Dummy method
    *
    * @method helloworld
    *
    */

            },
            {
              key: 'helloworld',
              value: function helloworld() {
                cov_8ecgv565m.f[8]++;
                cov_8ecgv565m.s[59]++;
                console.log(this.typeName);
              }
            }
          ]);
          cov_8ecgv565m.s[60]++;
          return Oscillator;
        }());
        var _default = (cov_8ecgv565m.s[61]++, Oscillator);
        cov_8ecgv565m.s[62]++;
        exports.default = _default;
      },
      {
        './audioContext': 157
      }
    ],
    160: [
      function (_dereq_, module, exports) {
        'use strict';
        var cov_213g5asg01 = function () {
          var path = '/Users/montoyamoraga/github/processing/p5.sound.js/src/sound/p5sound.SoundFile.js';
          var hash = 'a58ab71a7fa9d2d6c0b96497aeaf9448d3a64b47';
          var global = new Function('return this') ();
          var gcv = '__coverage__';
          var coverageData = {
            path: '/Users/montoyamoraga/github/processing/p5.sound.js/src/sound/p5sound.SoundFile.js',
            statementMap: {
              '0': {
                start: {
                  line: 3,
                  column: 0
                },
                end: {
                  line: 5,
                  column: 3
                }
              },
              '1': {
                start: {
                  line: 6,
                  column: 0
                },
                end: {
                  line: 6,
                  column: 25
                }
              },
              '2': {
                start: {
                  line: 8,
                  column: 12
                },
                end: {
                  line: 8,
                  column: 59
                }
              },
              '3': {
                start: {
                  line: 10,
                  column: 39
                },
                end: {
                  line: 10,
                  column: 93
                }
              },
              '4': {
                start: {
                  line: 12,
                  column: 50
                },
                end: {
                  line: 12,
                  column: 151
                }
              },
              '5': {
                start: {
                  line: 12,
                  column: 92
                },
                end: {
                  line: 12,
                  column: 149
                }
              },
              '6': {
                start: {
                  line: 14,
                  column: 44
                },
                end: {
                  line: 14,
                  column: 315
                }
              },
              '7': {
                start: {
                  line: 14,
                  column: 57
                },
                end: {
                  line: 14,
                  column: 58
                }
              },
              '8': {
                start: {
                  line: 14,
                  column: 102
                },
                end: {
                  line: 14,
                  column: 110
                }
              },
              '9': {
                start: {
                  line: 14,
                  column: 112
                },
                end: {
                  line: 14,
                  column: 167
                }
              },
              '10': {
                start: {
                  line: 14,
                  column: 168
                },
                end: {
                  line: 14,
                  column: 199
                }
              },
              '11': {
                start: {
                  line: 14,
                  column: 200
                },
                end: {
                  line: 14,
                  column: 254
                }
              },
              '12': {
                start: {
                  line: 14,
                  column: 227
                },
                end: {
                  line: 14,
                  column: 254
                }
              },
              '13': {
                start: {
                  line: 14,
                  column: 255
                },
                end: {
                  line: 14,
                  column: 313
                }
              },
              '14': {
                start: {
                  line: 16,
                  column: 62
                },
                end: {
                  line: 16,
                  column: 131
                }
              },
              '15': {
                start: {
                  line: 16,
                  column: 78
                },
                end: {
                  line: 16,
                  column: 131
                }
              },
              '16': {
                start: {
                  line: 16,
                  column: 132
                },
                end: {
                  line: 16,
                  column: 193
                }
              },
              '17': {
                start: {
                  line: 16,
                  column: 149
                },
                end: {
                  line: 16,
                  column: 193
                }
              },
              '18': {
                start: {
                  line: 16,
                  column: 194
                },
                end: {
                  line: 16,
                  column: 213
                }
              },
              '19': {
                start: {
                  line: 24,
                  column: 0
                },
                end: {
                  line: 56,
                  column: 4
                }
              },
              '20': {
                start: {
                  line: 28,
                  column: 4
                },
                end: {
                  line: 28,
                  column: 34
                }
              },
              '21': {
                start: {
                  line: 30,
                  column: 4
                },
                end: {
                  line: 30,
                  column: 21
                }
              },
              '22': {
                start: {
                  line: 33,
                  column: 2
                },
                end: {
                  line: 53,
                  column: 6
                }
              },
              '23': {
                start: {
                  line: 36,
                  column: 6
                },
                end: {
                  line: 36,
                  column: 30
                }
              },
              '24': {
                start: {
                  line: 41,
                  column: 6
                },
                end: {
                  line: 41,
                  column: 26
                }
              },
              '25': {
                start: {
                  line: 46,
                  column: 6
                },
                end: {
                  line: 46,
                  column: 30
                }
              },
              '26': {
                start: {
                  line: 51,
                  column: 6
                },
                end: {
                  line: 51,
                  column: 27
                }
              },
              '27': {
                start: {
                  line: 55,
                  column: 2
                },
                end: {
                  line: 55,
                  column: 16
                }
              },
              '28': {
                start: {
                  line: 58,
                  column: 15
                },
                end: {
                  line: 58,
                  column: 38
                }
              },
              '29': {
                start: {
                  line: 59,
                  column: 0
                },
                end: {
                  line: 59,
                  column: 27
                }
              }
            },
            fnMap: {
              '0': {
                name: '_interopRequireDefault',
                decl: {
                  start: {
                    line: 10,
                    column: 9
                  },
                  end: {
                    line: 10,
                    column: 31
                  }
                },
                loc: {
                  start: {
                    line: 10,
                    column: 37
                  },
                  end: {
                    line: 10,
                    column: 95
                  }
                },
                line: 10
              },
              '1': {
                name: '_classCallCheck',
                decl: {
                  start: {
                    line: 12,
                    column: 9
                  },
                  end: {
                    line: 12,
                    column: 24
                  }
                },
                loc: {
                  start: {
                    line: 12,
                    column: 48
                  },
                  end: {
                    line: 12,
                    column: 153
                  }
                },
                line: 12
              },
              '2': {
                name: '_defineProperties',
                decl: {
                  start: {
                    line: 14,
                    column: 9
                  },
                  end: {
                    line: 14,
                    column: 26
                  }
                },
                loc: {
                  start: {
                    line: 14,
                    column: 42
                  },
                  end: {
                    line: 14,
                    column: 317
                  }
                },
                line: 14
              },
              '3': {
                name: '_createClass',
                decl: {
                  start: {
                    line: 16,
                    column: 9
                  },
                  end: {
                    line: 16,
                    column: 21
                  }
                },
                loc: {
                  start: {
                    line: 16,
                    column: 60
                  },
                  end: {
                    line: 16,
                    column: 215
                  }
                },
                line: 16
              },
              '4': {
                name: '(anonymous_4)',
                decl: {
                  start: {
                    line: 26,
                    column: 0
                  },
                  end: {
                    line: 26,
                    column: 1
                  }
                },
                loc: {
                  start: {
                    line: 26,
                    column: 12
                  },
                  end: {
                    line: 56,
                    column: 1
                  }
                },
                line: 26
              },
              '5': {
                name: '_class',
                decl: {
                  start: {
                    line: 27,
                    column: 11
                  },
                  end: {
                    line: 27,
                    column: 17
                  }
                },
                loc: {
                  start: {
                    line: 27,
                    column: 24
                  },
                  end: {
                    line: 31,
                    column: 3
                  }
                },
                line: 27
              },
              '6': {
                name: 'isLoaded',
                decl: {
                  start: {
                    line: 35,
                    column: 20
                  },
                  end: {
                    line: 35,
                    column: 28
                  }
                },
                loc: {
                  start: {
                    line: 35,
                    column: 31
                  },
                  end: {
                    line: 37,
                    column: 5
                  }
                },
                line: 35
              },
              '7': {
                name: 'play',
                decl: {
                  start: {
                    line: 40,
                    column: 20
                  },
                  end: {
                    line: 40,
                    column: 24
                  }
                },
                loc: {
                  start: {
                    line: 40,
                    column: 27
                  },
                  end: {
                    line: 42,
                    column: 5
                  }
                },
                line: 40
              },
              '8': {
                name: 'playMode',
                decl: {
                  start: {
                    line: 45,
                    column: 20
                  },
                  end: {
                    line: 45,
                    column: 28
                  }
                },
                loc: {
                  start: {
                    line: 45,
                    column: 31
                  },
                  end: {
                    line: 47,
                    column: 5
                  }
                },
                line: 45
              },
              '9': {
                name: 'pause',
                decl: {
                  start: {
                    line: 50,
                    column: 20
                  },
                  end: {
                    line: 50,
                    column: 25
                  }
                },
                loc: {
                  start: {
                    line: 50,
                    column: 28
                  },
                  end: {
                    line: 52,
                    column: 5
                  }
                },
                line: 50
              }
            },
            branchMap: {
              '0': {
                loc: {
                  start: {
                    line: 10,
                    column: 46
                  },
                  end: {
                    line: 10,
                    column: 92
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 10,
                      column: 70
                    },
                    end: {
                      line: 10,
                      column: 73
                    }
                  },
                  {
                    start: {
                      line: 10,
                      column: 76
                    },
                    end: {
                      line: 10,
                      column: 92
                    }
                  }
                ],
                line: 10
              },
              '1': {
                loc: {
                  start: {
                    line: 10,
                    column: 46
                  },
                  end: {
                    line: 10,
                    column: 67
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 10,
                      column: 46
                    },
                    end: {
                      line: 10,
                      column: 49
                    }
                  },
                  {
                    start: {
                      line: 10,
                      column: 53
                    },
                    end: {
                      line: 10,
                      column: 67
                    }
                  }
                ],
                line: 10
              },
              '2': {
                loc: {
                  start: {
                    line: 12,
                    column: 50
                  },
                  end: {
                    line: 12,
                    column: 151
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 12,
                      column: 50
                    },
                    end: {
                      line: 12,
                      column: 151
                    }
                  },
                  {
                    start: {
                      line: 12,
                      column: 50
                    },
                    end: {
                      line: 12,
                      column: 151
                    }
                  }
                ],
                line: 12
              },
              '3': {
                loc: {
                  start: {
                    line: 14,
                    column: 136
                  },
                  end: {
                    line: 14,
                    column: 166
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 14,
                      column: 136
                    },
                    end: {
                      line: 14,
                      column: 157
                    }
                  },
                  {
                    start: {
                      line: 14,
                      column: 161
                    },
                    end: {
                      line: 14,
                      column: 166
                    }
                  }
                ],
                line: 14
              },
              '4': {
                loc: {
                  start: {
                    line: 14,
                    column: 200
                  },
                  end: {
                    line: 14,
                    column: 254
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 14,
                      column: 200
                    },
                    end: {
                      line: 14,
                      column: 254
                    }
                  },
                  {
                    start: {
                      line: 14,
                      column: 200
                    },
                    end: {
                      line: 14,
                      column: 254
                    }
                  }
                ],
                line: 14
              },
              '5': {
                loc: {
                  start: {
                    line: 16,
                    column: 62
                  },
                  end: {
                    line: 16,
                    column: 131
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 16,
                      column: 62
                    },
                    end: {
                      line: 16,
                      column: 131
                    }
                  },
                  {
                    start: {
                      line: 16,
                      column: 62
                    },
                    end: {
                      line: 16,
                      column: 131
                    }
                  }
                ],
                line: 16
              },
              '6': {
                loc: {
                  start: {
                    line: 16,
                    column: 132
                  },
                  end: {
                    line: 16,
                    column: 193
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 16,
                      column: 132
                    },
                    end: {
                      line: 16,
                      column: 193
                    }
                  },
                  {
                    start: {
                      line: 16,
                      column: 132
                    },
                    end: {
                      line: 16,
                      column: 193
                    }
                  }
                ],
                line: 16
              }
            },
            s: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0,
              '10': 0,
              '11': 0,
              '12': 0,
              '13': 0,
              '14': 0,
              '15': 0,
              '16': 0,
              '17': 0,
              '18': 0,
              '19': 0,
              '20': 0,
              '21': 0,
              '22': 0,
              '23': 0,
              '24': 0,
              '25': 0,
              '26': 0,
              '27': 0,
              '28': 0,
              '29': 0
            },
            f: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0
            },
            b: {
              '0': [
                0,
                0
              ],
              '1': [
                0,
                0
              ],
              '2': [
                0,
                0
              ],
              '3': [
                0,
                0
              ],
              '4': [
                0,
                0
              ],
              '5': [
                0,
                0
              ],
              '6': [
                0,
                0
              ]
            },
            _coverageSchema: '43e27e138ebf9cfc5966b082cf9a028302ed4184',
            hash: 'a58ab71a7fa9d2d6c0b96497aeaf9448d3a64b47'
          };
          var coverage = global[gcv] || (global[gcv] = {
          });
          if (coverage[path] && coverage[path].hash === hash) {
            return coverage[path];
          }
          return coverage[path] = coverageData;
        }();
        cov_213g5asg01.s[0]++;
        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        cov_213g5asg01.s[1]++;
        exports.default = void 0;
        var _main = (cov_213g5asg01.s[2]++, _interopRequireDefault(_dereq_('../core/main')));
        function _interopRequireDefault(obj) {
          cov_213g5asg01.f[0]++;
          cov_213g5asg01.s[3]++;
          return (cov_213g5asg01.b[1][0]++, obj) && (cov_213g5asg01.b[1][1]++, obj.__esModule) ? (cov_213g5asg01.b[0][0]++, obj) : (cov_213g5asg01.b[0][1]++, {
          default:
            obj
          });
        }
        function _classCallCheck(instance, Constructor) {
          cov_213g5asg01.f[1]++;
          cov_213g5asg01.s[4]++;
          if (!(instance instanceof Constructor)) {
            cov_213g5asg01.b[2][0]++;
            cov_213g5asg01.s[5]++;
            throw new TypeError('Cannot call a class as a function');
          } else {
            cov_213g5asg01.b[2][1]++;
          }
        }
        function _defineProperties(target, props) {
          cov_213g5asg01.f[2]++;
          cov_213g5asg01.s[6]++;
          for (var i = (cov_213g5asg01.s[7]++, 0); i < props.length; i++) {
            var descriptor = (cov_213g5asg01.s[8]++, props[i]);
            cov_213g5asg01.s[9]++;
            descriptor.enumerable = (cov_213g5asg01.b[3][0]++, descriptor.enumerable) || (cov_213g5asg01.b[3][1]++, false);
            cov_213g5asg01.s[10]++;
            descriptor.configurable = true;
            cov_213g5asg01.s[11]++;
            if ('value' in descriptor) {
              cov_213g5asg01.b[4][0]++;
              cov_213g5asg01.s[12]++;
              descriptor.writable = true;
            } else {
              cov_213g5asg01.b[4][1]++;
            }
            cov_213g5asg01.s[13]++;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        function _createClass(Constructor, protoProps, staticProps) {
          cov_213g5asg01.f[3]++;
          cov_213g5asg01.s[14]++;
          if (protoProps) {
            cov_213g5asg01.b[5][0]++;
            cov_213g5asg01.s[15]++;
            _defineProperties(Constructor.prototype, protoProps);
          } else {
            cov_213g5asg01.b[5][1]++;
          }
          cov_213g5asg01.s[16]++;
          if (staticProps) {
            cov_213g5asg01.b[6][0]++;
            cov_213g5asg01.s[17]++;
            _defineProperties(Constructor, staticProps);
          } else {
            cov_213g5asg01.b[6][1]++;
          }
          cov_213g5asg01.s[18]++;
          return Constructor;
        }        /*
* @class p5sound.Oscillator
* @constructor
* @param {String|Array} path to a sound file (String). Optionally, you may include multiple file formats in an array. Alternately, accepts an object from the HTML5 File API, or a p5sound.File.
* @param {Function} [successCallback] Name of a function to call once file loads.
*/

        cov_213g5asg01.s[19]++;
        _main.default.SoundFile =        /*#__PURE__*/
        function () {
          cov_213g5asg01.f[4]++;
          function _class(path) {
            cov_213g5asg01.f[5]++;
            cov_213g5asg01.s[20]++;
            _classCallCheck(this, _class);
            cov_213g5asg01.s[21]++;
            this.path = path;
          }
          cov_213g5asg01.s[22]++;
          _createClass(_class, [
            {
              key: 'isLoaded',
              value: function isLoaded() {
                cov_213g5asg01.f[6]++;
                cov_213g5asg01.s[23]++;
                console.log('isLoaded');
              }
            },
            {
              key: 'play',
              value: function play() {
                cov_213g5asg01.f[7]++;
                cov_213g5asg01.s[24]++;
                console.log('play');
              }
            },
            {
              key: 'playMode',
              value: function playMode() {
                cov_213g5asg01.f[8]++;
                cov_213g5asg01.s[25]++;
                console.log('playMode');
              }
            },
            {
              key: 'pause',
              value: function pause() {
                cov_213g5asg01.f[9]++;
                cov_213g5asg01.s[26]++;
                console.log('pause');
              }
            }
          ]);
          cov_213g5asg01.s[27]++;
          return _class;
        }();
        var _default = (cov_213g5asg01.s[28]++, _main.default.SoundFile);
        cov_213g5asg01.s[29]++;
        exports.default = _default;
      },
      {
        '../core/main': 148
      }
    ],
    161: [
      function (_dereq_, module, exports) {
        'use strict';
        var cov_184d7fky2f = function () {
          var path = '/Users/montoyamoraga/github/processing/p5.sound.js/src/utilities/conversion.js';
          var hash = 'cdfe1ca273e729a09c14f3ea4bc801cd1bfc6437';
          var global = new Function('return this') ();
          var gcv = '__coverage__';
          var coverageData = {
            path: '/Users/montoyamoraga/github/processing/p5.sound.js/src/utilities/conversion.js',
            statementMap: {
              '0': {
                start: {
                  line: 3,
                  column: 0
                },
                end: {
                  line: 3,
                  column: 40
                }
              },
              '1': {
                start: {
                  line: 5,
                  column: 0
                },
                end: {
                  line: 7,
                  column: 3
                }
              },
              '2': {
                start: {
                  line: 8,
                  column: 0
                },
                end: {
                  line: 8,
                  column: 25
                }
              },
              '3': {
                start: {
                  line: 10,
                  column: 12
                },
                end: {
                  line: 10,
                  column: 59
                }
              },
              '4': {
                start: {
                  line: 12,
                  column: 39
                },
                end: {
                  line: 12,
                  column: 93
                }
              },
              '5': {
                start: {
                  line: 50,
                  column: 0
                },
                end: {
                  line: 68,
                  column: 2
                }
              },
              '6': {
                start: {
                  line: 51,
                  column: 14
                },
                end: {
                  line: 51,
                  column: 84
                }
              },
              '7': {
                start: {
                  line: 53,
                  column: 2
                },
                end: {
                  line: 67,
                  column: 3
                }
              },
              '8': {
                start: {
                  line: 54,
                  column: 4
                },
                end: {
                  line: 54,
                  column: 20
                }
              },
              '9': {
                start: {
                  line: 55,
                  column: 9
                },
                end: {
                  line: 67,
                  column: 3
                }
              },
              '10': {
                start: {
                  line: 56,
                  column: 4
                },
                end: {
                  line: 56,
                  column: 21
                }
              },
              '11': {
                start: {
                  line: 57,
                  column: 9
                },
                end: {
                  line: 67,
                  column: 3
                }
              },
              '12': {
                start: {
                  line: 58,
                  column: 4
                },
                end: {
                  line: 58,
                  column: 30
                }
              },
              '13': {
                start: {
                  line: 59,
                  column: 9
                },
                end: {
                  line: 67,
                  column: 3
                }
              },
              '14': {
                start: {
                  line: 60,
                  column: 4
                },
                end: {
                  line: 60,
                  column: 17
                }
              },
              '15': {
                start: {
                  line: 61,
                  column: 9
                },
                end: {
                  line: 67,
                  column: 3
                }
              },
              '16': {
                start: {
                  line: 62,
                  column: 4
                },
                end: {
                  line: 62,
                  column: 21
                }
              },
              '17': {
                start: {
                  line: 63,
                  column: 9
                },
                end: {
                  line: 67,
                  column: 3
                }
              },
              '18': {
                start: {
                  line: 64,
                  column: 4
                },
                end: {
                  line: 66,
                  column: 7
                }
              },
              '19': {
                start: {
                  line: 65,
                  column: 6
                },
                end: {
                  line: 65,
                  column: 51
                }
              },
              '20': {
                start: {
                  line: 70,
                  column: 15
                },
                end: {
                  line: 70,
                  column: 28
                }
              },
              '21': {
                start: {
                  line: 71,
                  column: 0
                },
                end: {
                  line: 71,
                  column: 27
                }
              }
            },
            fnMap: {
              '0': {
                name: '_interopRequireDefault',
                decl: {
                  start: {
                    line: 12,
                    column: 9
                  },
                  end: {
                    line: 12,
                    column: 31
                  }
                },
                loc: {
                  start: {
                    line: 12,
                    column: 37
                  },
                  end: {
                    line: 12,
                    column: 95
                  }
                },
                line: 12
              },
              '1': {
                name: '(anonymous_1)',
                decl: {
                  start: {
                    line: 50,
                    column: 30
                  },
                  end: {
                    line: 50,
                    column: 31
                  }
                },
                loc: {
                  start: {
                    line: 50,
                    column: 43
                  },
                  end: {
                    line: 68,
                    column: 1
                  }
                },
                line: 50
              },
              '2': {
                name: '(anonymous_2)',
                decl: {
                  start: {
                    line: 64,
                    column: 17
                  },
                  end: {
                    line: 64,
                    column: 18
                  }
                },
                loc: {
                  start: {
                    line: 64,
                    column: 30
                  },
                  end: {
                    line: 66,
                    column: 5
                  }
                },
                line: 64
              }
            },
            branchMap: {
              '0': {
                loc: {
                  start: {
                    line: 12,
                    column: 46
                  },
                  end: {
                    line: 12,
                    column: 92
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 12,
                      column: 70
                    },
                    end: {
                      line: 12,
                      column: 73
                    }
                  },
                  {
                    start: {
                      line: 12,
                      column: 76
                    },
                    end: {
                      line: 12,
                      column: 92
                    }
                  }
                ],
                line: 12
              },
              '1': {
                loc: {
                  start: {
                    line: 12,
                    column: 46
                  },
                  end: {
                    line: 12,
                    column: 67
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 12,
                      column: 46
                    },
                    end: {
                      line: 12,
                      column: 49
                    }
                  },
                  {
                    start: {
                      line: 12,
                      column: 53
                    },
                    end: {
                      line: 12,
                      column: 67
                    }
                  }
                ],
                line: 12
              },
              '2': {
                loc: {
                  start: {
                    line: 51,
                    column: 14
                  },
                  end: {
                    line: 51,
                    column: 84
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 51,
                      column: 67
                    },
                    end: {
                      line: 51,
                      column: 79
                    }
                  },
                  {
                    start: {
                      line: 51,
                      column: 82
                    },
                    end: {
                      line: 51,
                      column: 84
                    }
                  }
                ],
                line: 51
              },
              '3': {
                loc: {
                  start: {
                    line: 51,
                    column: 14
                  },
                  end: {
                    line: 51,
                    column: 64
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 51,
                      column: 14
                    },
                    end: {
                      line: 51,
                      column: 34
                    }
                  },
                  {
                    start: {
                      line: 51,
                      column: 38
                    },
                    end: {
                      line: 51,
                      column: 64
                    }
                  }
                ],
                line: 51
              },
              '4': {
                loc: {
                  start: {
                    line: 53,
                    column: 2
                  },
                  end: {
                    line: 67,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 53,
                      column: 2
                    },
                    end: {
                      line: 67,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 53,
                      column: 2
                    },
                    end: {
                      line: 67,
                      column: 3
                    }
                  }
                ],
                line: 53
              },
              '5': {
                loc: {
                  start: {
                    line: 53,
                    column: 6
                  },
                  end: {
                    line: 53,
                    column: 40
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 53,
                      column: 6
                    },
                    end: {
                      line: 53,
                      column: 20
                    }
                  },
                  {
                    start: {
                      line: 53,
                      column: 24
                    },
                    end: {
                      line: 53,
                      column: 40
                    }
                  }
                ],
                line: 53
              },
              '6': {
                loc: {
                  start: {
                    line: 55,
                    column: 9
                  },
                  end: {
                    line: 67,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 55,
                      column: 9
                    },
                    end: {
                      line: 67,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 55,
                      column: 9
                    },
                    end: {
                      line: 67,
                      column: 3
                    }
                  }
                ],
                line: 55
              },
              '7': {
                loc: {
                  start: {
                    line: 55,
                    column: 13
                  },
                  end: {
                    line: 55,
                    column: 49
                  }
                },
                type: 'binary-expr',
                locations: [
                  {
                    start: {
                      line: 55,
                      column: 13
                    },
                    end: {
                      line: 55,
                      column: 28
                    }
                  },
                  {
                    start: {
                      line: 55,
                      column: 32
                    },
                    end: {
                      line: 55,
                      column: 49
                    }
                  }
                ],
                line: 55
              },
              '8': {
                loc: {
                  start: {
                    line: 57,
                    column: 9
                  },
                  end: {
                    line: 67,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 57,
                      column: 9
                    },
                    end: {
                      line: 67,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 57,
                      column: 9
                    },
                    end: {
                      line: 67,
                      column: 3
                    }
                  }
                ],
                line: 57
              },
              '9': {
                loc: {
                  start: {
                    line: 59,
                    column: 9
                  },
                  end: {
                    line: 67,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 59,
                      column: 9
                    },
                    end: {
                      line: 67,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 59,
                      column: 9
                    },
                    end: {
                      line: 67,
                      column: 3
                    }
                  }
                ],
                line: 59
              },
              '10': {
                loc: {
                  start: {
                    line: 61,
                    column: 9
                  },
                  end: {
                    line: 67,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 61,
                      column: 9
                    },
                    end: {
                      line: 67,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 61,
                      column: 9
                    },
                    end: {
                      line: 67,
                      column: 3
                    }
                  }
                ],
                line: 61
              },
              '11': {
                loc: {
                  start: {
                    line: 62,
                    column: 11
                  },
                  end: {
                    line: 62,
                    column: 20
                  }
                },
                type: 'cond-expr',
                locations: [
                  {
                    start: {
                      line: 62,
                      column: 15
                    },
                    end: {
                      line: 62,
                      column: 16
                    }
                  },
                  {
                    start: {
                      line: 62,
                      column: 19
                    },
                    end: {
                      line: 62,
                      column: 20
                    }
                  }
                ],
                line: 62
              },
              '12': {
                loc: {
                  start: {
                    line: 63,
                    column: 9
                  },
                  end: {
                    line: 67,
                    column: 3
                  }
                },
                type: 'if',
                locations: [
                  {
                    start: {
                      line: 63,
                      column: 9
                    },
                    end: {
                      line: 67,
                      column: 3
                    }
                  },
                  {
                    start: {
                      line: 63,
                      column: 9
                    },
                    end: {
                      line: 67,
                      column: 3
                    }
                  }
                ],
                line: 63
              }
            },
            s: {
              '0': 0,
              '1': 0,
              '2': 0,
              '3': 0,
              '4': 0,
              '5': 0,
              '6': 0,
              '7': 0,
              '8': 0,
              '9': 0,
              '10': 0,
              '11': 0,
              '12': 0,
              '13': 0,
              '14': 0,
              '15': 0,
              '16': 0,
              '17': 0,
              '18': 0,
              '19': 0,
              '20': 0,
              '21': 0
            },
            f: {
              '0': 0,
              '1': 0,
              '2': 0
            },
            b: {
              '0': [
                0,
                0
              ],
              '1': [
                0,
                0
              ],
              '2': [
                0,
                0
              ],
              '3': [
                0,
                0
              ],
              '4': [
                0,
                0
              ],
              '5': [
                0,
                0
              ],
              '6': [
                0,
                0
              ],
              '7': [
                0,
                0
              ],
              '8': [
                0,
                0
              ],
              '9': [
                0,
                0
              ],
              '10': [
                0,
                0
              ],
              '11': [
                0,
                0
              ],
              '12': [
                0,
                0
              ]
            },
            _coverageSchema: '43e27e138ebf9cfc5966b082cf9a028302ed4184',
            hash: 'cdfe1ca273e729a09c14f3ea4bc801cd1bfc6437'
          };
          var coverage = global[gcv] || (global[gcv] = {
          });
          if (coverage[path] && coverage[path].hash === hash) {
            return coverage[path];
          }
          return coverage[path] = coverageData;
        }();
        _dereq_('core-js/modules/es.array.map');
        cov_184d7fky2f.s[0]++;
        _dereq_('core-js/modules/es.array.map');
        cov_184d7fky2f.s[1]++;
        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        cov_184d7fky2f.s[2]++;
        exports.default = void 0;
        var _main = (cov_184d7fky2f.s[3]++, _interopRequireDefault(_dereq_('../core/main')));
        function _interopRequireDefault(obj) {
          cov_184d7fky2f.f[0]++;
          cov_184d7fky2f.s[4]++;
          return (cov_184d7fky2f.b[1][0]++, obj) && (cov_184d7fky2f.b[1][1]++, obj.__esModule) ? (cov_184d7fky2f.b[0][0]++, obj) : (cov_184d7fky2f.b[0][1]++, {
          default:
            obj
          });
        }        /**
 * @module Data
 * @submodule Conversion
 * @for p5
 * @requires core
 */
        /**
 * Converts a boolean, string, or float to its integer representation.
 * When an array of values is passed in, then an int array of the same length
 * is returned.
 *
 * @method int
 * @param {String|Boolean|Number}       n value to parse
 * @param {Integer}       [radix] the radix to convert to (default: 10)
 * @return {Number}                     integer representation of value
 *
 * @example
 * <div class='norender'><code>
 * print(int('10')); // 10
 * print(int(10.31)); // 10
 * print(int(-10)); // -10
 * print(int(true)); // 1
 * print(int(false)); // 0
 * print(int([false, true, '10.3', 9.8])); // [0, 1, 10, 9]
 * print(int(Infinity)); // Infinity
 * print(int('-Infinity')); // -Infinity
 * </code></div>
 */
        /**
 * @method int
 * @param {Array} ns                    values to parse
 * @param {Integer}       [radix]
 * @return {Number[]}                   integer representation of values
 */

        cov_184d7fky2f.s[5]++;
        _main.default.prototype.int = function (n) {
          cov_184d7fky2f.f[1]++;
          var radix = (cov_184d7fky2f.s[6]++, (cov_184d7fky2f.b[3][0]++, arguments.length > 1) && (cov_184d7fky2f.b[3][1]++, arguments[1] !== undefined) ? (cov_184d7fky2f.b[2][0]++, arguments[1]) : (cov_184d7fky2f.b[2][1]++, 10));
          cov_184d7fky2f.s[7]++;
          if ((cov_184d7fky2f.b[5][0]++, n === Infinity) || (cov_184d7fky2f.b[5][1]++, n === 'Infinity')) {
            cov_184d7fky2f.b[4][0]++;
            cov_184d7fky2f.s[8]++;
            return Infinity;
          } else {
            cov_184d7fky2f.b[4][1]++;
            cov_184d7fky2f.s[9]++;
            if ((cov_184d7fky2f.b[7][0]++, n === - Infinity) || (cov_184d7fky2f.b[7][1]++, n === '-Infinity')) {
              cov_184d7fky2f.b[6][0]++;
              cov_184d7fky2f.s[10]++;
              return - Infinity;
            } else {
              cov_184d7fky2f.b[6][1]++;
              cov_184d7fky2f.s[11]++;
              if (typeof n === 'string') {
                cov_184d7fky2f.b[8][0]++;
                cov_184d7fky2f.s[12]++;
                return parseInt(n, radix);
              } else {
                cov_184d7fky2f.b[8][1]++;
                cov_184d7fky2f.s[13]++;
                if (typeof n === 'number') {
                  cov_184d7fky2f.b[9][0]++;
                  cov_184d7fky2f.s[14]++;
                  return n | 0;
                } else {
                  cov_184d7fky2f.b[9][1]++;
                  cov_184d7fky2f.s[15]++;
                  if (typeof n === 'boolean') {
                    cov_184d7fky2f.b[10][0]++;
                    cov_184d7fky2f.s[16]++;
                    return n ? (cov_184d7fky2f.b[11][0]++, 1) : (cov_184d7fky2f.b[11][1]++, 0);
                  } else {
                    cov_184d7fky2f.b[10][1]++;
                    cov_184d7fky2f.s[17]++;
                    if (n instanceof Array) {
                      cov_184d7fky2f.b[12][0]++;
                      cov_184d7fky2f.s[18]++;
                      return n.map(function (n) {
                        cov_184d7fky2f.f[2]++;
                        cov_184d7fky2f.s[19]++;
                        return _main.default.prototype.int(n, radix);
                      });
                    } else {
                      cov_184d7fky2f.b[12][1]++;
                    }
                  }
                }
              }
            }
          }
        };
        var _default = (cov_184d7fky2f.s[20]++, _main.default);
        cov_184d7fky2f.s[21]++;
        exports.default = _default;
      },
      {
        '../core/main': 148,
        'core-js/modules/es.array.map': 122
      }
    ]
  }, {
  }, [
    141
  ]) (141)
});
